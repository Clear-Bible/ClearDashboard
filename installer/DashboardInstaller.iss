; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "ClearDashboard"
#define MyAppVersion "1.4.0.4"
#define MyAppPublisher "Clear Bible, Inc."
#define MyAppURL "https://www.clear.bible/"
#define MyAppExeName "ClearDashboard.Wpf.Application.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt
#define MyAppHelpDocsName "Dashboard_Instructions.pdf"
#define MyAppId "{{CD4BA885-D292-46D1-9EB8-1049865E327B}"
#define MyAppPluginFolder "ClearDashboardWebApiPlugin"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={#MyAppId}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={commonpf64}\{#MyAppName}
ChangesAssociations=yes
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename=ClearDashboard
SetupIconFile=..\src\ClearDashboard.Wpf.Application\Assets\ClearDashboard_Icon.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern
ArchitecturesAllowed=x64
UninstallDisplayIcon={uninstallexe}
Uninstallable=yes
UninstallIconFile=..\src\ClearDashboard.Wpf.Application\Assets\ClearDashboard_Icon.ico
DisableDirPage=yes
ArchitecturesInstallIn64BitMode=x64
PrivilegesRequired=admin
SetupLogging=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
;Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"
;Name: "french"; MessagesFile: "compiler:Languages\French.isl"
;Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"
;Name: "portuguese"; MessagesFile: "compiler:Languages\Portuguese.isl"
;Name: "brazilianPortuguese"; MessagesFile: "compiler:Languages\BrazilianPortuguese.isl"
;Name: "german"; MessagesFile: "compiler:Languages\German.isl"
;Name: "turkish"; MessagesFile: "compiler:Languages\Turkish.isl"

;Add issrc files from github to the Langauges folder in ProgramFiles(x86)\InnoSetup6\Languages
;For .islu file open them in Notepad and save without changes to add the UTF-8 Byte order mark

;Name: "Armenian"; MessagesFile: "compiler:Languages\Armenian.isl"
;Name: "BrazilianPortuguese"; MessagesFile: "compiler:Languages\BrazilianPortuguese.isl"
;Name: "Bulgarian"; MessagesFile: "compiler:Languages\Bulgarian.isl"
;Name: "Catalan"; MessagesFile: "compiler:Languages\Catalan.isl"
;Name: "Corsican"; MessagesFile: "compiler:Languages\Corsican.isl"
;Name: "Czech"; MessagesFile: "compiler:Languages\Czech.isl"
;Name: "Danish"; MessagesFile: "compiler:Languages\Danish.isl"
;Name: "Dutch"; MessagesFile: "compiler:Languages\Dutch.isl"
;Name: "Finnish"; MessagesFile: "compiler:Languages\Finnish.isl"
;Name: "French"; MessagesFile: "compiler:Languages\French.isl"
;Name: "German"; MessagesFile: "compiler:Languages\German.isl"
;Name: "Hebrew"; MessagesFile: "compiler:Languages\Hebrew.isl"
;Name: "Hungarian"; MessagesFile: "compiler:Languages\Hungarian.isl"
;Name: "Icelandic"; MessagesFile: "compiler:Languages\Icelandic.isl"
;Name: "Italian"; MessagesFile: "compiler:Languages\Italian.isl"
;Name: "Japanese"; MessagesFile: "compiler:Languages\Japanese.isl"
;Name: "Norwegian"; MessagesFile: "compiler:Languages\Norwegian.isl"
;Name: "Polish"; MessagesFile: "compiler:Languages\Polish.isl"
;Name: "Portuguese"; MessagesFile: "compiler:Languages\Portuguese.isl"
;Name: "Russian"; MessagesFile: "compiler:Languages\Russian.isl"
;Name: "Slovak"; MessagesFile: "compiler:Languages\Slovak.isl"
;Name: "Slovenian"; MessagesFile: "compiler:Languages\Slovenian.isl"
;Name: "Spanish"; MessagesFile: "compiler:Languages\Spanish.isl"
;Name: "Turkish"; MessagesFile: "compiler:Languages\Turkish.isl"
;Name: "Ukrainian"; MessagesFile: "compiler:Languages\Ukrainian.isl"

;Name: "Afrikaans"; MessagesFile: "compiler:Languages\Afrikaans.isl"
;Name: "Albanian"; MessagesFile: "compiler:Languages\Albanian.isl"
;Name: "Arabic"; MessagesFile: "compiler:Languages\Arabic.isl"
;Name: "Asturian"; MessagesFile: "compiler:Languages\Asturian.isl"
;Name: "Basque"; MessagesFile: "compiler:Languages\Basque.isl"
;Name: "Belarusian"; MessagesFile: "compiler:Languages\Belarusian.isl"
;Name: "Bengali"; MessagesFile: "compiler:Languages\Bengali.islu"
;Name: "Bosnian"; MessagesFile: "compiler:Languages\Bosnian.isl"
;Name: "ChineseSimplified"; MessagesFile: "compiler:Languages\ChineseSimplified.isl"
;Name: "ChineseTraditional"; MessagesFile: "compiler:Languages\ChineseTraditional.isl"
;Name: "Croatian"; MessagesFile: "compiler:Languages\Croatian.isl"
;Name: "EnglishBritish"; MessagesFile: "compiler:Languages\EnglishBritish.isl"
;Name: "Esperanto"; MessagesFile: "compiler:Languages\Esperanto.isl"
;Name: "Estonian"; MessagesFile: "compiler:Languages\Estonian.isl"
;Name: "Farsi"; MessagesFile: "compiler:Languages\Farsi.isl"
;Name: "Galician"; MessagesFile: "compiler:Languages\Galician.isl"
;Name: "Georgian"; MessagesFile: "compiler:Languages\Georgian.isl"
;Name: "Greek"; MessagesFile: "compiler:Languages\Greek.isl"
;Name: "Hindi"; MessagesFile: "compiler:Languages\Hindi.islu"
;Name: "Indonesian"; MessagesFile: "compiler:Languages\Indonesian.islu"
;Name: "Kazakh"; MessagesFile: "compiler:Languages\Kazakh.islu"
;Name: "Korean"; MessagesFile: "compiler:Languages\Korean.isl"
;Name: "Kurdish"; MessagesFile: "compiler:Languages\Kurdish.isl"
;Name: "Latvian"; MessagesFile: "compiler:Languages\Latvian.isl"
;Name: "Ligurian"; MessagesFile: "compiler:Languages\Ligurian.isl"
;Name: "Lithuanian"; MessagesFile: "compiler:Languages\Lithuanian.isl"
;Name: "Luxemburgish"; MessagesFile: "compiler:Languages\Luxemburgish.isl"
;Name: "Macedonian"; MessagesFile: "compiler:Languages\Macedonian.isl"
;Name: "Malaysian"; MessagesFile: "compiler:Languages\Malaysian.isl"
;Name: "Marathi"; MessagesFile: "compiler:Languages\Marathi.islu"
;Name: "Mongolian"; MessagesFile: "compiler:Languages\Mongolian.isl"
;Name: "Montenegrin"; MessagesFile: "compiler:Languages\Montenegrin.isl"
;Name: "Nepali"; MessagesFile: "compiler:Languages\Nepali.islu"
;Name: "NorwegianNynorsk"; MessagesFile: "compiler:Languages\NorwegianNynorsk.isl"
;Name: "Occitan"; MessagesFile: "compiler:Languages\Occitan.isl"
;Name: "Romanian"; MessagesFile: "compiler:Languages\Romanian.isl"
;Name: "ScottishGaelic"; MessagesFile: "compiler:Languages\ScottishGaelic.isl"
;Name: "SerbianCyrillic"; MessagesFile: "compiler:Languages\SerbianCyrillic.isl"
;Name: "SerbianLatin"; MessagesFile: "compiler:Languages\SerbianLatin.isl"
;Name: "Sinhala"; MessagesFile: "compiler:Languages\Sinhala.islu"
;Name: "Swedish"; MessagesFile: "compiler:Languages\Swedish.isl"
;Name: "Tatar"; MessagesFile: "compiler:Languages\Tatar.isl"
;Name: "Thai"; MessagesFile: "compiler:Languages\Thai.isl"
;Name: "Urdu"; MessagesFile: "compiler:Languages\Urdu.isl"
;Name: "Uyghur"; MessagesFile: "compiler:Languages\Uyghur.islu"
;Name: "Uzbek"; MessagesFile: "compiler:Languages\Uzbek.isl"
;Name: "Valencian"; MessagesFile: "compiler:Languages\Valencian.isl"
;Name: "Vietnamese"; MessagesFile: "compiler:Languages\Vietnamese.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}";

[Files]
Source: "windowsdesktop-runtime-7.0.15-win-x64.exe"; Flags: dontcopy noencryption
Source: "VC_redist.x64.exe"; Flags: dontcopy noencryption

; Install PluginManager
Source: "..\tools\PluginManager\bin\Release\net7.0-windows\publish\win-x64\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs

; Install Dashboard
Source: "..\src\ClearDashboard.Wpf.Application\bin\Release\net7.0-windows\publish\win-x64\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "..\help_docs\{#MyAppHelpDocsName}"; DestDir: "{app}"; Flags: noencryption

; Install ResetCurrentUser
Source: "..\tools\ResetCurrentUser\bin\Release\net7.0-windows\publish\win-x64\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

; Install Hebrew & Greek Fonts
Source: "..\src\ClearDashboard.Wpf.Application\Resources\SBL_Hbrw.ttf"; DestDir: "{fonts}"; Flags: onlyifdoesntexist uninsneveruninstall; FontInstall: "SBL Hebrew"
Source: "..\src\ClearDashboard.Wpf.Application\Resources\SBL_grk.ttf"; DestDir: "{fonts}"; Flags: onlyifdoesntexist uninsneveruninstall; FontInstall: "SBL Greek"

Source: "..\src\ClearDashboard.Wpf.Application\Resources\NotoSerif-Italic-VariableFont_wdth,wght.ttf"; DestDir: "{fonts}"; Flags: onlyifdoesntexist uninsneveruninstall; FontInstall: "Noto Serif"
Source: "..\src\ClearDashboard.Wpf.Application\Resources\NotoSerif-VariableFont_wdth,wght.ttf"; DestDir: "{fonts}"; Flags: onlyifdoesntexist uninsneveruninstall; FontInstall: "Noto Serif"

; Install Paratext Regular Plugin
Source: "..\src\ClearDashboard.WebApiParatextPlugin\bin\Release\net48\*"; DestDir: "{code:GetParatextInstallationPath}\plugins\{#MyAppPluginFolder}"; Check: ShouldInstallParatextRegular; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "..\src\ClearDashboard.WebApiParatextPlugin\bin\Release\net48\ClearDashboard.WebApiParatextPlugin.dll"; DestDir: "{code:GetParatextInstallationPath}\plugins\{#MyAppPluginFolder}"; DestName: "ClearDashboard.WebApiParatextPlugin.ptxplg"; Check: ShouldInstallParatextRegular; Flags: ignoreversion recursesubdirs createallsubdirs


; Install Paratext Beta Plugin
Source: "..\src\ClearDashboard.WebApiParatextPlugin\bin\Release\net48\*"; DestDir: "{code:GetParatextBetaInstallationPath}\plugins\{#MyAppPluginFolder}"; Check: ShouldInstallParatextBeta; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "..\src\ClearDashboard.WebApiParatextPlugin\bin\Release\net48\ClearDashboard.WebApiParatextPlugin.dll"; DestDir: "{code:GetParatextBetaInstallationPath}\plugins\{#MyAppPluginFolder}"; DestName: "ClearDashboard.WebApiParatextPlugin.ptxplg"; Check: ShouldInstallParatextBeta; Flags: ignoreversion recursesubdirs createallsubdirs


[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""

Root: HKCU; Subkey: "Software\ClearDashboard\AQUA"; ValueName: "IsEnabled"; ValueType: none; Flags: deletevalue;

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

Name: "{autoprograms}\{#MyAppHelpDocsName}"; Filename: "{app}\{#MyAppHelpDocsName}"
Name: "{autodesktop}\{#MyAppHelpDocsName}"; Filename: "{app}\{#MyAppHelpDocsName}"; Tasks: desktopicon

[Run]
Filename: "{app}\ResetCurrentUser.exe";
Filename: "{app}\..\Paratext 9\Paratext.exe"; Description: "{cm:LaunchProgram,{#StringChange("Paratext", '&', '&&')}}"; Flags: runascurrentuser nowait postinstall skipifsilent

[InstallDelete]
Type: filesandordirs; Name: "{code:GetParatextInstallationPath}\plugins\{#MyAppPluginFolder}"
Type: filesandordirs; Name: "{code:GetParatextBetaInstallationPath}\plugins\{#MyAppPluginFolder}"
Type: filesandordirs; Name: "{app}"

[UninstallDelete]
Type: filesandordirs; Name: "{code:GetParatextInstallationPath}\plugins\{#MyAppPluginFolder}"
Type: filesandordirs; Name: "{code:GetParatextBetaInstallationPath}\plugins\{#MyAppPluginFolder}"
Type: filesandordirs; Name: "{app}"

[Code]
//-------UninsIS-------//
//function DLLIsISPackageInstalled(AppId: string;
//  Is64BitInstallMode, IsAdminInstallMode: DWORD): DWORD;
//  external 'IsISPackageInstalled@files:UninsIS.dll stdcall setuponly';
//
//function DLLCompareISPackageVersion(AppId, InstallingVersion: string;
//  Is64BitInstallMode, IsAdminInstallMode: DWORD): longint;
//  external 'CompareISPackageVersion@files:UninsIS.dll stdcall setuponly';
//
//function DLLUninstallISPackage(AppId: string;
//  Is64BitInstallMode, IsAdminInstallMode: DWORD): DWORD;
//  external 'UninstallISPackage@files:UninsIS.dll stdcall setuponly';
//
//// Wrapper for UninsIS.dll IsISPackageInstalled() function
//// Returns true if package is detected as installed, or false otherwise
//function IsISPackageInstalled(): Boolean;
//begin
//  result := DLLIsISPackageInstalled('{#MyAppId}',  // AppId
//    DWORD(Is64BitInstallMode()),                        // Is64BitInstallMode
//    DWORD(IsAdminInstallMode())) = 1;                   // IsAdminInstallMode
//end;
//
//// Wrapper for UninsIS.dll CompareISPackageVersion() function
//// Returns:
//// < 0 if version we are installing is < installed version
//// 0   if version we are installing is = installed version
//// > 0 if version we are installing is > installed version
//function CompareISPackageVersion(): LongInt;
//begin
//  result := DLLCompareISPackageVersion('{#MyAppId}',  // AppId
//    '{#MyAppVersion}',                                // InstallingVersion
//    DWORD(Is64BitInstallMode()),                           // Is64BitInstallMode     
//    DWORD(IsAdminInstallMode()));                          // IsAdminInstallMode
//end;
//
//// Wrapper for UninsIS.dll UninstallISPackage() function
//// Returns 0 for success, non-zero for failure
//function UninstallISPackage(): DWORD;
//begin
//  result := DLLUninstallISPackage('{#MyAppId}',  // AppId
//    DWORD(Is64BitInstallMode()),                      // Is64BitInstallMode
//   DWORD(IsAdminInstallMode()));                     // IsAdminInstallMode
//end;
//
//function PrepareToInstall(var NeedsRestart: Boolean): string;
//begin
//  result := '';
//  if IsISPackageInstalled() and (CompareISPackageVersion() <> 0) then       //
//    UninstallISPackage();
//end;
//
//-------Run Times-------//

function VC2019RedistNeedsInstall(Arch: string): Boolean;
var 
  Version: String;
begin
  if RegQueryStringValue(
       HKEY_LOCAL_MACHINE,
       'SOFTWARE\Microsoft\VisualStudio\14.0\VC\Runtimes\X64',
       'Version', Version) then
  begin
    Log('VC Redist Version check : found ' + Version);
    Result := (CompareStr(Version, 'v14.34.31938.00')<0);
  end;
end;

var
    ParatextInstallationPath: string;
    ParatextBetaInstallationPath: string;

function InitializeSetup: Boolean;
var
    ResultCode: Integer;
    Value: string;
begin
  if IsWin64 then begin
   // run the C++ Runtime installer
   
    if VC2019RedistNeedsInstall('x64') then begin
      if not FileExists(ExpandConstant('{tmp}{\}') + 'VC_redist.x64.exe') then begin          
          ExtractTemporaryFile('VC_redist.x64.exe');
      end;
      // ShellExec(const Verb, Filename, Params, WorkingDir: String; const ShowCmd: Integer; const Wait: TExecWait; var ErrorCode: Integer): Boolean;
      Result := ShellExec('', ExpandConstant('{tmp}{\}') + 'VC_redist.x64.exe', '/install /passive /norestart', '', SW_HIDE, ewWaitUntilTerminated, ResultCode) and (ResultCode = 0);
    end;  
    
    // install the .NET Runtime
     if not DirExists('C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App\7.0.5\') then begin
      if not FileExists(ExpandConstant('{tmp}{\}') + 'windowsdesktop-runtime-7.0.15-win-x64.exe') then begin          
        ExtractTemporaryFile('windowsdesktop-runtime-7.0.15-win-x64.exe');
      end;
     Result := ShellExec('', ExpandConstant('{tmp}{\}') + 'windowsdesktop-runtime-7.0.15-win-x64.exe', '/passive', '', SW_HIDE, ewWaitUntilTerminated, ResultCode) and (ResultCode = 0);
    end;
    Result := true;
  end;

  // get the paratext install directory
  if RegQueryStringValue(
       HKEY_LOCAL_MACHINE, 'SOFTWARE\WOW6432Node\Paratext\8',
       'Paratext9_Full_Release_AppPath', Value) then
    begin
      ParatextInstallationPath := ExtractFileDir(Value);
      Log(Format('APPLICATION installed to %s', [ParatextInstallationPath]));
      Result := True;
    end
  else
    begin
      MsgBox('Paratext is either missing or not up to date.  You must have Paratext to use this plugin.', mbError, MB_OK);
      Result := False;
    end;

  // get the paratext Beta install directory
  if RegQueryStringValue(
       HKEY_LOCAL_MACHINE, 'SOFTWARE\WOW6432Node\Paratext\8',
       'Program_Files_Directory_Ptw91', Value) then
    begin
      ParatextBetaInstallationPath := ExtractFileDir(Value);
      Log(Format('APPLICATION installed to %s', [ParatextBetaInstallationPath]));
    end
  else
    begin
      ParatextBetaInstallationPath := '';
    end;
end;

function GetParatextInstallationPath(Param: string): string;
begin
  Result := ParatextInstallationPath;
end;

function GetParatextBetaInstallationPath(Param: string): string;
begin
  Result := ParatextBetaInstallationPath;
end;

function ShouldInstallParatextRegular: Boolean;
begin
  if ParatextInstallationPath='' then
    begin
      Result := False;
    end
  else
    begin
      Result := True;
    end
end;

function ShouldInstallParatextBeta: Boolean;
begin
  if ParatextBetaInstallationPath='' then
    begin
      Result := False;
    end
  else
    begin
      Result := True;
    end
end;

<Window
    x:Class="ClearDashboard.Wpf.Views.VersePopUpView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cm="http://caliburnmicro.com"
    xmlns:converters="clr-namespace:ClearDashboard.Wpf.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:ClearDashboard.Wpf.Helpers"
    xmlns:local="clr-namespace:ClearDashboard.Wpf.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:resx="clr-namespace:ClearDashboard.Wpf.Strings"
    xmlns:viewModels="clr-namespace:ClearDashboard.Wpf.ViewModels"
    x:Name="window"
    Title="VersePopUpView"
    Width="800"
    Height="400"
    d:DataContext="{d:DesignInstance Type=viewModels:VersePopUpViewModel,
                                     IsDesignTimeCreatable=True}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    helpers:Translation.ResourceManager="{x:Static resx:Resources.ResourceManager}"
    Background="{DynamicResource MaterialDesignPaper}"
    FlowDirection="{Binding FlowDirection}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    SizeChanged="window_SizeChanged"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    WindowStartupLocation="CenterOwner"
    mc:Ignorable="d">

    <Window.DataContext>
        <viewModels:VersePopUpViewModel />
    </Window.DataContext>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush
                x:Key="GridBrush"
                Opacity="0.25"
                Color="LightBlue" />

            <converters:BoolToBrushConverter x:Key="BoolToBrushConverter" />

            <Style x:Key="RowStyle" TargetType="{x:Type DataGridRow}">
                <Style.Setters>
                    <Setter Property="Background" Value="{Binding Highlight, Converter={StaticResource BoolToBrushConverter}}" />
                </Style.Setters>
            </Style>

        </ResourceDictionary>
    </Window.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="99*" />
            <ColumnDefinition Width="371*" />
            <ColumnDefinition Width="330*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="*" />
            <RowDefinition Height="5" />
        </Grid.RowDefinitions>

        <TextBlock
            x:Name="BookChapter"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            Margin="0,0,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            FontSize="18"
            Foreground="{StaticResource PrimaryHueMidBrush}" />

        <DataGrid
            x:Name="gridVerses"
            Grid.Row="1"
            Grid.ColumnSpan="3"
            Margin="5,5,5,5"
            cm:Message.Attach="[Event Loaded] = [Action SetScrollView($source)]"
            AutoGenerateColumns="True"
            AutoGeneratedColumns="gridVerses_AutoGeneratedColumns"
            CanUserAddRows="False"
            CanUserResizeColumns="True"
            GridLinesVisibility="All"
            HorizontalGridLinesBrush="{StaticResource GridBrush}"
            IsReadOnly="True"
            ItemsSource="{Binding VersesView}"
            RowStyle="{StaticResource RowStyle}"
            ScrollViewer.CanContentScroll="True"
            ScrollViewer.HorizontalScrollBarVisibility="Visible"
            ScrollViewer.VerticalScrollBarVisibility="Auto"
            SelectionMode="Single"
            SelectionUnit="FullRow"
            VerticalGridLinesBrush="{StaticResource GridBrush}">

            <!--  NOTE: CM does not allow attaching to the AutoGeneratedColumn event  -->
            <!--  cm:Message.Attach="[Event AutoGeneratedColumn] = [Action SetColumns($source, $eventArgs)]"  -->
            <!--  see https://stackoverflow.com/questions/19433068/datagrid-autogeneratingcolumn-action-in-caliburn-micro  -->

            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                </Style>
            </DataGrid.ColumnHeaderStyle>
        </DataGrid>

        <!--<Button
            x:Name="CloseWindow"
            Grid.Row="2"
            HorizontalAlignment="Center"
            cm:Message.Attach="[Event Click] = [Action CloseWindow($view)]"
            Content="Close">
            <Button.DataContext>
                <viewModels:VersePopUpViewModel />
            </Button.DataContext>
        </Button>-->


    </Grid>
</Window>

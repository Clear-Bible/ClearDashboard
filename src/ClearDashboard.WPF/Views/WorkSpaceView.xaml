<Page
    x:Class="ClearDashboard.Wpf.Views.WorkSpaceView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cm="http://caliburnmicro.com"
    xmlns:converters="clr-namespace:ClearDashboard.Wpf.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:ClearDashboard.Wpf.Helpers"
    xmlns:local="clr-namespace:ClearDashboard.Wpf.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:ClearDashboard.Wpf.ViewModels.Menus"
    xmlns:panes="clr-namespace:ClearDashboard.Wpf.Views.Panes"
    xmlns:project="clr-namespace:ClearDashboard.Wpf.Views.Project"
    xmlns:resx="clr-namespace:ClearDashboard.Wpf.Strings"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:userControls="clr-namespace:ClearDashboard.Wpf.UserControls"
    xmlns:viewModels="clr-namespace:ClearDashboard.Wpf.ViewModels"
    Title="WorkSpaceView"
    d:DataContext="{d:DesignInstance Type=viewModels:WorkSpaceViewModel,
                                     IsDesignTimeCreatable=True}"
    d:DesignHeight="450"
    d:DesignWidth="1000"
    helpers:Translation.ResourceManager="{x:Static resx:Resources.ResourceManager}"
    Background="{DynamicResource MaterialDesignPaper}"
    FlowDirection="{Binding WindowFlowDirection}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    Loaded="Page_Loaded"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    mc:Ignorable="d">
    <Page.Resources>
        <converters:ActiveDocumentConverter x:Key="ActiveDocumentConverter" />
        <system:Boolean x:Key="TRUE">True</system:Boolean>
        <system:Boolean x:Key="FALSE">False</system:Boolean>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="32" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button
                Grid.Column="0"
                Margin="5,5,0,0"
                Padding="3"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                BorderThickness="0"
                Command="NavigationCommands.BrowseBack">
                <materialDesign:PackIcon Kind="ChevronLeft" />
            </Button>

            <!--
            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <ComboBox
                VerticalContentAlignment="Center"
                DisplayMemberPath="Item1"
                ItemsSource="{Binding Themes}"
                SelectedItem="{Binding SelectedTheme}" />
            </StackPanel>
            -->

            <Menu Grid.Column="1" ItemsSource="{Binding MenuItems}">
                <Menu.ItemContainerStyle>
                    <Style BasedOn="{StaticResource MaterialDesignMenuItem}" TargetType="{x:Type MenuItem}">
                        <Setter Property="Icon" Value="{Binding Icon}" />
                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignDarkForeground}" />
                        <!--<Setter Property="Icon" Value="{Binding IconSource}" />-->
                        <Setter Property="Command" Value="{Binding Command}" />
                    </Style>
                </Menu.ItemContainerStyle>

                <Menu.ItemTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type models:MenuItemViewModel}" ItemsSource="{Binding Path=MenuItems}">
                        <TextBlock
                            Margin="5,5,0,0"
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource PrimaryHueDarkBrush}"
                            Text="{Binding Header}" />
                    </HierarchicalDataTemplate>
                </Menu.ItemTemplate>
            </Menu>

            <userControls:BcvUserControl
                Grid.Column="3"
                CurrentBcv="{Binding CurrentBcv}"
                IsRtl="{Binding IsRtl}"
                ParatextSync="{Binding ParatextSync, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>
       

        <DockingManager
            x:Name="dockManager"
            Grid.Row="1"
            ActiveContent="{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}"
            AllowMixedOrientation="True"
            AnchorablesSource="{Binding Tools}"
            DocumentsSource="{Binding Documents}"
            Theme="{Binding SelectedTheme.Item2}">
            <DockingManager.LayoutItemTemplateSelector>
                <panes:PanesTemplateSelector>
                    <!--  DOCUMENTS  -->
                    <panes:PanesTemplateSelector.ConcordanceViewTemplate>
                        <DataTemplate>
                            <local:ConcordanceView />
                        </DataTemplate>
                    </panes:PanesTemplateSelector.ConcordanceViewTemplate>

                    <panes:PanesTemplateSelector.CorpusTokensViewTemplate>
                        <DataTemplate>
                            <project:CorpusTokensView />
                        </DataTemplate>
                    </panes:PanesTemplateSelector.CorpusTokensViewTemplate>

                    <panes:PanesTemplateSelector.DashboardViewTemplate>
                        <DataTemplate>
                            <local:DashboardView />
                        </DataTemplate>
                    </panes:PanesTemplateSelector.DashboardViewTemplate>

                    <panes:PanesTemplateSelector.AlignmentToolViewTemplate>
                        <DataTemplate>
                            <local:AlignmentTool />
                        </DataTemplate>
                    </panes:PanesTemplateSelector.AlignmentToolViewTemplate>

                    <panes:PanesTemplateSelector.TreeDownViewTemplate>
                        <DataTemplate>
                            <local:TreeDownView />
                        </DataTemplate>
                    </panes:PanesTemplateSelector.TreeDownViewTemplate>

                    <panes:PanesTemplateSelector.StartPageViewTemplate>
                        <DataTemplate>
                            <local:StartPageView />
                        </DataTemplate>
                    </panes:PanesTemplateSelector.StartPageViewTemplate>

                    <!--  TOOLS  -->
                    <panes:PanesTemplateSelector.BiblicalTermsViewTemplate>
                        <DataTemplate>
                            <local:BiblicalTermsView />
                        </DataTemplate>
                    </panes:PanesTemplateSelector.BiblicalTermsViewTemplate>

                    <panes:PanesTemplateSelector.ProjectDesignSurfaceViewTemplate>
                        <DataTemplate>
                            <project:ProjectDesignSurfaceView />
                        </DataTemplate>
                    </panes:PanesTemplateSelector.ProjectDesignSurfaceViewTemplate>

                    <panes:PanesTemplateSelector.WordMeaningsViewTemplate>
                        <DataTemplate>
                            <local:WordMeaningsView />
                        </DataTemplate>
                    </panes:PanesTemplateSelector.WordMeaningsViewTemplate>

                    <panes:PanesTemplateSelector.SourceContextViewTemplate>
                        <DataTemplate>
                            <local:SourceContextView />
                        </DataTemplate>
                    </panes:PanesTemplateSelector.SourceContextViewTemplate>

                    <panes:PanesTemplateSelector.TargetContextViewTemplate>
                        <DataTemplate>
                            <local:TargetContextView />
                        </DataTemplate>
                    </panes:PanesTemplateSelector.TargetContextViewTemplate>

                    <panes:PanesTemplateSelector.NotesViewTemplate>
                        <DataTemplate>
                            <local:NotesView />
                        </DataTemplate>
                    </panes:PanesTemplateSelector.NotesViewTemplate>

                    <panes:PanesTemplateSelector.PinsViewTemplate>
                        <DataTemplate>
                            <local:PinsView />
                        </DataTemplate>
                    </panes:PanesTemplateSelector.PinsViewTemplate>

                    <panes:PanesTemplateSelector.TextCollectionViewTemplate>
                        <DataTemplate>
                            <local:TextCollectionsView />
                        </DataTemplate>
                    </panes:PanesTemplateSelector.TextCollectionViewTemplate>

                </panes:PanesTemplateSelector>
            </DockingManager.LayoutItemTemplateSelector>

            <DockingManager.LayoutItemContainerStyleSelector>
                <panes:PanesStyleSelector>
                    <!--  DOCUMENTS  -->
                    <panes:PanesStyleSelector.DocumentStyle>
                        <Style TargetType="{x:Type LayoutItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                        </Style>
                    </panes:PanesStyleSelector.DocumentStyle>

                    <!--  TOOLS  -->
                    <panes:PanesStyleSelector.ToolStyle>
                        <Style TargetType="{x:Type LayoutAnchorableItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="CanClose" Value="True" />
                            <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={StaticResource FALSE}}" />
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                        </Style>
                    </panes:PanesStyleSelector.ToolStyle>

                </panes:PanesStyleSelector>
            </DockingManager.LayoutItemContainerStyleSelector>
            <DockingManager.LayoutUpdateStrategy>
                <panes:LayoutInitializer />
            </DockingManager.LayoutUpdateStrategy>

            <LayoutRoot>
                <LayoutPanel Orientation="Vertical">
                    <LayoutDocumentPane />
                    <LayoutAnchorablePane Name="ToolsPane" DockHeight="150" />
                </LayoutPanel>
            </LayoutRoot>
        </DockingManager>

        <Grid
            x:Name="GridIsVisible"
            Grid.Row="0"
            Grid.Column="0"
            Width="250"
            Background="{StaticResource SecondaryHueMidBrush}"
            Visibility="{Binding GridIsVisible, Mode=TwoWay}">
            <Grid.RowDefinitions>
                <RowDefinition Height="20" />
                <RowDefinition Height="*" />
                <RowDefinition Height="40" />
            </Grid.RowDefinitions>
            <Label Grid.Row="0" Content="Save Current Layout:" />
            <ComboBox
                x:Name="cboNames"
                Grid.Row="1"
                Padding="15"
                DisplayMemberPath="LayoutName"
                IsEditable="True"
                ItemsSource="{Binding Path=FileLayouts}"
                SelectedItem="{Binding Path=SelectedLayout, Mode=OneWayToSource}"
                Text="{Binding SelectedLayoutText, UpdateSourceTrigger=PropertyChanged}" />
            <DockPanel Grid.Row="2">
                <Button
                    x:Name="OkSave"
                    Margin="50,0,0,0"
                    Padding="0"
                    HorizontalAlignment="Left"
                    Style="{StaticResource GreenMidButton}">
                    <materialDesign:PackIcon
                        Width="32"
                        Height="32"
                        Foreground="White"
                        Kind="CheckboxMarkedCircle" />
                </Button>
                <Button
                    x:Name="CancelSave"
                    Margin="0,0,50,0"
                    Padding="0"
                    HorizontalAlignment="Right"
                    cm:Message.Attach="CancelSave"
                    Style="{StaticResource RedMidButton}">
                    <materialDesign:PackIcon
                        Width="32"
                        Height="32"
                        Foreground="White"
                        Kind="CloseCircle" />
                </Button>
            </DockPanel>
        </Grid>

        <Grid
            x:Name="DeleteGridIsVisible"
            Grid.Row="0"
            Grid.Column="0"
            Width="250"
            Height="150"
            Background="{StaticResource SecondaryHueMidBrush}"
            Visibility="{Binding DeleteGridIsVisible, Mode=TwoWay}">
            <Grid.RowDefinitions>
                <RowDefinition Height="25" />
                <RowDefinition Height="*" />
                <RowDefinition Height="40" />
            </Grid.RowDefinitions>
            <Label Grid.Row="0" Content="Delete Layout:" />
            <ListBox
                x:Name="FileLayouts"
                Grid.Row="1"
                BorderBrush="{DynamicResource MaterialDesignCardBackground}"
                BorderThickness="2">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Padding" Value="0" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{DynamicResource MaterialDesignCardBackground}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Button Padding="-10" cm:Message.Attach="[Event Click] = [Action DeleteLayout($this)]">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="{x:Type Button}">
                                        <!--  Default value  -->
                                        <Setter Property="IsEnabled" Value="True" />
                                        <!--  Triggered values  -->
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding LayoutType}" Value="Standard">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <materialDesign:PackIcon
                                    Width="20"
                                    Height="20"
                                    Cursor="Hand"
                                    Foreground="Red"
                                    IsHitTestVisible="False"
                                    Kind="DeleteForever" />
                            </Button>
                            <TextBlock
                                Grid.Column="1"
                                MinWidth="200"
                                Margin="10,0,0,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                Text="{Binding LayoutName}">
                                <TextBlock.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignTextBlock}" TargetType="{x:Type TextBlock}">
                                        <!--  Default value  -->
                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}" />
                                        <!--  Triggered values  -->
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding LayoutType}" Value="Standard">
                                                <Setter Property="Foreground" Value="Gray" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <DockPanel Grid.Row="2">
                <Button
                    x:Name="CancelDelete"
                    Padding="0"
                    HorizontalAlignment="Center"
                    Style="{StaticResource RedMidButton}">
                    <materialDesign:PackIcon
                        Width="32"
                        Height="32"
                        Foreground="White"
                        Kind="CloseCircle" />
                </Button>

            </DockPanel>


        </Grid>
        <ProgressBar
            x:Name="ProgressBarVisibility"
            Grid.Row="1"
            Width="100"
            Height="100"
            Margin="15,0,5,0"
            IsIndeterminate="True"
            
            Style="{StaticResource MaterialDesignCircularProgressBar}"
            Visibility="{Binding ShowProgressBar, Converter={StaticResource BooleanToVisibilityConverter}}"
            Value="0" />
        <TextBlock Grid.Row="1" 
                   Text="{Binding Message}" 
                   FontSize="26" 
                   Foreground="{DynamicResource MaterialDesignBody}" 
                   Visibility="{Binding ShowProgressBar, Converter={StaticResource BooleanToVisibilityConverter}}"
                   HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0, 120, 0, 0"/>
    </Grid>

</Page>
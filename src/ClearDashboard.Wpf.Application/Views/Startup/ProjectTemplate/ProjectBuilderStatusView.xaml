<UserControl
    x:Class="ClearDashboard.Wpf.Application.Views.Startup.ProjectTemplate.ProjectBuilderStatusView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cm="http://caliburnmicro.com"
    xmlns:converters="clr-namespace:ClearDashboard.Wpf.Application.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:ClearDashboard.Wpf.Application.Helpers;assembly=ClearDashboard.Wpf.Application.Abstractions"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:projectTemplate="clr-namespace:ClearDashboard.Wpf.Application.ViewModels.Startup.ProjectTemplate"
    xmlns:resx="clr-namespace:ClearDashboard.Wpf.Application.Strings;assembly=ClearDashboard.Wpf.Application.Abstractions"
    xmlns:threading="clr-namespace:ClearDashboard.DataAccessLayer.Threading;assembly=ClearDashboard.DAL"
    Height="700"
    MinWidth="300"
    MinHeight="200"
    d:DataContext="{d:DesignInstance Type=projectTemplate:ProjectBuilderStatusViewModel,
                                     IsDesignTimeCreatable=True}"
    d:DesignHeight="200"
    d:DesignWidth="300"
    helpers:Translation.ResourceManager="{x:Static resx:Resources.ResourceManager}"
    Background="Transparent"
    mc:Ignorable="d">

    <UserControl.Resources>
        <converters:InvertedEnumMatchToBooleanConverter x:Key="InvertedEnumMatchToBooleanConverter" />
    </UserControl.Resources>

    <Grid Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <!--<RowDefinition Height="20" />-->
        </Grid.RowDefinitions>

        <!--  BackGround Tasks  -->
        <ListView
            x:Name="TasksListView"
            Grid.Row="0"
            Margin="5"
            VerticalContentAlignment="Top"
            materialDesign:RippleAssist.IsDisabled="True"
            ItemsSource="{Binding BackgroundTaskStatuses}"
            ScrollViewer.CanContentScroll="False"
            ScrollViewer.VerticalScrollBarVisibility="Visible"
            Style="{StaticResource MaterialDesignListBox}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid Tag="{Binding DataContext, ElementName=GridLayout}">
                        <materialDesign:Card Height="60" Padding="10,0,0,0">

                            <StackPanel materialDesign:RippleAssist.Feedback="Transparent" Orientation="Horizontal">
                                <!--  ISCOMPLETED ICON  -->
                                <materialDesign:PackIcon
                                    Width="18"
                                    Height="18"
                                    VerticalAlignment="Center"
                                    RenderTransformOrigin="0.5, 0.5">
                                    <materialDesign:PackIcon.RenderTransform>
                                        <RotateTransform x:Name="noFreeze" />
                                    </materialDesign:PackIcon.RenderTransform>
                                    <materialDesign:PackIcon.Style>
                                        <Style TargetType="materialDesign:PackIcon">
                                            <Setter Property="Kind" Value="AirplaneSettings" />
                                            <Setter Property="Padding" Value="0" />

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding TaskLongRunningProcessStatus}" Value="{x:Static threading:LongRunningTaskStatus.Running}">
                                                    <Setter Property="Foreground" Value="Orange" />
                                                    <Setter Property="Kind" Value="Autorenew" />
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    RepeatBehavior="Forever"
                                                                    Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)"
                                                                    To="360"
                                                                    Duration="0:0:5" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)"
                                                                    To="0"
                                                                    Duration="0:0:0.1" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.ExitActions>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding TaskLongRunningProcessStatus}" Value="{x:Static threading:LongRunningTaskStatus.Completed}">
                                                    <Setter Property="Foreground" Value="{StaticResource GreenMidBrush}" />
                                                    <Setter Property="Kind" Value="CheckboxMarkedCircle" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding TaskLongRunningProcessStatus}" Value="{x:Static threading:LongRunningTaskStatus.Failed}">
                                                    <Setter Property="Foreground" Value="{StaticResource RedMidBrush}" />
                                                    <Setter Property="Kind" Value="AlertCircle" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding TaskLongRunningProcessStatus}" Value="{x:Static threading:LongRunningTaskStatus.CancellationRequested}">
                                                    <Setter Property="Foreground" Value="{StaticResource YellowMidBrush}" />
                                                    <Setter Property="Kind" Value="CloseCircleOutline" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </materialDesign:PackIcon.Style>
                                </materialDesign:PackIcon>

                                <StackPanel Margin="5,10,0,0" Orientation="Vertical">
                                    <!--  TASK NAME  -->
                                    <TextBlock
                                        HorizontalAlignment="Left"
                                        FontSize="12"
                                        FontWeight="Bold"
                                        Foreground="{StaticResource BlueMidBrush}"
                                        Text="{Binding Name}" />
                                    <!--  TASK DESCRIPTION  -->
                                    <TextBlock
                                        Width="400"
                                        Height="48"
                                        HorizontalAlignment="Left"
                                        FontSize="12"
                                        FontWeight="Bold"
                                        Text="{Binding Description}"
                                        TextWrapping="Wrap">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding TaskLongRunningProcessStatus}" Value="{x:Static threading:LongRunningTaskStatus.Failed}">
                                                        <Setter Property="Foreground" Value="{StaticResource RedLightBrush}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>

                                </StackPanel>
                            </StackPanel>

                        </materialDesign:Card>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <!--<TextBlock
                    Margin="5,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="16"
                    Text="{helpers:Localization ShellView_NoBackGroundTasks}">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding BackgroundTaskStatuses.Count}" Value="0">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>-->
    </Grid>
</UserControl>


<UserControl
    x:Class="ClearDashboard.Wpf.Application.Views.EnhancedView.VerseAwareEnhancedViewItemView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:cm="http://caliburnmicro.com"
    xmlns:converters="clr-namespace:ClearDashboard.Wpf.Application.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:ClearDashboard.Wpf.Application.Views.EnhancedView"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:userControls="clr-namespace:ClearDashboard.Wpf.Application.UserControls"
    xmlns:enhancedView="clr-namespace:ClearDashboard.Wpf.Application.ViewModels.EnhancedView;assembly=ClearDashboard.Wpf.Application.Abstractions"
    xmlns:foundation="clr-namespace:ClearApplicationFoundation.Framework.Input;assembly=ClearApplicationFoundation"
    d:DataContext="{d:DesignInstance Type=enhancedView:VerseAwareEnhancedViewItemViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>

           
            <converters:BoolOrientationConverter x:Key="BoolOrientationConverter" />
            <!--<converters:BoolFlowDirectionConverter x:Key="BoolFlowDirectionConverter" />-->
            <converters:BoolHorizontalAlignmentConverter x:Key="BoolHorizontalAlignmentConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>

        <!-- Width="{Binding ActualWidth, ElementName=DisplayColumn, Converter={converters:WidthSubtraction}, ConverterParameter='130'}" -->
        <ListView
            x:Name="InnerListView"
            Width="{Binding ActualWidth, ElementName=FirstColumn, Converter={converters:WidthSubtraction}, ConverterParameter='130'}"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            cm:Message.Attach="[Event SelectionChanged] = [Action VerseSelected($this, $eventArgs)]"
            ItemsSource="{Binding Verses}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            ScrollViewer.IsDeferredScrollingEnabled="True"
            VirtualizingStackPanel.IsVirtualizing="True"
            VirtualizingStackPanel.VirtualizationMode="Recycling"
            foundation:EnhancedFocusScope.IsEnhancedFocusScope="True">
            <b:Interaction.Triggers>
                <b:EventTrigger EventName="MouseDown">
                    <cm:ActionMessage MethodName="SetFocus"></cm:ActionMessage>
                </b:EventTrigger>
            </b:Interaction.Triggers>

            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
                    <Style.Triggers>
                        <Trigger Property="ListViewItem.IsSelected" Value="true">
                            <Setter Property="Background" Value="LightCoral" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemTemplate>
                <DataTemplate>

                    <userControls:VerseDisplay
                        x:Name="VerseDisplay"
                        Title=""
                        HorizontalAlignment="Stretch"
                        HorizontalSpacing="{Binding DataContext.SourceHorizontalValue, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=local:EnhancedView}}"
                        IsEnabled="True"
                        NoteIndicatorHeight="{Binding DataContext.NoteIndicatorsSizeValue, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=local:EnhancedView}}"
                        Orientation="{Binding ElementName=VerticalCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolOrientationConverter}}"
                        ShowNoteIndicators="{Binding ElementName=ShowNoteIndicatorsCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"
                        ShowTranslations="{Binding DataContext.ShowTranslation, RelativeSource={RelativeSource AncestorType=ListView}}"
                        SourceFontFamily="{Binding ElementName=InnerListView, Path=DataContext.SourceFontFamily}"
                        SourceFontSize="{Binding DataContext.SourceFontSizeValue, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=local:EnhancedView}}"
                        TargetFontFamily="{Binding ElementName=InnerListView, Path=DataContext.TargetFontFamily}"
                        TargetFontSize="{Binding DataContext.TargetFontSizeValue, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=local:EnhancedView}}"
                        TitleFontSize="10"
                        TitleVisibility="Collapsed"
                        TokenVerticalSpacing="{Binding DataContext.SourceVerticalValue, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=local:EnhancedView}}"
                        TranslationAlignment="{Binding ElementName=CenteredCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolHorizontalAlignmentConverter}}"
                        TranslationClicked="TranslationClicked"
                        TranslationFontFamily="{Binding ElementName=InnerListView, Path=DataContext.TranslationFontFamily}"
                        TranslationFontSize="{Binding DataContext.TranslationsFontSizeValue, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=local:EnhancedView}}"
                        TranslationVerticalSpacing="{Binding DataContext.SourceVerticalValue, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=local:EnhancedView}}"
                        Wrap="{Binding ElementName=WrapCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}">
                        <!--cm:Message.Attach="[Key Enter] = [EnterPressed]; [Gesture Ctrl+Enter] = [CtrlEnterPressed]; [Gesture Alt+Enter] = [AltEnterPressed]">-->
                        <!--  cm:Message.Attach="[Event TranslationClicked] = [Action TranslationClicked($this, $eventArgs)]"  -->
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="TokenDeleteAlignment">
                                <b:CallMethodAction MethodName="TokenDeleteAlignment" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EnhancedView}}, Path=DataContext}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="TokenClicked">
                                <b:CallMethodAction MethodName="TokenClicked" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EnhancedView}}, Path=DataContext}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="TokenRightButtonDown">
                                <b:CallMethodAction MethodName="TokenRightButtonDown" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EnhancedView}}, Path=DataContext}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="TokenMouseEnter">
                                <b:CallMethodAction MethodName="TokenMouseEnter" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EnhancedView}}, Path=DataContext}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="TokenMouseLeave">
                                <b:CallMethodAction MethodName="TokenMouseLeave" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EnhancedView}}, Path=DataContext}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="TranslationMouseEnter">
                                <b:CallMethodAction MethodName="TranslationMouseEnter" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EnhancedView}}, Path=DataContext}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="TranslationMouseLeave">
                                <b:CallMethodAction MethodName="TranslationMouseLeave" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EnhancedView}}, Path=DataContext}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="NoteIndicatorMouseEnter">
                                <b:CallMethodAction MethodName="NoteIndicatorMouseEnter" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EnhancedView}}, Path=DataContext}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="NoteCreate">
                                <b:CallMethodAction MethodName="NoteCreate" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EnhancedView}}, Path=DataContext}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="FilterPins">
                                <b:CallMethodAction MethodName="FilterPins" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EnhancedView}}, Path=DataContext}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="Copy">
                                <b:CallMethodAction MethodName="Copy" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EnhancedView}}, Path=DataContext}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="TranslateQuick">
                                <b:CallMethodAction MethodName="TranslateQuick" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EnhancedView}}, Path=DataContext}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="TokenJoin">
                                <b:CallMethodAction MethodName="TokenJoin" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EnhancedView}}, Path=DataContext}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="TokenJoinLanguagePair">
                                <b:CallMethodAction MethodName="TokenJoinLanguagePair" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EnhancedView}}, Path=DataContext}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="TokenUnjoin">
                                <b:CallMethodAction MethodName="TokenUnjoin" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EnhancedView}}, Path=DataContext}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </userControls:VerseDisplay>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <ProgressBar
            Width="76"
            Height="75"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Foreground="{DynamicResource SecondaryHueMidBrush}"
            IsIndeterminate="True"
            Style="{StaticResource MaterialDesignCircularProgressBar}"
            Visibility="{Binding ProgressBarVisibility}"
            Value="0" />
    </Grid>


</UserControl>

<Page
    x:Class="ClearDashboard.Wpf.Application.Views.Main.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cm="http://caliburnmicro.com"
    xmlns:controls="clr-namespace:ClearApplicationFoundation.Controls;assembly=ClearApplicationFoundation"
    xmlns:converters="clr-namespace:ClearApplicationFoundation.Framework.Converters;assembly=ClearApplicationFoundation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enhancedView="clr-namespace:ClearDashboard.Wpf.Application.Views.EnhancedView"
    xmlns:helpers="clr-namespace:ClearDashboard.Wpf.Application.Helpers;assembly=ClearDashboard.Wpf.Application.Abstractions"
    xmlns:local="clr-namespace:ClearDashboard.Wpf.Application.Views.Project"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:main="clr-namespace:ClearDashboard.Wpf.Application.ViewModels.Main"
    xmlns:marble="clr-namespace:ClearDashboard.Wpf.Application.Views.Marble"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:ClearDashboard.Wpf.Application.ViewModels.Menus"
    xmlns:notes="clr-namespace:ClearDashboard.Wpf.Application.Views.Notes"
    xmlns:panes="clr-namespace:ClearDashboard.Wpf.Application.Views.Panes"
    xmlns:paratextViews="clr-namespace:ClearDashboard.Wpf.Application.Views.ParatextViews"
    xmlns:resx="clr-namespace:ClearDashboard.Wpf.Application.Strings"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    Title="WorkSpaceView"
    d:DataContext="{d:DesignInstance Type=main:MainViewModel,
                                     IsDesignTimeCreatable=True}"
    d:DesignHeight="450"
    d:DesignWidth="1000"
    helpers:Translation.ResourceManager="{x:Static resx:Resources.ResourceManager}"
    Background="{DynamicResource MaterialDesignPaper}"
    FlowDirection="{Binding WindowFlowDirection}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    Loaded="Page_Loaded"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    mc:Ignorable="d">

    <!--  cm:Message.Attach="[Event OnWindowSizeChanged] = [Action OnWindowSizeChanged]"  -->
    <Page.InputBindings>
        <KeyBinding
            Key="Right"
            Command="{Binding NavigateToNextDocumentForwards}"
            Modifiers="Control" />
        <KeyBinding
            Key="Left"
            Command="{Binding NavigateToNextDocumentBackwards}"
            Modifiers="Control" />
    </Page.InputBindings>

    <Page.Resources>
        <converters:ActiveDocumentConverter x:Key="ActiveDocumentConverter" />
        <system:Boolean x:Key="True">True</system:Boolean>
        <system:Boolean x:Key="False">False</system:Boolean>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Menu
            Grid.Row="0"
            materialDesign:MenuAssist.TopLevelMenuItemHeight="25"
            ItemsSource="{Binding MenuItems}">
            <Menu.ItemContainerStyle>
                <Style BasedOn="{StaticResource MaterialDesignMenuItem}" TargetType="{x:Type MenuItem}">
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignDarkForeground}" />
                    <Setter Property="Icon" Value="{Binding IconSource}" />
                    <Setter Property="Command" Value="{Binding Command}" />
                    <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
                    <Style.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Menu.ItemContainerStyle>

            <Menu.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type models:MenuItemViewModel}" ItemsSource="{Binding Path=MenuItems}">
                    <TextBlock
                        VerticalAlignment="Center"
                        Foreground="{StaticResource PrimaryHueMidBrush}"
                        Text="{Binding Header}" />
                </HierarchicalDataTemplate>
            </Menu.ItemTemplate>
        </Menu>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Name="ProjectDesignSurfaceColumn"
                    Width="Auto"
                    MinWidth="24"
                    MaxWidth="500" />
                <!--<ColumnDefinition Width="10" />-->
                <ColumnDefinition Name="DockManagerColumn" Width="*" />
            </Grid.ColumnDefinitions>

            <controls:SidebarExpander
                Name="ProjectDesignSurfaceExpander"
                Grid.Column="0"
                mah:HeaderedControlHelper.HeaderBackground="{DynamicResource IconPackBrowser.Brushes.PanelBackground}"
                Background="{DynamicResource IconPackBrowser.Brushes.PanelBackground}"
                BorderBrush="{DynamicResource MahApps.Brushes.Gray10}"
                BorderThickness="2"
                Collapsed="ProjectDesignSurfaceExpander_OnCollapsed"
                ExpandDirection="Left"
                Expanded="ProjectDesignSurfaceExpander_OnExpanded"
                IsExpanded="True"
                Style="{StaticResource LeftExpander}">
                <controls:SidebarExpander.Header>
                    <!--  Project Design Surface  -->
                    <TextBlock
                        Margin="-2,0,0,0"
                        BaselineOffset="100"
                        FontWeight="Bold"
                        Text="{helpers:Localization Pds_ProjectDesignSurface}"
                        TextAlignment="Center"
                        TextOptions.TextFormattingMode="Ideal">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="270" />
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </controls:SidebarExpander.Header>

                <local:ProjectDesignSurfaceView
                    x:Name="ProjectDesignSurfaceControl"
                    Grid.Column="0"
                    DataContext="{Binding ProjectDesignSurfaceViewModel}" />

            </controls:SidebarExpander>

            <GridSplitter
                Name="ProjectDesignSurfaceSplitter"
                Grid.Column="0"
                Width="5"
                DragDelta="ProjectDesignSurfaceSplitter_OnDragDelta" />

            <DockingManager
                x:Name="DockManager"
                Grid.Row="0"
                Grid.Column="1"
                ActiveContent="{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}"
                AllowMixedOrientation="True"
                AnchorablesSource="{Binding Tools}"
                DocumentsSource="{Binding Documents}"
                Theme="{Binding SelectedTheme.Item2}">
                <DockingManager.LayoutItemContainerStyle>
                    <Style TargetType="{x:Type LayoutItem}">
                        <Setter Property="CloseCommand" Value="{Binding Model.RequestCloseCommand}" />
                        <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                    </Style>
                </DockingManager.LayoutItemContainerStyle>
                <DockingManager.LayoutItemTemplateSelector>
                    <panes:PanesTemplateSelector>
                        <!--  DOCUMENTS  -->

                        <panes:PanesTemplateSelector.EnhancedCorpusViewTemplate>
                            <DataTemplate>
                                <enhancedView:EnhancedView />
                            </DataTemplate>
                        </panes:PanesTemplateSelector.EnhancedCorpusViewTemplate>


                        <!--  TOOLS  -->
                        <panes:PanesTemplateSelector.BiblicalTermsViewTemplate>
                            <DataTemplate>
                                <paratextViews:BiblicalTermsView />
                            </DataTemplate>
                        </panes:PanesTemplateSelector.BiblicalTermsViewTemplate>

                        <!--<panes:PanesTemplateSelector.WordMeaningsViewTemplate>
                            <DataTemplate>
                                <paratextViews:WordMeaningsView />
                            </DataTemplate>
                        </panes:PanesTemplateSelector.WordMeaningsViewTemplate>-->

                        <panes:PanesTemplateSelector.MarbleViewTemplate>
                            <DataTemplate>
                                <marble:MarbleView />
                            </DataTemplate>
                        </panes:PanesTemplateSelector.MarbleViewTemplate>

                        <panes:PanesTemplateSelector.PinsViewTemplate>
                            <DataTemplate>
                                <paratextViews:PinsView />
                            </DataTemplate>
                        </panes:PanesTemplateSelector.PinsViewTemplate>

                        <panes:PanesTemplateSelector.TextCollectionViewTemplate>
                            <DataTemplate>
                                <paratextViews:TextCollectionsView />
                            </DataTemplate>
                        </panes:PanesTemplateSelector.TextCollectionViewTemplate>
                        <panes:PanesTemplateSelector.NotesViewTemplate>
                            <DataTemplate>
                                <notes:NotesView />
                            </DataTemplate>
                        </panes:PanesTemplateSelector.NotesViewTemplate>

                    </panes:PanesTemplateSelector>
                </DockingManager.LayoutItemTemplateSelector>

                <DockingManager.LayoutItemContainerStyleSelector>
                    <panes:PanesStyleSelector>
                        <!--  DOCUMENTS  -->
                        <panes:PanesStyleSelector.DocumentStyle>
                            <Style TargetType="{x:Type LayoutItem}">
                                <Setter Property="CanClose" Value="True" />
                                <Setter Property="Title" Value="{Binding Model.Title}" />
                                <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                                <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                                <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <!--<Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />-->
                            </Style>
                        </panes:PanesStyleSelector.DocumentStyle>

                        <!--  TOOLS  -->
                        <panes:PanesStyleSelector.ToolStyle>
                            <Style TargetType="{x:Type LayoutAnchorableItem}">
                                <Setter Property="Title" Value="{Binding Model.Title}" />
                                <Setter Property="CanHide" Value="True" />
                                <Setter Property="CanClose" Value="False" />
                                <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                                <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={StaticResource False}}" />
                                <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                                <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                                <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                            </Style>
                        </panes:PanesStyleSelector.ToolStyle>

                    </panes:PanesStyleSelector>
                </DockingManager.LayoutItemContainerStyleSelector>
                <DockingManager.LayoutUpdateStrategy>
                    <panes:LayoutInitializer />
                </DockingManager.LayoutUpdateStrategy>

                <LayoutRoot>
                    <LayoutPanel DockHeight="1.3781725888324874*" Orientation="Vertical">
                        <LayoutDocumentPane />
                        <LayoutAnchorablePane Name="ToolsPane" DockHeight="0.6218274111675127*" />
                    </LayoutPanel>
                </LayoutRoot>
            </DockingManager>

        </Grid>

        <materialDesign:Card
            Grid.Row="0"
            Grid.Column="0"
            MaxWidth="400"
            Margin="10"
            materialDesign:ElevationAssist.Elevation="Dp0"
            Background="#EEEBEB"
            BorderThickness="1"
            Visibility="{Binding GridIsVisible, Mode=TwoWay}">
            <Grid
                x:Name="GridIsVisible"
                Width="250"
                Margin="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="24" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Content="Save Current Layout:" />
                <ComboBox
                    x:Name="CboNames"
                    Grid.Row="1"
                    Padding="15"
                    DisplayMemberPath="LayoutName"
                    IsEditable="True"
                    ItemsSource="{Binding Path=FileLayouts}"
                    SelectedItem="{Binding Path=SelectedLayout, Mode=OneWayToSource}"
                    Text="{Binding SelectedLayoutText, UpdateSourceTrigger=PropertyChanged}" />
                <DockPanel Grid.Row="2">
                    <Button
                        x:Name="OkSave"
                        Margin="50,0,0,0"
                        Padding="0"
                        HorizontalAlignment="Left"
                        Style="{StaticResource GreenMidButton}">
                        <materialDesign:PackIcon
                            Width="32"
                            Height="32"
                            Foreground="White"
                            Kind="CheckboxMarkedCircle" />
                    </Button>
                    <Button
                        x:Name="CancelSave"
                        Margin="0,0,50,0"
                        Padding="0"
                        HorizontalAlignment="Right"
                        cm:Message.Attach="CancelSave"
                        Style="{StaticResource RedMidButton}">
                        <materialDesign:PackIcon
                            Width="32"
                            Height="32"
                            Foreground="White"
                            Kind="CloseCircle" />
                    </Button>
                </DockPanel>
            </Grid>
        </materialDesign:Card>

        <materialDesign:Card
            Grid.Row="0"
            Grid.Column="0"
            MaxWidth="400"
            Margin="10"
            materialDesign:ElevationAssist.Elevation="Dp0"
            Background="#EEEBEB"
            BorderThickness="1"
            Visibility="{Binding DeleteGridIsVisible, Mode=TwoWay}">

            <Grid
                x:Name="DeleteGridIsVisible"
                Width="250"
                Height="150"
                Margin="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="25" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Content="Delete Layout:" />
                <ListBox
                    x:Name="FileLayouts"
                    Grid.Row="1"
                    BorderBrush="{DynamicResource MaterialDesignCardBackground}"
                    BorderThickness="1">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}" />

                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Button Padding="-10" cm:Message.Attach="[Event Click] = [Action DeleteLayout($this)]">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="{x:Type Button}">
                                            <Setter Property="IsEnabled" Value="True" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Cursor" Value="Hand" />
                                                </Trigger>
                                                <DataTrigger Binding="{Binding LayoutType}" Value="Standard">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <materialDesign:PackIcon
                                        Width="20"
                                        Height="20"
                                        Cursor="Hand"
                                        Foreground="Red"
                                        IsHitTestVisible="False"
                                        Kind="DeleteForever" />
                                </Button>
                                <TextBlock
                                    Grid.Column="1"
                                    MinWidth="200"
                                    Margin="10,0,0,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Text="{Binding LayoutName}">
                                    <TextBlock.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignTextBlock}" TargetType="{x:Type TextBlock}">
                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding LayoutType}" Value="Standard">
                                                    <Setter Property="Foreground" Value="Gray" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <DockPanel Grid.Row="2">
                    <Button
                        x:Name="CancelDelete"
                        Padding="0"
                        HorizontalAlignment="Center"
                        Style="{StaticResource RedMidButton}">
                        <materialDesign:PackIcon
                            Width="32"
                            Height="32"
                            Foreground="White"
                            Kind="CloseCircle" />
                    </Button>

                </DockPanel>


            </Grid>
        </materialDesign:Card>
        <ProgressBar
            x:Name="ProgressBarVisibility"
            Grid.Row="1"
            Width="100"
            Height="100"
            Margin="15,0,5,0"
            IsIndeterminate="True"
            Style="{StaticResource MaterialDesignCircularProgressBar}"
            Visibility="{Binding ShowProgressBar, Converter={StaticResource BooleanToVisibilityConverter}}"
            Value="0" />
        <TextBlock
            Grid.Row="1"
            Margin="0,120,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            FontSize="26"
            Foreground="{StaticResource MaterialDesignBody}"
            Text="{Binding Message}"
            Visibility="{Binding ShowProgressBar, Converter={StaticResource BooleanToVisibilityConverter}}" />
    </Grid>
</Page>

<UserControl
    x:Class="ClearDashboard.Wpf.Application.Views.Shell.ReleaseNotesView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cm="http://caliburnmicro.com"
    xmlns:controls="clr-namespace:ClearDashboard.Wpf.Application.Controls"
    xmlns:converters="clr-namespace:ClearDashboard.Wpf.Application.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:ClearDashboard.Wpf.Application.Helpers"
    xmlns:helpers1="clr-namespace:ClearDashboard.Wpf.Application.Helpers"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:ClearDashboard.Wpf.Application.Models"
    xmlns:resx="clr-namespace:ClearDashboard.Wpf.Application.Strings"
    xmlns:shell="clr-namespace:ClearDashboard.Wpf.Application.ViewModels.Shell"
    xmlns:shell1="clr-namespace:ClearDashboard.Wpf.Application.Views.Shell"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:threading="clr-namespace:ClearDashboard.DataAccessLayer.Threading;assembly=ClearDashboard.DAL"
    xmlns:userControls="clr-namespace:ClearDashboard.Wpf.Application.UserControls"
    Width="300"
    Height="200"
    Margin="5"
    d:DataContext="{d:DesignInstance Type=shell:ReleaseNotesViewModel,
                                     IsDesignTimeCreatable=True}"
    helpers1:Translation.ResourceManager="{x:Static resx:Resources.ResourceManager}"
    Background="Transparent"
    FlowDirection="{Binding WindowFlowDirection}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    Initialized="OnWindowInitialized"
    Loaded="OnWindowLoaded"
    SizeChanged="ApplicationWindow_SizeChanged"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    mc:Ignorable="d">

    <UserControl.Resources>
        <system:Boolean x:Key="True">True</system:Boolean>
        <system:Boolean x:Key="False">False</system:Boolean>
        <BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <Style
            x:Key="CustomLightMetroWindowButtonStyle"
            BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Light}"
            TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignToolBackground}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid Background="Transparent">
                                <ContentPresenter />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
            x:Key="CustomDarkMetroWindowButtonStyle"
            BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Dark}"
            TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignToolBackground}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid Background="Transparent">
                                <ContentPresenter />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style BasedOn="{StaticResource {x:Type mah:WindowButtonCommands}}" TargetType="{x:Type mah:WindowButtonCommands}">
            <Setter Property="LightMinButtonStyle" Value="{StaticResource CustomLightMetroWindowButtonStyle}" />
            <Setter Property="LightMaxButtonStyle" Value="{StaticResource CustomLightMetroWindowButtonStyle}" />
            <Setter Property="LightCloseButtonStyle" Value="{StaticResource CustomLightMetroWindowButtonStyle}" />
            <Setter Property="DarkMinButtonStyle" Value="{StaticResource CustomDarkMetroWindowButtonStyle}" />
            <Setter Property="DarkMaxButtonStyle" Value="{StaticResource CustomDarkMetroWindowButtonStyle}" />
            <Setter Property="DarkCloseButtonStyle" Value="{StaticResource CustomDarkMetroWindowButtonStyle}" />
        </Style>
    </UserControl.Resources>
    <Grid x:Name="ReleaseNotesViewGrid">
        <!--<StatusBar
            x:Name="StatusBar"
            Grid.Row="2"
            Background="{DynamicResource MaterialDesignPaper}"
            Foreground="{DynamicResource MaterialDesignDarkForeground}">-->
        <StackPanel Orientation="Horizontal" Visibility="{Binding ShowUpdateLink}">

            <Button
                x:Name="ClickUpdateLink"
                Margin="10,0,10,0"
                Padding="0"
                BorderThickness="0"
                Style="{StaticResource TransparentButton}">
                <TextBlock
                    Cursor="Hand"
                    Foreground="DodgerBlue"
                    Text="{helpers:Localization ShellView_UpdateFound}"
                    TextDecorations="Underline" />
            </Button>
            <Button
                x:Name="ShowNotes"
                Margin="0,0,10,0"
                Padding="0"
                BorderThickness="0"
                Style="{StaticResource TransparentButton}"
                ToolTip="{helpers:Localization ShellView_ShowNotes}">
                <iconPacks:PackIconPixelartIcons
                    Width="20"
                    Height="20"
                    Foreground="{StaticResource BlueMidBrush}"
                    Kind="Notes" />
            </Button>
        </StackPanel>
        <!--</StatusBar>-->
    </Grid>
</UserControl>

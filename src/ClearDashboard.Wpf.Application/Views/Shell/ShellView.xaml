<mah:MetroWindow
    x:Class="ClearDashboard.Wpf.Application.Views.Shell.ShellView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cal="http://www.caliburnproject.org"
    xmlns:converters="clr-namespace:ClearDashboard.Wpf.Application.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:ClearDashboard.Wpf.Application.Helpers"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:ClearDashboard.Wpf.Application.Models"
    xmlns:models="clr-namespace:ClearDashboard.DataAccessLayer.Models;assembly=ClearDashboard.DAL.Models"
    xmlns:resx="clr-namespace:ClearDashboard.Wpf.Application.Strings"
    xmlns:shell="clr-namespace:ClearDashboard.Wpf.Application.ViewModels.Shell"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:userControls="clr-namespace:ClearDashboard.Wpf.Application.UserControls"
    Title="ClearDashboard"
    d:DataContext="{d:DesignInstance Type=shell:ShellViewModel,
                                     IsDesignTimeCreatable=True}"
    d:DesignHeight="800"
    d:DesignWidth="1200"
    helpers:Translation.ResourceManager="{x:Static resx:Resources.ResourceManager}"
    Background="{DynamicResource MaterialDesignPaper}"
    FlowDirection="{Binding WindowFlowDirection}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    Icon="..\..\Assets/ClearDashboard_Icon.ico"
    Initialized="OnWindowInitialized"
    Loaded="OnWindowLoaded"
    ShowIconOnTitleBar="True"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    TitleCharacterCasing="Normal"

    mc:Ignorable="d">

    <Window.Resources>
        <system:Boolean x:Key="True">True</system:Boolean>
        <system:Boolean x:Key="False">False</system:Boolean>
        <BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:InvertedEnumMatchToBooleanConverter x:Key="InvertedEnumMatchToBooleanConverter" />
        <Style
            x:Key="CustomLightMetroWindowButtonStyle"
            BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Light}"
            TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignToolBackground}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid Background="Transparent">
                                <ContentPresenter />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="CustomDarkMetroWindowButtonStyle"
            BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Dark}"
            TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignToolBackground}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid Background="Transparent">
                                <ContentPresenter />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style BasedOn="{StaticResource {x:Type mah:WindowButtonCommands}}" TargetType="{x:Type mah:WindowButtonCommands}">
            <Setter Property="LightMinButtonStyle" Value="{StaticResource CustomLightMetroWindowButtonStyle}" />
            <Setter Property="LightMaxButtonStyle" Value="{StaticResource CustomLightMetroWindowButtonStyle}" />
            <Setter Property="LightCloseButtonStyle" Value="{StaticResource CustomLightMetroWindowButtonStyle}" />
            <Setter Property="DarkMinButtonStyle" Value="{StaticResource CustomDarkMetroWindowButtonStyle}" />
            <Setter Property="DarkMaxButtonStyle" Value="{StaticResource CustomDarkMetroWindowButtonStyle}" />
            <Setter Property="DarkCloseButtonStyle" Value="{StaticResource CustomDarkMetroWindowButtonStyle}" />
        </Style>
    </Window.Resources>
    <Grid x:Name="ShellViewGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
            <RowDefinition x:Name="StatusRowHeight" Height="Auto" />
        </Grid.RowDefinitions>
        <Border
            Grid.Row="0"
            Grid.ColumnSpan="2"
            Background="{StaticResource MaterialDesignPaper}"
            BorderBrush="{StaticResource PrimaryHueMidBrush}"
            BorderThickness="1"
            CornerRadius="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <StackPanel
                    Grid.Column="0"
                    Margin="5,0,0,0"
                    HorizontalAlignment="Left"
                    Orientation="Horizontal">
                    <Image>
                        <Image.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Connected}" Value="True">
                                        <Setter Property="Image.Source" Value="/Resources/Paratext_Connected32.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Connected}" Value="False">
                                        <Setter Property="Image.Source" Value="/Resources/Paratext_Disconnected32.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <TextBlock
                        Margin="5,0,5,0"
                        VerticalAlignment="Center"
                        Foreground="{StaticResource PrimaryHueMidBrush}">
                        <Run Text="Paratext" />
                        <Run Text="{helpers:Localization ShellView_User}" />
                    </TextBlock>
                    <TextBlock
                        x:Name="ParatextUserName"
                        Margin="0,0,5,0"
                        VerticalAlignment="Center"
                        d:Text="Joe Schmoe" />

                    <TextBlock
                        x:Name="ManuscriptVerse"
                        Margin="0,0,5,0"
                        VerticalAlignment="Center"
                        d:Text="Joe Schmoe" />

                </StackPanel>

                <StackPanel
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    Background="{DynamicResource MaterialDesignPaper}"
                    Orientation="Horizontal">

                    <ComboBox
                        x:Name="SelectedLanguage"
                        MinWidth="140"
                        Margin="0,0,5,0"
                        VerticalContentAlignment="Center"
                        FontSize="12"
                        ItemsSource="{Binding Source={helpers:EnumBindingSource {x:Type model:LanguageTypeValue}}}"
                        SelectedItem="{Binding SelectedLanguage, Mode=TwoWay}" />

                    <Border
                        BorderBrush="{StaticResource PrimaryHueMidBrush}"
                        BorderThickness="1"
                        CornerRadius="3"
                        Visibility="Hidden">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <materialDesign:PackIcon
                                Grid.Column="0"
                                Width="16"
                                VerticalAlignment="Center"
                                Foreground="White"
                                Kind="CheckboxBlankCircle" />
                            <materialDesign:PackIcon
                                Grid.Column="0"
                                Width="16"
                                VerticalAlignment="Center"
                                Kind="CheckboxBlankCircleOutline" />

                            <ToggleButton
                                x:Name="Toggle"
                                Grid.Column="1"
                                Margin="5,0,5,0"
                                Checked="Toggle_Checked"
                                Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                Unchecked="Toggle_Unchecked" />
                            <materialDesign:PackIcon
                                Grid.Column="2"
                                VerticalAlignment="Center"
                                Foreground="Black"
                                Kind="CheckboxBlankCircle" />

                            <materialDesign:PackIcon
                                Grid.Column="0"
                                Width="16"
                                VerticalAlignment="Center"
                                Kind="CheckboxBlankCircleOutline" />
                        </Grid>
                    </Border>

                    <userControls:TimerUserControl
                        x:Name="TimerControl"
                        VerticalAlignment="Top"
                        VerticalContentAlignment="Center"
                        BorderBrush="Gray"
                        BorderThickness="0" />
                    <userControls:ClockUserControl
                        x:Name="ClockControl"
                        Height="34"
                        Margin="0"
                        BorderBrush="Gray"
                        BorderThickness="0" />

                </StackPanel>
            </Grid>
        </Border>

        <!--  BackGround Tasks  -->
        <Border
            x:Name="TaskView"
            Grid.Row="1"
            Width="300"
            Height="200"
            Margin="5,0,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Bottom"
            Background="{StaticResource MaterialDesignPaper}"
            BorderBrush="{StaticResource SecondaryHueMidBrush}"
            BorderThickness="2"
            CornerRadius="3"
            Visibility="{Binding ShowTaskView}">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Opacity" Value="0.0" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ShowTaskView}" Value="Visible">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.0"
                                            Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Grid>
                <!--  BackGround Tasks  -->
                <ListView
                    x:Name="RadioButtonGroupChoiceChipOutline"
                    Margin="5"
                    VerticalContentAlignment="Top"
                    ItemsSource="{Binding BackgroundTaskStatuses}"
                    ScrollViewer.CanContentScroll="False"
                    ScrollViewer.VerticalScrollBarVisibility="Visible"
                    Style="{StaticResource MaterialDesignListBox}">

                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="{StaticResource PrimaryHueDarkBrush}" BorderThickness="1">
                                <StackPanel Orientation="Horizontal">

                                    <!--  ISCOMPLETED ICON  -->
                                    <materialDesign:PackIcon
                                        Width="18"
                                        Height="18"
                                        VerticalAlignment="Center">
                                        <materialDesign:PackIcon.Style>
                                            <Style TargetType="materialDesign:PackIcon">
                                                <Setter Property="Kind" Value="AirplaneSettings" />
                                                <Setter Property="Padding" Value="0" />

                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding TaskStatus}" Value="{x:Static models:StatusEnum.Working}">
                                                        <Setter Property="Foreground" Value="Orange" />
                                                        <Setter Property="Kind" Value="Autorenew" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding TaskStatus}" Value="{x:Static models:StatusEnum.Completed}">
                                                        <Setter Property="Foreground" Value="{StaticResource GreenMidBrush}" />
                                                        <Setter Property="Kind" Value="CheckboxMarkedCircle" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding TaskStatus}" Value="{x:Static models:StatusEnum.Error}">
                                                        <Setter Property="Foreground" Value="{StaticResource RedMidBrush}" />
                                                        <Setter Property="Kind" Value="AlertCircle" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding TaskStatus}" Value="{x:Static models:StatusEnum.CancelTaskRequested}">
                                                        <Setter Property="Foreground" Value="{StaticResource YellowMidBrush}" />
                                                        <Setter Property="Kind" Value="CloseCircleOutline" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </materialDesign:PackIcon.Style>
                                    </materialDesign:PackIcon>

                                    <!-- Cancel Task Button -->
                                    <Button
                                        Width="20"
                                        Height="20"
                                        Margin="4"
                                        Padding="0"
                                        cal:Message.Attach="[Event Click] = [Action CancelTask($this)]"
                                        IsEnabled="{Binding TaskStatus, Converter={StaticResource InvertedEnumMatchToBooleanConverter}, ConverterParameter=Completed}"
                                        ToolTip="{helpers:Localization ShellView_CancelTaskTooltip}">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Background" Value="Transparent" />
                                            </Style>
                                        </Button.Style>
                                        <materialDesign:PackIcon
                                            Width="18"
                                            Height="18"
                                            VerticalAlignment="Center"
                                            Foreground="{StaticResource RedLightBrush}"
                                            Kind="Cancel" />
                                    </Button>

                                    <StackPanel Margin="5,0,0,0" Orientation="Vertical">
                                        <!--  TASK NAME  -->
                                        <TextBlock
                                            Width="370"
                                            HorizontalAlignment="Left"
                                            FontSize="12"
                                            FontWeight="Bold"
                                            Foreground="{StaticResource BlueMidBrush}">
                                            <Run Text="TASK: " />
                                            <Run Text="{Binding Name}" />
                                        </TextBlock>

                                        <!--  TASK DESCRIPTION  -->
                                        <TextBlock
                                            Width="200"
                                            HorizontalAlignment="Left"
                                            FontSize="12"
                                            FontWeight="Bold"
                                            Text="{Binding Description}"
                                            TextWrapping="Wrap">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding TaskStatus}" Value="{x:Static models:StatusEnum.Error}">
                                                            <Setter Property="Foreground" Value="{StaticResource RedLightBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <!--<TextBlock Text="{Binding TaskStatus}" />-->
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <TextBlock
                    Margin="5,0,0,0"
                    VerticalAlignment="Center"
                    FontSize="16"
                    Text="{helpers:Localization ShellView_NoBackGroundTasks}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BackgroundTaskStatuses.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>


                <Button
                    x:Name="CloseTaskBox"
                    Width="16"
                    Height="16"
                    Padding="0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top">
                    X
                </Button>
            </Grid>
        </Border>


        <!--
            NB:  The 'Frame' is created in Bootstrapper.OnStartup so that the INavigationService can be
            added to the DI container at the appropriate time.
        -->
        <!--<Frame x:Name="mainFrame"  cm:Message.Attach="RegisterFrame($source)" Grid.Row="1" NavigationUIVisibility="Hidden" />-->
        <Label
            Grid.Row="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Content="Loading application.  Please wait."
            FontSize="40"
            Visibility="{Binding LoadingApplication, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={StaticResource True}}" />

        <StatusBar
            x:Name="StatusBar"
            Grid.Row="2"
            Background="{DynamicResource MaterialDesignPaper}"
            Foreground="{DynamicResource MaterialDesignDarkForeground}">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="100" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <Button
                    x:Name="BackgroundTasks"
                    Padding="0"
                    Style="{StaticResource TransparentButton}"
                    ToolTip="{helpers:Localization ShellView_ShowBackgroundTasksTooltip}">
                    <Grid>
                        <materialDesign:PackIcon
                            Width="25"
                            Height="30"
                            Foreground="{StaticResource BlueMidBrush}"
                            Kind="ApplicationSettingsOutline" />
                        <ProgressBar
                            Width="15"
                            Height="15"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource GreenMidBrush}"
                            IsIndeterminate="True"
                            Style="{StaticResource MaterialDesignCircularProgressBar}"
                            Visibility="{Binding ShowSpinner}"
                            Value="60" />
                    </Grid>
                </Button>
            </StatusBarItem>
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="2">
                <Button
                    x:Name="StartBackgroundTask"
                    Height="25"
                    Margin="8,0,0,0"
                    Padding="3"
                    Style="{StaticResource GreenLightButton}"
                    ToolTip="This button only shows up in Debug mode"
                    Visibility="Collapsed">
                    Start Background Task
                </Button>
                <!--  Visibility="{x:Static helpers:DebugVisibility.DebugOnly}"  -->
            </StatusBarItem>
            <Separator Grid.Column="3" />
            <StatusBarItem Grid.Column="4">
                <!--<ProgressBar
                    Width="90"
                    Height="16"
                    VerticalAlignment="Center"
                    Visibility="{Binding ShowSpinner}"
                    Value="40" />-->
            </StatusBarItem>
        </StatusBar>

    </Grid>
</mah:MetroWindow>

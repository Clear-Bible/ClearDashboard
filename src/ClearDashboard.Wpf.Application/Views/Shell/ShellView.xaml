<controls:ApplicationWindow
    x:Class="ClearDashboard.Wpf.Application.Views.Shell.ShellView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:ClearDashboard.Wpf.Application.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:ClearDashboard.Wpf.Application.Helpers"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:ClearDashboard.Wpf.Application.Models"
    xmlns:resx="clr-namespace:ClearDashboard.Wpf.Application.Strings"
    xmlns:shell="clr-namespace:ClearDashboard.Wpf.Application.ViewModels.Shell"
    xmlns:shell1="clr-namespace:ClearDashboard.Wpf.Application.Views.Shell"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:userControls="clr-namespace:ClearDashboard.Wpf.Application.UserControls"
    Title="ClearDashboard"
    d:DataContext="{d:DesignInstance Type=shell:ShellViewModel,
                                     IsDesignTimeCreatable=True}"
    d:DesignHeight="800"
    d:DesignWidth="1200"
    helpers:Translation.ResourceManager="{x:Static resx:Resources.ResourceManager}"
    Background="{DynamicResource MaterialDesignPaper}"
    FlowDirection="{Binding WindowFlowDirection}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    Icon="..\..\Assets/ClearDashboard_Icon.ico"
    Initialized="OnWindowInitialized"
    Loaded="OnWindowLoaded"
    ShowIconOnTitleBar="True"
    SizeChanged="ApplicationWindow_SizeChanged"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    TitleCharacterCasing="Normal"
    mc:Ignorable="d">

    <Window.Resources>
        <system:Boolean x:Key="True">True</system:Boolean>
        <system:Boolean x:Key="False">False</system:Boolean>
        <BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <Style
            x:Key="CustomLightMetroWindowButtonStyle"
            BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Light}"
            TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignToolBackground}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid Background="Transparent">
                                <ContentPresenter />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
            x:Key="CustomDarkMetroWindowButtonStyle"
            BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Dark}"
            TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignToolBackground}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid Background="Transparent">
                                <ContentPresenter />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style BasedOn="{StaticResource {x:Type mah:WindowButtonCommands}}" TargetType="{x:Type mah:WindowButtonCommands}">
            <Setter Property="LightMinButtonStyle" Value="{StaticResource CustomLightMetroWindowButtonStyle}" />
            <Setter Property="LightMaxButtonStyle" Value="{StaticResource CustomLightMetroWindowButtonStyle}" />
            <Setter Property="LightCloseButtonStyle" Value="{StaticResource CustomLightMetroWindowButtonStyle}" />
            <Setter Property="DarkMinButtonStyle" Value="{StaticResource CustomDarkMetroWindowButtonStyle}" />
            <Setter Property="DarkMaxButtonStyle" Value="{StaticResource CustomDarkMetroWindowButtonStyle}" />
            <Setter Property="DarkCloseButtonStyle" Value="{StaticResource CustomDarkMetroWindowButtonStyle}" />
        </Style>
    </Window.Resources>
    <Grid x:Name="ShellViewGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
            <RowDefinition x:Name="StatusRowHeight" Height="Auto" />
        </Grid.RowDefinitions>
        <Border
            Grid.Row="0"
            Grid.ColumnSpan="2"
            Background="{StaticResource MaterialDesignPaper}"
            BorderBrush="{StaticResource PrimaryHueMidBrush}"
            BorderThickness="1"
            CornerRadius="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <StackPanel
                    Grid.Column="0"
                    Margin="5,0,0,0"
                    HorizontalAlignment="Left"
                    Orientation="Horizontal">
                    <Image>
                        <Image.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Connected}" Value="True">
                                        <Setter Property="Image.Source" Value="/Resources/Paratext_Connected32.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Connected}" Value="False">
                                        <Setter Property="Image.Source" Value="/Resources/Paratext_Disconnected32.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <TextBlock
                        Margin="5,0,5,0"
                        VerticalAlignment="Center"
                        Foreground="{StaticResource PrimaryHueMidBrush}">
                        <Run Text="Paratext" />
                        <Run Text="{helpers:Localization ShellView_User}" />
                    </TextBlock>
                    <TextBlock
                        x:Name="ParatextUserName"
                        Margin="0,0,5,0"
                        VerticalAlignment="Center"
                        d:Text="Joe Schmoe" />

                    <TextBlock
                        x:Name="ManuscriptVerse"
                        Margin="0,0,5,0"
                        VerticalAlignment="Center"
                        d:Text="Joe Schmoe" />

                </StackPanel>

                <StackPanel
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    Background="{DynamicResource MaterialDesignPaper}"
                    Orientation="Horizontal">

                    <ComboBox
                        x:Name="SelectedLanguage"
                        MinWidth="140"
                        Margin="0,0,5,0"
                        VerticalContentAlignment="Center"
                        FontSize="12"
                        ItemsSource="{Binding Source={helpers:EnumBindingSource {x:Type model:LanguageTypeValue}}}"
                        SelectedItem="{Binding SelectedLanguage, Mode=TwoWay}" />

                    <Border
                        BorderBrush="{StaticResource PrimaryHueMidBrush}"
                        BorderThickness="1"
                        CornerRadius="3"
                        Visibility="Hidden">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <materialDesign:PackIcon
                                Grid.Column="0"
                                Width="16"
                                VerticalAlignment="Center"
                                Foreground="White"
                                Kind="CheckboxBlankCircle" />
                            <materialDesign:PackIcon
                                Grid.Column="0"
                                Width="16"
                                VerticalAlignment="Center"
                                Kind="CheckboxBlankCircleOutline" />

                            <ToggleButton
                                x:Name="Toggle"
                                Grid.Column="1"
                                Margin="5,0,5,0"
                                Checked="Toggle_Checked"
                                Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                Unchecked="Toggle_Unchecked" />
                            <materialDesign:PackIcon
                                Grid.Column="2"
                                VerticalAlignment="Center"
                                Foreground="Black"
                                Kind="CheckboxBlankCircle" />

                            <materialDesign:PackIcon
                                Grid.Column="0"
                                Width="16"
                                VerticalAlignment="Center"
                                Kind="CheckboxBlankCircleOutline" />
                        </Grid>
                    </Border>

                    <userControls:TimerUserControl
                        x:Name="TimerControl"
                        VerticalAlignment="Top"
                        VerticalContentAlignment="Center"
                        BorderBrush="Gray"
                        BorderThickness="0" />
                    <userControls:ClockUserControl
                        x:Name="ClockControl"
                        Height="34"
                        Margin="0"
                        BorderBrush="Gray"
                        BorderThickness="0" />

                </StackPanel>
            </Grid>
        </Border>

        <userControls:AnchoredPopup Grid.Row="1"  IsOpen="{Binding BackgroundTasksViewModel.ShowPopup}" 
                                    PlacementTarget="{Binding ElementName=BackgroundTasks}"
                                    Placement="Top"
                                    StaysOpen="True"
                                    AllowsTransparency="True"
                                    VerticalOffset="12"
                                    HorizontalOffset="{Binding PopupHorizontalOffset}"
                                    IsTopmost="False">
            <shell1:BackgroundTasksView x:Name="BackgroundTasksView"  
                                               DataContext="{Binding BackgroundTasksViewModel}"/>

        </userControls:AnchoredPopup>



        <!--
            NB:  The 'Frame' is created in Bootstrapper.OnStartup so that the INavigationService can be
            added to the DI container at the appropriate time.
        -->
        <!--<Frame x:Name="mainFrame"  cm:Message.Attach="RegisterFrame($source)" Grid.Row="1" NavigationUIVisibility="Hidden" />-->
        <Label
            Grid.Row="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Content="Loading..."
            FontSize="40"
            Visibility="{Binding LoadingApplication, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={StaticResource True}}" />

        <StatusBar
            x:Name="StatusBar"
            Grid.Row="2"
            Background="{DynamicResource MaterialDesignPaper}"
            Foreground="{DynamicResource MaterialDesignDarkForeground}">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <Button
                    x:Name="BackgroundTasks"
                    Margin="0"
                    Padding="0"
                    BorderThickness="0"
                    Style="{StaticResource TransparentButton}"
                    ToolTip="{helpers:Localization ShellView_ShowBackgroundTasksTooltip}">
                    <Grid>
                        <materialDesign:PackIcon
                            Width="36"
                            Height="36"
                            Foreground="{StaticResource BlueMidBrush}"
                            Kind="TooltipOutline" />
                        <ProgressBar
                            Width="15"
                            Height="15"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource GreenMidBrush}"
                            IsIndeterminate="True"
                            Style="{StaticResource MaterialDesignCircularProgressBar}"
                            Visibility="{Binding BackgroundTasksViewModel.ShowSpinner}"
                            Value="60" />
                    </Grid>
                </Button>
            </StatusBarItem>
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="2" />
            <Separator Grid.Column="3" />
            <StatusBarItem Grid.Column="4">
                <StackPanel Orientation="Horizontal" Visibility="{Binding ShowUpdateLink}">

                    <Button
                        x:Name="ClickUpdateLink"
                        Margin="10,0,10,0"
                        Padding="0"
                        BorderThickness="0"
                        Style="{StaticResource TransparentButton}">
                        <TextBlock
                            Cursor="Hand"
                            Foreground="DodgerBlue"
                            Text="{helpers:Localization ShellView_UpdateFound}"
                            TextDecorations="Underline" />
                    </Button>
                    <Button
                        x:Name="ShowNotes"
                        Margin="0,0,10,0"
                        Padding="0"
                        BorderThickness="0"
                        Style="{StaticResource TransparentButton}"
                        ToolTip="{helpers:Localization ShellView_ShowNotes}">
                        <iconPacks:PackIconPixelartIcons
                            Width="20"
                            Height="20"
                            Foreground="{StaticResource BlueMidBrush}"
                            Kind="Notes" />
                    </Button>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>

    </Grid>
</controls:ApplicationWindow>

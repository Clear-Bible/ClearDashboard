<UserControl
    x:Class="ClearDashboard.Wpf.Application.Views.Lexicon.ImportWordAnalysesDialogView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cal="http://www.caliburnproject.org"
    xmlns:lexiconViewModels="clr-namespace:ClearDashboard.Wpf.Application.ViewModels.Lexicon"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:ClearDashboard.Wpf.Application.Helpers;assembly=ClearDashboard.Wpf.Application.Abstractions"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:resx="clr-namespace:ClearDashboard.Wpf.Application.Strings;assembly=ClearDashboard.Wpf.Application.Abstractions"
    d:DataContext="{d:DesignInstance Type=lexiconViewModels:ImportWordAnalysesDialogViewModel, IsDesignTimeCreatable=True}"
    d:DesignHeight="300"
    d:DesignWidth="400"
    Height="300"
    Width="400"
    helpers:Translation.ResourceManager="{x:Static resx:Resources.ResourceManager}"
    Background="{DynamicResource MaterialDesignPaper}"
    FlowDirection="{Binding WindowFlowDirection}"
    FontFamily="{StaticResource ClearDashboardFont}"
    mc:Ignorable="d">
    <UserControl.Resources>

        <Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="0,8" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        </Style>

        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="20,10" />
            <Setter Property="FontSize" Value="24" />
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>


        <StackPanel
            Grid.Row="0"
            Grid.Column="0"
            Margin="10,20"
            Orientation="Vertical"
            HorizontalAlignment="Center">
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="24"
                Text="{helpers:Localization ImportWordAnalyses_Title}" />
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="16"
                Text="{Binding TokenizedTextCorpusDisplayName}" />

        </StackPanel>

        <ProgressBar
            Grid.Row="2"
            Width="76"
            Height="75"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            IsIndeterminate="True"
            Style="{StaticResource ClearDashboardCircularProgressBar}"
            Visibility="{Binding ProgressBarVisibility}"
            Value="0" />

        <StackPanel
            Grid.Row="3"
            
        >
            <TextBlock
                MinWidth="50"
                Margin="0,5"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="20"
                Foreground="{Binding StatusMessageColor}"
                Text="{Binding StatusMessage}" />
            <Button
                x:Name="Cancel"
                Width="50"
                Margin="0,10"
                cal:Message.Attach="Cancel"
                Content="{Binding CancelAction}"
                IsEnabled="{Binding CanCancelAction}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Height" Value="50" />
                        <Setter Property="MinWidth" Value="100" />
                        <Setter Property="Margin" Value="2" />
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border>
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="CornerRadius" Value="5" />
                                                <Setter Property="BorderThickness" Value="1" />
                                                <Setter Property="BorderBrush" Value="Gray" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="LightGray" />
                                                    </Trigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding CancelAction}" Value="Done" />
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" Value="{StaticResource SecondaryHueMidBrush}" />
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding CancelAction}" Value="Cancel" />
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" Value="{StaticResource AlternativeButtonHueBrush}" />
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding CancelAction}" Value="Close" />
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" Value="{StaticResource AlternativeButtonHueBrush}" />
                                                    </MultiDataTrigger>

                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Background" Value="LightGray" />
                                                    </Trigger>

                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="LightGray" />
                                                    </Trigger>

                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <ContentPresenter x:Name="ButtonContent" />
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="1" />
                                <Setter Property="Foreground" Value="Gray" />
                                <Setter Property="Background" Value="LightGray" />
                            </Trigger>

                        </Style.Triggers>


                    </Style>
                </Button.Style>
            </Button>

        </StackPanel>


    </Grid>

</UserControl>



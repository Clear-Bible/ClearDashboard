<UserControl
    x:Class="ClearDashboard.Wpf.Application.Views.Lexicon.LexiconEditDialogView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    FontFamily="{StaticResource ClearDashboardFont}"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:ClearDashboard.Wpf.Application.Helpers;assembly=ClearDashboard.Wpf.Application.Abstractions"
    xmlns:lexicon="clr-namespace:ClearDashboard.Wpf.Application.ViewModels.Lexicon"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:resx="clr-namespace:ClearDashboard.Wpf.Application.Strings;assembly=ClearDashboard.Wpf.Application.Abstractions"
    xmlns:cm="http://caliburnmicro.com"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:converters="clr-namespace:ClearDashboard.Wpf.Application.Converters"
    d:DataContext="{d:DesignInstance Type=lexicon:LexiconEditDialogViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    helpers:Translation.ResourceManager="{x:Static resx:Resources.ResourceManager}"
    mc:Ignorable="d"
    MaxWidth="1024"
    MaxHeight="800">

    <UserControl.Resources>
       
        <Style x:Key="Label" TargetType="{ x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Margin" Value="5 0 10 0"></Setter>
        </Style>
        <Style x:Key="HintTextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}" TargetType="{x:Type TextBox}">
            <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="1 -6 1 0"/>
            <Setter Property="Margin" Value="5 0 10 0"></Setter>
        </Style>
        <Style x:Key="RowButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="MinHeight" Value="50" />
            <Setter Property="Width" Value="170" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="LightGray" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="#EEEBEB" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="Transparent" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Background="Transparent">
                                <ContentPresenter x:Name="ButtonContent" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="1" />
                    <Setter Property="Foreground" Value="Gray" />
                    <Setter Property="Background" Value="LightGray" />
                </Trigger>
            </Style.Triggers>
           
        </Style>
       
    </UserControl.Resources>
    <Grid MinWidth="800">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="60" />
        </Grid.RowDefinitions>
        <materialDesign:Card Margin="5">
            <Grid Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="35" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="150" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="150" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <TextBlock
                Grid.Row="0"
                Grid.Column="0"
                Text="{helpers:Localization LexiconEdit_SourceLanguage}" 
                Style="{StaticResource Label}"/>
            <ComboBox
                x:Name="SourceLanguage"
                Grid.Row="0"
                Grid.Column="1"
                Margin="5"
                IsEnabled="{Binding EnableSourceLanguageComboBox}"
                ItemsSource="{Binding SourceLanguages}"
                SelectedItem="{Binding SelectedSourceLanguage}" />
            <TextBlock
                Grid.Row="0"
                Grid.Column="2"
                Style="{StaticResource Label}"
                Text="{helpers:Localization LexiconEdit_TargetLanguage}" />
            <ComboBox
                x:Name="TargetLanguage"
                Grid.Row="0"
                Grid.Column="3"
                Margin="5"
                IsEnabled="{Binding EnableTargetLanguageComboBox}"
                ItemsSource="{Binding TargetLanguages}"
                SelectedItem="{Binding SelectedTargetLanguage}" />
            <TextBlock Grid.Row="1" 
                       Grid.Column="0" Style="{StaticResource Label}"
                       Text="{helpers:Localization LexiconEdit_FindAll}"
                       HorizontalAlignment="Left"></TextBlock>
            <WrapPanel Grid.Row="2" 
                       Grid.Column="0" 
                       Grid.ColumnSpan="5" 
                       Margin="5"
                       Orientation="Horizontal">

                <CheckBox x:Name="FindAllLexemeCheckBox" 
                          cm:Message.Attach="[Event Checked] = [Action OnLexemeChecked($source)]" 
                          Content="{helpers:Localization LexiconEdit_Lexeme}" 
                          IsChecked="{Binding State.LexemeChecked}"  />
                <ListBox x:Name="FindAllLexemeOptions"
                         Height="28"
                         Margin="4"
                         cm:Message.Attach="[Event SelectionChanged] = [Action OnLexemeOptionChanged($eventArgs)]"
                         IsEnabled="{Binding FetchingData, Converter={StaticResource BooleanInversionConverter}}"
                         SelectedIndex="0"
                         SelectionMode="Single"
                         Style="{StaticResource MaterialDesignToolToggleListBox}"
                         Visibility="{Binding State.LexemeChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <ListBoxItem Content="{helpers:Localization LexiconEdit_Partially}" Tag="{x:Static lexicon:LexiconEditTags.Partially}" />
                    <ListBoxItem Content="{helpers:Localization LexiconEdit_Fully}" Tag="{x:Static lexicon:LexiconEditTags.Fully}" />
                </ListBox>
                <TextBlock Text="{helpers:Localization LexiconEdit_Or}" 
                           Style="{StaticResource Label}"
                           Visibility="{Binding State.LexemeAndFormsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"></TextBlock>
                <CheckBox x:Name="FormsCheckBox" cm:Message.Attach="[Event Checked] = [Action OnFormsChecked($source)]" Content="{helpers:Localization LexiconEdit_Forms}" IsChecked="{Binding State.FormsChecked}"  />
                <ListBox x:Name="FormsOptions"
                         Height="28"
                         Margin="4"
                         cm:Message.Attach="[Event SelectionChanged] = [Action OnFormsOptionChanged($eventArgs)]"
                         IsEnabled="{Binding FetchingData, Converter={StaticResource BooleanInversionConverter}}"
                         SelectedIndex="0"
                         SelectionMode="Single"
                         Style="{StaticResource MaterialDesignToolToggleListBox}"
                         Visibility="{Binding State.FormsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <ListBoxItem Content="{helpers:Localization LexiconEdit_Partially}" Tag="{x:Static lexicon:LexiconEditTags.Partially}" />
                    <ListBoxItem Content="{helpers:Localization LexiconEdit_Fully}" Tag="{x:Static lexicon:LexiconEditTags.Fully}" />
                </ListBox>
                <!--<TextBlock Text="{helpers:Localization LexiconEdit_Matching}" 
                           Style="{StaticResource Label}"
                           Visibility="{Binding State.LexemeOrFormsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"></TextBlock>-->
                <TextBox x:Name="FormsMatch"  
                         cm:Message.Attach="[Event TextChanged] = [Action OnFormsMatchChanged($source, $eventArgs)]" 
                         materialDesign:HintAssist.Hint="{helpers:Localization LexiconEdit_Matching}"
                         Style="{StaticResource HintTextBox}"
                         Text="{Binding State.FormsMatch}"
                         Width="100" 
                         Height="30"
                         Visibility="{Binding State.LexemeOrFormsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"></TextBox>

                <ListBox x:Name="PredicateOptions"
                         Height="28"
                         Margin="4"
                         cm:Message.Attach="[Event SelectionChanged] = [Action OnFormsOptionChanged($eventArgs)]"
                         IsEnabled="{Binding FetchingData, Converter={StaticResource BooleanInversionConverter}}"
                         SelectedIndex="0"
                         SelectionMode="Single"
                         Style="{StaticResource MaterialDesignToolToggleListBox}"
                         Visibility="{Binding State.TransitionAndLexemeOrFormsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <ListBoxItem Content="{helpers:Localization LexiconEdit_And}" Tag="{x:Static lexicon:LexiconEditTags.And}" />
                    <ListBoxItem Content="{helpers:Localization LexiconEdit_Or}" Tag="{x:Static lexicon:LexiconEditTags.Or}" />
                </ListBox>
                <CheckBox x:Name="TranslationCheckBox"  cm:Message.Attach="[Event Checked] = [Action OnTranslationChecked($source)]" Content="{helpers:Localization LexiconEdit_Translation}" IsChecked="{Binding State.TranslationChecked}"  />
                <!--<TextBlock Text="{helpers:Localization LexiconEdit_FullyMatching}" 
                           Style="{StaticResource Label}"
                           Visibility="{Binding State.TranslationChecked, Converter={StaticResource BooleanToVisibilityConverter}}"></TextBlock>-->
                <TextBox x:Name="TranslationMatch"  cm:Message.Attach="[Event TextChanged] = [Action OnTranslationMatchChanged($source, $eventArgs)]" 
                         materialDesign:HintAssist.Hint="{helpers:Localization LexiconEdit_FullyMatching}"
                        Text ="{Binding State.TranslationMatch}"
                         Style="{StaticResource HintTextBox}"
                         Width="100" 
                         Height="30"
                         Visibility="{Binding State.TranslationChecked, Converter={StaticResource BooleanToVisibilityConverter}}"></TextBox>
                <Button x:Name="ApplyFilterButton" Style="{StaticResource RowButtonStyle}" 
                         cm:Message.Attach="[Event Click] = [Action OnApplyFilterButtonClicked()]">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <TextBlock Text="{helpers:Localization LexiconEdit_ApplyFilter}" TextWrapping="Wrap" />
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>

                </WrapPanel>

        </Grid>
        </materialDesign:Card>
        <DataGrid
             x:Name="LexiconEditDataGrid"
             Grid.Row="1"
             Grid.Column="0"
             Margin="4"
             HorizontalAlignment="Stretch"
             AutoGenerateColumns="False"
             IsReadOnly="True"
             ItemsSource="{Binding EditableLexemes}"
             ScrollViewer.CanContentScroll="True"
             ScrollViewer.VerticalScrollBarVisibility="Visible"
             SelectionMode="Single"
             SelectionUnit="FullRow"
             VirtualizingPanel.IsVirtualizing="True"
             VirtualizingPanel.IsVirtualizingWhenGrouping="False"
             VirtualizingPanel.VirtualizationMode="Standard">
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="250">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="Action" />
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <Button x:Name="EditButton" Style="{StaticResource RowButtonStyle}" 
                                        cm:Action.TargetWithoutContext="{Binding }"
                                        cm:Message.Attach="[Event Click] = [Action OnEditButtonClicked()]" Content="{Binding EditButtonLabel}">
                                    <!--<Button.ContentTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding  Path=EditButtonLabel}" TextWrapping="Wrap" />
                                        </DataTemplate>
                                    </Button.ContentTemplate>-->
                                </Button>
                                <Button x:Name="ActionButton" Style="{StaticResource RowButtonStyle}"  
                                    cm:Action.TargetWithoutContext="{Binding DataContext, ElementName=LexiconEditDataGrid}"
                                    cm:Message.Attach="[Event Click] = [Action OnAddButtonClicked($dataContext, $source)]" 
                                     Visibility="{Binding IsEditing, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                    <Button.IsEnabled>

                                        <MultiBinding Converter="{StaticResource LexiconEditDialogViewModelToBooleanConverter}">
                                            <Binding ElementName="LexiconEditDataGrid" Path="DataContext" />
                                            <Binding/>
                                        </MultiBinding>
                          
                                    </Button.IsEnabled>
                                    <Button.ContentTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding ElementName=LexiconEditDataGrid, Path=DataContext.ActionButtonLabel}" TextWrapping="Wrap" />
                                        </DataTemplate>
                                    </Button.ContentTemplate>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn
                     Width="100"
                     Binding="{Binding Text}"
                     Header="{helpers:Localization LexiconEdit_Lexeme}" />
                <DataGridTextColumn
                     Width="125"
                     Binding="{Binding Type}"
                     Header="{helpers:Localization  LexiconEdit_Type}" />
                <!--<DataGridTextColumn
                    Width="250"
                    Binding="{Binding Forms}"
                    Header="{helpers:Localization  LexiconEdit_Forms}" />-->
                <DataGridTemplateColumn Width="250">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{helpers:Localization  LexiconEdit_Forms}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox x:Name="FormsTextBox" Text="{Binding Forms, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" TextWrapping="Wrap" IsReadOnly="{Binding IsEditing, Converter={StaticResource BooleanInversionConverter}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--<DataGridTextColumn
                    Width="250"
                    Binding="{Binding Meanings}"
                    Header="{helpers:Localization  LexiconEdit_Meanings}" />-->
                <DataGridTemplateColumn Width="250">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{helpers:Localization  LexiconEdit_Meanings}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox x:Name="MeaningsTextBox" Text="{Binding Meanings, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" TextWrapping="Wrap" IsReadOnly="{Binding IsEditing, Converter={StaticResource BooleanInversionConverter}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>


        <StackPanel
            Grid.Row="2"
            HorizontalAlignment="Center"
            Orientation="Horizontal">
            <Button
                x:Name="Save"
                Margin="10"
                Content="{helpers:Localization LexiconEdit_SaveChanges}"
                FontFamily="{StaticResource ClearDashboardFont}"
                FontSize="14"
                IsEnabled="{Binding CanSave}"
                Style="{StaticResource TransparentStyle}" />
            <Button
                x:Name="Cancel"
                Margin="10"
                Content="{helpers:Localization LexiconEdit_Cancel}"
                FontFamily="{StaticResource ClearDashboardFont}"
                FontSize="14"
                IsEnabled="{Binding CanCancel}"
                Style="{StaticResource TransparentStyle}" />
        </StackPanel>
        <ProgressBar
            Grid.Row="1"
            Grid.RowSpan="3"
            Width="76"
            Height="75"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            IsIndeterminate="True"
            Style="{StaticResource ClearDashboardCircularProgressBar}"
            Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter } }"
            Value="0" />
    </Grid>
</UserControl>

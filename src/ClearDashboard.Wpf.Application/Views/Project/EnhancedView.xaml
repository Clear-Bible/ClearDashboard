<UserControl
    x:Class="ClearDashboard.Wpf.Application.Views.Project.EnhancedView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cm="http://caliburnmicro.com"
    xmlns:controls="clr-namespace:ClearApplicationFoundation.Controls;assembly=ClearApplicationFoundation"
    xmlns:converters="clr-namespace:ClearDashboard.Wpf.Application.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:ClearDashboard.Wpf.Application.Helpers"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:project="clr-namespace:ClearDashboard.Wpf.Application.ViewModels.Project"
    xmlns:resx="clr-namespace:ClearDashboard.Wpf.Application.Strings"
    xmlns:userControls="clr-namespace:ClearDashboard.Wpf.Application.UserControls"
    d:DataContext="{d:DesignInstance Type=project:EnhancedViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    helpers:Translation.ResourceManager="{x:Static resx:Resources.ResourceManager}"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <converters:VerseTokensToChapterVerseValueConvertor x:Key="VerseTokensToChapterVerseValueConvertor" />
            <converters:TokensTextRowMultiValueConvertor x:Key="TokensTextRowMultiValueConvertor" />
            <converters:WidthSubtraction x:Key="WidthSubtraction" />
            <userControls:BoolOrientationConverter x:Key="BoolOrientationConverter" />
            <userControls:BoolHorizontalAlignmentConverter x:Key="BoolHorizontalAlignmentConverter" />
            <userControls:ThicknessConverter x:Key="ThicknessConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="MainGrid" Background="{DynamicResource MaterialDesignBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <materialDesign:DrawerHost
            x:Name="DrawerHost"
            Grid.Row="0"
            VerticalAlignment="Center"
            Background="{StaticResource MahApps.Brushes.Accent}"
            BorderBrush="{DynamicResource MaterialDesignDivider}"
            BorderThickness="2">
            <materialDesign:DrawerHost.Style>
                <Style BasedOn="{StaticResource {x:Type materialDesign:DrawerHost}}" TargetType="materialDesign:DrawerHost">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=BackgroundToggle}" Value="True">
                            <Setter Property="OverlayBackground" Value="{DynamicResource PrimaryHueMidBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </materialDesign:DrawerHost.Style>
            <materialDesign:DrawerHost.TopDrawerContent>


                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150" />
                        <ColumnDefinition Width="275" />
                        <ColumnDefinition Width="275" />
                        <ColumnDefinition Width="275" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>


                    <Button
                        Grid.Row="4"
                        Grid.Column="0"
                        Margin="4"
                        VerticalAlignment="Center"
                        Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                        CommandParameter="{x:Static Dock.Top}"
                        Content="CLOSE" />

                    <Label
                        Grid.Row="0"
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontWeight="Bold">
                        Title:
                    </Label>
                    <StackPanel
                        Grid.Row="0"
                        Grid.Column="1"
                        Orientation="Horizontal">
                        <Label VerticalAlignment="Center">Font size:</Label>
                        <Slider
                            Name="TitleFontSizeSlider"
                            Width="100"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="48"
                            Minimum="8"
                            TickFrequency="1"
                            Value="16" />
                        <Label
                            Width="40"
                            VerticalAlignment="Center"
                            Content="{Binding ElementName=TitleFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <Label
                        Grid.Row="1"
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontWeight="Bold">
                        Tokens:
                    </Label>
                    <StackPanel
                        Grid.Row="1"
                        Grid.Column="1"
                        Orientation="Horizontal">
                        <Label VerticalAlignment="Center">Font size:</Label>
                        <Slider
                            Name="TokenFontSizeSlider"
                            Width="100"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="48"
                            Minimum="8"
                            TickFrequency="1"
                            Value="14" />
                        <Label
                            Width="40"
                            VerticalAlignment="Center"
                            Content="{Binding ElementName=TokenFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="1"
                        Grid.Column="2"
                        Orientation="Horizontal">
                        <Label VerticalAlignment="Center">Vertical spacing:</Label>
                        <Slider
                            Name="TokenVerticalSpacingSlider"
                            Width="100"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="40"
                            Minimum="0"
                            TickFrequency="1"
                            Value="5" />
                        <Label
                            Width="40"
                            VerticalAlignment="Center"
                            Content="{Binding ElementName=TokenVerticalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="1"
                        Grid.Column="3"
                        Orientation="Horizontal">
                        <Label VerticalAlignment="Center">Horizontal spacing:</Label>
                        <Slider
                            Name="HorizontalSpacingSlider"
                            Width="100"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="40"
                            Minimum="1"
                            TickFrequency="1"
                            Value="10" />
                        <Label
                            Width="40"
                            VerticalAlignment="Center"
                            Content="{Binding ElementName=HorizontalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>

                    <StackPanel
                        Grid.Row="2"
                        Grid.Column="0"
                        Orientation="Horizontal">
                        <Label VerticalAlignment="Center" FontWeight="Bold">Translations:</Label>
                        <CheckBox
                            Name="ShowTranslationsCheckbox"
                            Margin="22,0,0,0"
                            VerticalAlignment="Center"
                            IsChecked="True" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="2"
                        Grid.Column="1"
                        Orientation="Horizontal">
                        <Label VerticalAlignment="Center">Font size:</Label>
                        <Slider
                            Name="TranslationFontSizeSlider"
                            Width="100"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="48"
                            Minimum="8"
                            TickFrequency="1"
                            Value="16" />
                        <Label
                            Width="40"
                            VerticalAlignment="Center"
                            Content="{Binding ElementName=TranslationFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="2"
                        Grid.Column="2"
                        Orientation="Horizontal">
                        <Label VerticalAlignment="Center">Vertical spacing:</Label>
                        <Slider
                            Name="TranslationVerticalSpacingSlider"
                            Width="100"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="40"
                            Minimum="0"
                            TickFrequency="1"
                            Value="10" />
                        <Label
                            Width="40"
                            VerticalAlignment="Center"
                            Content="{Binding ElementName=TranslationVerticalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>

                    <StackPanel
                        Grid.Row="3"
                        Grid.Column="0"
                        Orientation="Horizontal">
                        <Label VerticalAlignment="Center" FontWeight="Bold">Note Indicators:</Label>
                        <CheckBox
                            Name="ShowNoteIndicatorsCheckbox"
                            Margin="5,0,0,0"
                            VerticalAlignment="Center"
                            IsChecked="True" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="3"
                        Grid.Column="1"
                        Orientation="Horizontal">
                        <Label Margin="0,0,14,0" VerticalAlignment="Center">Height:</Label>
                        <Slider
                            Name="NoteIndicatorHeightSlider"
                            Width="100"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="10"
                            Minimum="1"
                            TickFrequency="1"
                            Value="3" />
                        <Label
                            Width="40"
                            VerticalAlignment="Center"
                            Content="{Binding ElementName=NoteIndicatorHeightSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>

                    <StackPanel
                        Grid.Row="4"
                        Grid.Column="1"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                        <CheckBox
                            Name="CenteredCheckbox"
                            VerticalAlignment="Center"
                            IsChecked="True" />
                        <Label VerticalAlignment="Center">Center Words</Label>
                    </StackPanel>
                    <StackPanel
                        Grid.Row="4"
                        Grid.Column="2"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                        <CheckBox
                            Name="VerticalCheckbox"
                            VerticalAlignment="Center"
                            IsChecked="False" />
                        <Label VerticalAlignment="Center">Vertical Layout</Label>
                    </StackPanel>
                    <StackPanel
                        Grid.Row="4"
                        Grid.Column="3"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                        <CheckBox
                            Name="WrapCheckbox"
                            VerticalAlignment="Center"
                            IsChecked="True" />
                        <Label VerticalAlignment="Center">Wrap Lines</Label>
                    </StackPanel>
                </Grid>
            </materialDesign:DrawerHost.TopDrawerContent>

            <Grid Background="LightGray">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Button
                    Grid.Column="0"
                    Margin="4,4,4,4"
                    Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                    CommandParameter="{x:Static Dock.Top}"
                    Content="{materialDesign:PackIcon Kind=Tune}"
                    ToolTip="Show the Enhanced View Controls" />

                <userControls:BcvUserControl
                    Grid.Column="1"
                    Margin="50,0,0,0"
                    BcvDictionary="{Binding Path=BcvDictionary}"
                    CurrentBcv="{Binding Path=CurrentBcv}"
                    IsControlEnabled="True"
                    IsControlMinimal="False"
                    IsRtl="{Binding IsRtl}"
                    ParatextSync="{Binding Path=ParatextSync, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ShowHeader="True"
                    ShowOffsetControl="True"
                    VerseChange="{Binding Path=VerseChange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    VerseOffsetRange="{Binding Path=VerseOffsetRange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
        </materialDesign:DrawerHost>


        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="25" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ScrollViewer>
                <StackPanel Orientation="Vertical">

                    <!--  Row 0  -->
                    <Border
                        x:Name="Border0"
                        Margin="2"
                        Padding="3"
                        BorderBrush="{Binding VersesDisplay.Row0BorderColor}"
                        BorderThickness="2"
                        CornerRadius="4"
                        Visibility="{Binding VersesDisplay.Row0Visibility}">
                        <StackPanel Orientation="Horizontal">

                            <StackPanel
                                Margin="0,0,5,0"
                                VerticalAlignment="Center"
                                Orientation="Vertical">
                                <Button IsEnabled="False">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}" TargetType="{x:Type Button}">
                                            <Setter Property="Padding" Value="3" />
                                        </Style>
                                    </Button.Style>
                                    <materialDesign:PackIcon
                                        Width="20"
                                        Height="20"
                                        Kind="ArrowUpDropCircle" />
                                </Button>
                                <Button Command="{Binding MoveCorpusDownRow0}" CommandParameter="{Binding}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}" TargetType="{x:Type Button}">
                                            <Setter Property="Padding" Value="0" />
                                        </Style>
                                    </Button.Style>
                                    <materialDesign:PackIcon
                                        Width="20"
                                        Height="20"
                                        Kind="ArrowDownDropCircle" />
                                </Button>
                            </StackPanel>

                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="{Binding VersesDisplay.Row0Title}" />

                                <ListView
                                    Width="{Binding ActualWidth, ElementName=Border0, Converter={converters:WidthSubtraction}, ConverterParameter='40'}"
                                    ItemsSource="{Binding VersesDisplay.Row0Verses}"
                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                    ScrollViewer.IsDeferredScrollingEnabled="True"
                                    VirtualizingStackPanel.IsVirtualizing="True"
                                    VirtualizingStackPanel.VirtualizationMode="Recycling">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="Height" Value="Auto" />
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Vertical">
                                                <!--  cm:Message.Attach="[Event TokenClicked] = [Action TokenClicked($eventArgs)];[Event TokenDoubleClicked] = [Action TokenDoubleClicked($eventArgs)];[Event TokenRightButtonDown] = [Action TokenRightButtonDown($eventArgs)];[Event TokenMouseEnter] = [Action TokenMouseEnter($eventArgs)];[Event TokenMouseLeave] = [Action TokenMouseLeave($eventArgs)];[Event TokenMouseWheel] = [Action TokenMouseWheel($eventArgs)];[Event TranslationClicked] = [Action TranslationClicked($eventArgs)];[Event TranslationDoubleClicked] = [Action TranslationDoubleClicked($eventArgs)];[Event TranslationRightButtonDown] = [Action TranslationRightButtonDown($eventArgs)];[Event TranslationMouseEnter] = [Action TranslationMouseEnter($eventArgs)];[Event TranslationMouseLeave] = [Action TranslationMouseLeave($eventArgs)];[Event TranslationMouseWheel] = [Action TranslationMouseWheel($eventArgs)];[Event NoteLeftButtonDown] = [Action NoteLeftButtonDown($eventArgs)];[Event NoteDoubleClicked] = [Action NoteDoubleClicked($eventArgs)];[Event NoteRightButtonDown] = [Action NoteRightButtonDown($eventArgs)];[Event NoteMouseEnter] = [Action NoteMouseEnter($eventArgs)];[Event NoteMouseLeave] = [Action NoteMouseLeave($eventArgs)];[Event NoteMouseWheel] = [Action NoteMouseWheel($eventArgs)];[Event NoteCreate] = [Action NoteCreate($eventArgs)]"  -->
                                                <!--  TranslationClicked="{Binding TranslationClickedCommand}"  -->
                                                <!--  [Event TokenMouseEnter] = [Action TokenMouseEnter($eventArgs)];  -->
                                                <userControls:VerseDisplay
                                                    Title=""
                                                    FontSize="{Binding ElementName=TokenFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    HorizontalSpacing="{Binding ElementName=HorizontalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    IsEnabled="True"
                                                    NoteIndicatorHeight="{Binding ElementName=NoteIndicatorHeightSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    Orientation="{Binding ElementName=VerticalCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolOrientationConverter}}"
                                                    ShowNoteIndicators="{Binding ElementName=ShowNoteIndicatorsCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                                    ShowTranslations="{Binding ElementName=ShowTranslationsCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                                    TitleFontSize="{Binding ElementName=TitleFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    TitleVisibility="Collapsed"
                                                    TokenVerticalSpacing="{Binding ElementName=TokenVerticalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    Tokens="{Binding .}"
                                                    TranslationAlignment="{Binding ElementName=CenteredCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolHorizontalAlignmentConverter}}"
                                                    TranslationFontSize="{Binding ElementName=TranslationFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    TranslationVerticalSpacing="{Binding ElementName=TranslationVerticalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    Wrap="{Binding ElementName=WrapCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </StackPanel>

                        </StackPanel>
                    </Border>

                    <!--  Row 1  -->
                    <Border
                        x:Name="Border1"
                        Margin="2"
                        Padding="3"
                        BorderBrush="{Binding VersesDisplay.Row1BorderColor}"
                        BorderThickness="2"
                        CornerRadius="4"
                        Visibility="{Binding VersesDisplay.Row1Visibility}">
                        <StackPanel Orientation="Horizontal">

                            <StackPanel
                                Margin="0,0,5,0"
                                VerticalAlignment="Center"
                                Orientation="Vertical">
                                <Button Command="{Binding MoveCorpusUpRow1}" CommandParameter="{Binding}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}" TargetType="{x:Type Button}">
                                            <Setter Property="Padding" Value="3" />
                                        </Style>
                                    </Button.Style>
                                    <materialDesign:PackIcon
                                        Width="20"
                                        Height="20"
                                        Kind="ArrowUpDropCircle" />
                                </Button>
                                <Button Command="{Binding MoveCorpusDownRow1}" CommandParameter="{Binding}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}" TargetType="{x:Type Button}">
                                            <Setter Property="Padding" Value="0" />
                                        </Style>
                                    </Button.Style>
                                    <materialDesign:PackIcon
                                        Width="20"
                                        Height="20"
                                        Kind="ArrowDownDropCircle" />
                                </Button>
                            </StackPanel>

                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="{Binding VersesDisplay.Row1Title}" />

                                <ListView
                                    Width="{Binding ActualWidth, ElementName=Border1, Converter={converters:WidthSubtraction}, ConverterParameter='40'}"
                                    ItemsSource="{Binding VersesDisplay.Row1Verses}"
                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                    ScrollViewer.IsDeferredScrollingEnabled="True"
                                    VirtualizingStackPanel.IsVirtualizing="True"
                                    VirtualizingStackPanel.VirtualizationMode="Recycling">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="Height" Value="Auto" />
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Vertical">
                                                <!--  cm:Message.Attach="[Event TokenClicked] = [Action TokenClicked($eventArgs)];[Event TokenDoubleClicked] = [Action TokenDoubleClicked($eventArgs)];[Event TokenRightButtonDown] = [Action TokenRightButtonDown($eventArgs)];[Event TokenMouseEnter] = [Action TokenMouseEnter($eventArgs)];[Event TokenMouseLeave] = [Action TokenMouseLeave($eventArgs)];[Event TokenMouseWheel] = [Action TokenMouseWheel($eventArgs)];[Event TranslationClicked] = [Action TranslationClicked($eventArgs)];[Event TranslationDoubleClicked] = [Action TranslationDoubleClicked($eventArgs)];[Event TranslationRightButtonDown] = [Action TranslationRightButtonDown($eventArgs)];[Event TranslationMouseEnter] = [Action TranslationMouseEnter($eventArgs)];[Event TranslationMouseLeave] = [Action TranslationMouseLeave($eventArgs)];[Event TranslationMouseWheel] = [Action TranslationMouseWheel($eventArgs)];[Event NoteLeftButtonDown] = [Action NoteLeftButtonDown($eventArgs)];[Event NoteDoubleClicked] = [Action NoteDoubleClicked($eventArgs)];[Event NoteRightButtonDown] = [Action NoteRightButtonDown($eventArgs)];[Event NoteMouseEnter] = [Action NoteMouseEnter($eventArgs)];[Event NoteMouseLeave] = [Action NoteMouseLeave($eventArgs)];[Event NoteMouseWheel] = [Action NoteMouseWheel($eventArgs)];[Event NoteCreate] = [Action NoteCreate($eventArgs)]"  -->
                                                <userControls:VerseDisplay
                                                    Title=""
                                                    FontSize="{Binding ElementName=TokenFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    HorizontalSpacing="{Binding ElementName=HorizontalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    IsEnabled="True"
                                                    NoteIndicatorHeight="{Binding ElementName=NoteIndicatorHeightSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    Orientation="{Binding ElementName=VerticalCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolOrientationConverter}}"
                                                    ShowNoteIndicators="{Binding ElementName=ShowNoteIndicatorsCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                                    ShowTranslations="{Binding ElementName=ShowTranslationsCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                                    TitleFontSize="{Binding ElementName=TitleFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    TitleVisibility="Collapsed"
                                                    TokenVerticalSpacing="{Binding ElementName=TokenVerticalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    Tokens="{Binding .}"
                                                    TranslationAlignment="{Binding ElementName=CenteredCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolHorizontalAlignmentConverter}}"
                                                    TranslationFontSize="{Binding ElementName=TranslationFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    TranslationVerticalSpacing="{Binding ElementName=TranslationVerticalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    Wrap="{Binding ElementName=WrapCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </StackPanel>

                        </StackPanel>
                    </Border>

                    <!--  Row 2  -->
                    <Border
                        x:Name="Border2"
                        Margin="2"
                        Padding="3"
                        BorderBrush="{Binding VersesDisplay.Row2BorderColor}"
                        BorderThickness="2"
                        CornerRadius="4"
                        Visibility="{Binding VersesDisplay.Row2Visibility}">
                        <StackPanel Orientation="Horizontal">

                            <StackPanel
                                Margin="0,0,5,0"
                                VerticalAlignment="Center"
                                Orientation="Vertical">
                                <Button Command="{Binding MoveCorpusUpRow2}" CommandParameter="{Binding}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}" TargetType="{x:Type Button}">
                                            <Setter Property="Padding" Value="3" />
                                        </Style>
                                    </Button.Style>
                                    <materialDesign:PackIcon
                                        Width="20"
                                        Height="20"
                                        Kind="ArrowUpDropCircle" />
                                </Button>
                                <Button Command="{Binding MoveCorpusDownRow2}" CommandParameter="{Binding}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}" TargetType="{x:Type Button}">
                                            <Setter Property="Padding" Value="0" />
                                        </Style>
                                    </Button.Style>
                                    <materialDesign:PackIcon
                                        Width="20"
                                        Height="20"
                                        Kind="ArrowDownDropCircle" />
                                </Button>
                            </StackPanel>

                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="{Binding VersesDisplay.Row2Title}" />

                                <ListView
                                    Width="{Binding ActualWidth, ElementName=Border2, Converter={converters:WidthSubtraction}, ConverterParameter='40'}"
                                    ItemsSource="{Binding VersesDisplay.Row2Verses}"
                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                    ScrollViewer.IsDeferredScrollingEnabled="True"
                                    VirtualizingStackPanel.IsVirtualizing="True"
                                    VirtualizingStackPanel.VirtualizationMode="Recycling">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="Height" Value="Auto" />
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Vertical">
                                                <!--  cm:Message.Attach="[Event TokenClicked] = [Action TokenClicked($eventArgs)];[Event TokenDoubleClicked] = [Action TokenDoubleClicked($eventArgs)];[Event TokenRightButtonDown] = [Action TokenRightButtonDown($eventArgs)];[Event TokenMouseEnter] = [Action TokenMouseEnter($eventArgs)];[Event TokenMouseLeave] = [Action TokenMouseLeave($eventArgs)];[Event TokenMouseWheel] = [Action TokenMouseWheel($eventArgs)];[Event TranslationClicked] = [Action TranslationClicked($eventArgs)];[Event TranslationDoubleClicked] = [Action TranslationDoubleClicked($eventArgs)];[Event TranslationRightButtonDown] = [Action TranslationRightButtonDown($eventArgs)];[Event TranslationMouseEnter] = [Action TranslationMouseEnter($eventArgs)];[Event TranslationMouseLeave] = [Action TranslationMouseLeave($eventArgs)];[Event TranslationMouseWheel] = [Action TranslationMouseWheel($eventArgs)];[Event NoteLeftButtonDown] = [Action NoteLeftButtonDown($eventArgs)];[Event NoteDoubleClicked] = [Action NoteDoubleClicked($eventArgs)];[Event NoteRightButtonDown] = [Action NoteRightButtonDown($eventArgs)];[Event NoteMouseEnter] = [Action NoteMouseEnter($eventArgs)];[Event NoteMouseLeave] = [Action NoteMouseLeave($eventArgs)];[Event NoteMouseWheel] = [Action NoteMouseWheel($eventArgs)];[Event NoteCreate] = [Action NoteCreate($eventArgs)]"  -->
                                                <userControls:VerseDisplay
                                                    Title=""
                                                    FontSize="{Binding ElementName=TokenFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    HorizontalSpacing="{Binding ElementName=HorizontalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    IsEnabled="True"
                                                    NoteIndicatorHeight="{Binding ElementName=NoteIndicatorHeightSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    Orientation="{Binding ElementName=VerticalCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolOrientationConverter}}"
                                                    ShowNoteIndicators="{Binding ElementName=ShowNoteIndicatorsCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                                    ShowTranslations="{Binding ElementName=ShowTranslationsCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                                    TitleFontSize="{Binding ElementName=TitleFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    TitleVisibility="Collapsed"
                                                    TokenVerticalSpacing="{Binding ElementName=TokenVerticalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    Tokens="{Binding .}"
                                                    TranslationAlignment="{Binding ElementName=CenteredCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolHorizontalAlignmentConverter}}"
                                                    TranslationFontSize="{Binding ElementName=TranslationFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    TranslationVerticalSpacing="{Binding ElementName=TranslationVerticalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    Wrap="{Binding ElementName=WrapCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </StackPanel>

                        </StackPanel>
                    </Border>

                    <!--  Row 3  -->
                    <Border
                        x:Name="Border3"
                        Margin="2"
                        Padding="3"
                        BorderBrush="{Binding VersesDisplay.Row3BorderColor}"
                        BorderThickness="2"
                        CornerRadius="4"
                        Visibility="{Binding VersesDisplay.Row3Visibility}">
                        <StackPanel Orientation="Horizontal">

                            <StackPanel
                                Margin="0,0,5,0"
                                VerticalAlignment="Center"
                                Orientation="Vertical">
                                <Button Command="{Binding MoveCorpusUpRow3}" CommandParameter="{Binding}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}" TargetType="{x:Type Button}">
                                            <Setter Property="Padding" Value="3" />
                                        </Style>
                                    </Button.Style>
                                    <materialDesign:PackIcon
                                        Width="20"
                                        Height="20"
                                        Kind="ArrowUpDropCircle" />
                                </Button>
                                <Button IsEnabled="False">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}" TargetType="{x:Type Button}">
                                            <Setter Property="Padding" Value="0" />
                                        </Style>
                                    </Button.Style>
                                    <materialDesign:PackIcon
                                        Width="20"
                                        Height="20"
                                        Kind="ArrowDownDropCircle" />
                                </Button>
                            </StackPanel>

                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="{Binding VersesDisplay.Row3Title}" />

                                <ListView
                                    Width="{Binding ActualWidth, ElementName=Border3, Converter={converters:WidthSubtraction}, ConverterParameter='40'}"
                                    ItemsSource="{Binding VersesDisplay.Row3Verses}"
                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                    ScrollViewer.IsDeferredScrollingEnabled="True"
                                    VirtualizingStackPanel.IsVirtualizing="True"
                                    VirtualizingStackPanel.VirtualizationMode="Recycling">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="Height" Value="Auto" />
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Vertical">
                                                <!--  cm:Message.Attach="[Event TokenClicked] = [Action TokenClicked($eventArgs)];[Event TokenDoubleClicked] = [Action TokenDoubleClicked($eventArgs)];[Event TokenRightButtonDown] = [Action TokenRightButtonDown($eventArgs)];[Event TokenMouseEnter] = [Action TokenMouseEnter($eventArgs)];[Event TokenMouseLeave] = [Action TokenMouseLeave($eventArgs)];[Event TokenMouseWheel] = [Action TokenMouseWheel($eventArgs)];[Event TranslationClicked] = [Action TranslationClicked($eventArgs)];[Event TranslationDoubleClicked] = [Action TranslationDoubleClicked($eventArgs)];[Event TranslationRightButtonDown] = [Action TranslationRightButtonDown($eventArgs)];[Event TranslationMouseEnter] = [Action TranslationMouseEnter($eventArgs)];[Event TranslationMouseLeave] = [Action TranslationMouseLeave($eventArgs)];[Event TranslationMouseWheel] = [Action TranslationMouseWheel($eventArgs)];[Event NoteLeftButtonDown] = [Action NoteLeftButtonDown($eventArgs)];[Event NoteDoubleClicked] = [Action NoteDoubleClicked($eventArgs)];[Event NoteRightButtonDown] = [Action NoteRightButtonDown($eventArgs)];[Event NoteMouseEnter] = [Action NoteMouseEnter($eventArgs)];[Event NoteMouseLeave] = [Action NoteMouseLeave($eventArgs)];[Event NoteMouseWheel] = [Action NoteMouseWheel($eventArgs)];[Event NoteCreate] = [Action NoteCreate($eventArgs)]"  -->
                                                <userControls:VerseDisplay
                                                    Title=""
                                                    FontSize="{Binding ElementName=TokenFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    HorizontalSpacing="{Binding ElementName=HorizontalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    IsEnabled="True"
                                                    NoteIndicatorHeight="{Binding ElementName=NoteIndicatorHeightSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    Orientation="{Binding ElementName=VerticalCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolOrientationConverter}}"
                                                    ShowNoteIndicators="{Binding ElementName=ShowNoteIndicatorsCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                                    ShowTranslations="{Binding ElementName=ShowTranslationsCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                                    TitleFontSize="{Binding ElementName=TitleFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    TitleVisibility="Collapsed"
                                                    TokenVerticalSpacing="{Binding ElementName=TokenVerticalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    Tokens="{Binding .}"
                                                    TranslationAlignment="{Binding ElementName=CenteredCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolHorizontalAlignmentConverter}}"
                                                    TranslationFontSize="{Binding ElementName=TranslationFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    TranslationVerticalSpacing="{Binding ElementName=TranslationVerticalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                    Wrap="{Binding ElementName=WrapCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </StackPanel>

                        </StackPanel>
                    </Border>
                </StackPanel>

            </ScrollViewer>

            <Label
                Grid.Row="1"
                Grid.Column="0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="CadetBlue"
                Content="{Binding Message}"
                FontSize="15" />

            <ProgressBar
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="0"
                Width="75"
                Height="75"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Foreground="{DynamicResource SecondaryHueMidBrush}"
                IsIndeterminate="True"
                Style="{StaticResource MaterialDesignCircularProgressBar}"
                Visibility="{Binding ProgressBarVisibility}"
                Value="0" />


            <controls:SidebarExpander
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="1"
                mah:HeaderedControlHelper.HeaderBackground="{DynamicResource IconPackBrowser.Brushes.PanelBackground}"
                Background="{DynamicResource IconPackBrowser.Brushes.PanelBackground}"
                BorderBrush="{DynamicResource MahApps.Brushes.Gray10}"
                BorderThickness="2"
                ExpandDirection="Left"
                IsExpanded="True"
                Style="{StaticResource RightExpander}">
                <controls:SidebarExpander.Header>
                    <TextBlock
                        Margin="-5,0,0,0"
                        BaselineOffset="100"
                        FontWeight="Bold"
                        Text="{helpers:Localization EnhancedView_Notes}"
                        TextAlignment="Center"
                        TextOptions.TextFormattingMode="Ideal">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="270" />
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </controls:SidebarExpander.Header>

                <StackPanel
                    Grid.Row="1"
                    Grid.RowSpan="7"
                    Grid.Column="1"
                    Orientation="Vertical">

                    <userControls:TranslationSelector
                        cm:Message.Attach="[Event TranslationApplied] = [Action TranslationApplied($eventArgs)];                                                              [Event TranslationCancelled] = [Action TranslationCancelled($eventArgs)];"
                        SelectedItem="{Binding CurrentTranslationOption}"
                        TokenDisplayViewModel="{Binding CurrentTokenDisplayViewModel}"
                        TranslationOptions="{Binding TranslationOptions}"
                        Visibility="{Binding TranslationControlVisibility}" />

                    <!--<userControls:NoteCollectionDisplay
                        Title="{Binding CurrentTokenDisplayViewModel.SurfaceText}"
                        cm:Message.Attach="[Event CloseRequested] = [Action CloseRequested($eventArgs)];                                                            [Event NoteAdded] = [Action NoteAdded($eventArgs)];                                                            [Event NoteUpdated] = [Action NoteUpdated($eventArgs)];                                                            [Event NoteDeleted] = [Action NoteDeleted($eventArgs)];                                                            [Event LabelSelected] = [Action LabelSelected($eventArgs)];                                                            [Event LabelAdded] = [Action LabelAdded($eventArgs)];"
                        EntityId="{Binding CurrentTokenDisplayViewModel.Token.TokenId}"
                        InnerMargin="0,0,0,30"
                        LabelBackground="BlanchedAlmond"
                        LabelCornerRadius="{Binding ElementName=LabelCornerRadiusSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                        LabelFontSize="{Binding ElementName=LabelFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                        LabelSuggestions="{Binding LabelSuggestions}"
                        NoteFontSize="{Binding ElementName=NoteFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                        Notes="{Binding CurrentTokenDisplayViewModel.Notes}"
                        TimestampFontSize="{Binding ElementName=TimestampFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding NoteControlVisibility}">
                        <userControls:NoteCollectionDisplay.NoteMargin>
                            <MultiBinding Converter="{StaticResource ThicknessConverter}">
                                <Binding ElementName="NoteLeftMarginSlider" Path="Value" />
                                <Binding ElementName="NoteTopMarginSlider" Path="Value" />
                                <Binding ElementName="NoteRightMarginSlider" Path="Value" />
                                <Binding ElementName="NoteBottomMarginSlider" Path="Value" />
                            </MultiBinding>
                        </userControls:NoteCollectionDisplay.NoteMargin>
                        <userControls:NoteCollectionDisplay.TimestampMargin>
                            <MultiBinding Converter="{StaticResource ThicknessConverter}">
                                <Binding ElementName="TimestampLeftMarginSlider" Path="Value" />
                                <Binding ElementName="TimestampTopMarginSlider" Path="Value" />
                                <Binding ElementName="TimestampRightMarginSlider" Path="Value" />
                                <Binding ElementName="TimestampBottomMarginSlider" Path="Value" />
                            </MultiBinding>
                        </userControls:NoteCollectionDisplay.TimestampMargin>
                        <userControls:NoteCollectionDisplay.LabelMargin>
                            <MultiBinding Converter="{StaticResource ThicknessConverter}">
                                <Binding ElementName="LabelLeftMarginSlider" Path="Value" />
                                <Binding ElementName="LabelTopMarginSlider" Path="Value" />
                                <Binding ElementName="LabelRightMarginSlider" Path="Value" />
                                <Binding ElementName="LabelBottomMarginSlider" Path="Value" />
                            </MultiBinding>
                        </userControls:NoteCollectionDisplay.LabelMargin>
                        <userControls:NoteCollectionDisplay.LabelPadding>
                            <MultiBinding Converter="{StaticResource ThicknessConverter}">
                                <Binding ElementName="LabelLeftPaddingSlider" Path="Value" />
                                <Binding ElementName="LabelTopPaddingSlider" Path="Value" />
                                <Binding ElementName="LabelRightPaddingSlider" Path="Value" />
                                <Binding ElementName="LabelBottomPaddingSlider" Path="Value" />
                            </MultiBinding>
                        </userControls:NoteCollectionDisplay.LabelPadding>
                    </userControls:NoteCollectionDisplay>-->
                </StackPanel>
            </controls:SidebarExpander>


        </Grid>



    </Grid>

</UserControl>

<UserControl
    x:Class="ClearDashboard.Wpf.Application.Views.Project.EnhancedView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cm="http://caliburnmicro.com"
    xmlns:controls="clr-namespace:ClearApplicationFoundation.Controls;assembly=ClearApplicationFoundation"
    xmlns:converters="clr-namespace:ClearDashboard.Wpf.Application.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:ClearDashboard.Wpf.Application.Helpers"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:ClearDashboard.Wpf.Application.Models"
    xmlns:project="clr-namespace:ClearDashboard.Wpf.Application.ViewModels.Project"
    xmlns:projectViews="clr-namespace:ClearDashboard.Wpf.Application.Views.Project"
    xmlns:resx="clr-namespace:ClearDashboard.Wpf.Application.Strings"
    xmlns:userControls="clr-namespace:ClearDashboard.Wpf.Application.UserControls"
    d:DataContext="{d:DesignInstance Type=project:EnhancedViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    helpers:Translation.ResourceManager="{x:Static resx:Resources.ResourceManager}"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <converters:VerseTokensToChapterVerseValueConvertor x:Key="VerseTokensToChapterVerseValueConvertor" />
            <converters:TokensTextRowMultiValueConvertor x:Key="TokensTextRowMultiValueConvertor" />
            <converters:WidthSubtraction x:Key="WidthSubtraction" />
            <userControls:BoolOrientationConverter x:Key="BoolOrientationConverter" />
            <userControls:BoolFlowDirectionConverter x:Key="BoolFlowDirectionConverter" />
            <userControls:BoolHorizontalAlignmentConverter x:Key="BoolHorizontalAlignmentConverter" />
            <userControls:ThicknessConverter x:Key="ThicknessConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="MainGrid" Background="{DynamicResource MaterialDesignBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <materialDesign:DrawerHost
            x:Name="DrawerHost"
            Grid.Row="0"
            VerticalAlignment="Center"
            Background="{StaticResource MahApps.Brushes.Accent}"
            BorderBrush="{DynamicResource MaterialDesignDivider}"
            BorderThickness="2">
            <!--<materialDesign:DrawerHost.Style>
                <Style BasedOn="{StaticResource {x:Type materialDesign:DrawerHost}}" TargetType="materialDesign:DrawerHost">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=BackgroundToggle}" Value="True">
                            <Setter Property="OverlayBackground" Value="{DynamicResource PrimaryHueMidBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </materialDesign:DrawerHost.Style>-->
            <materialDesign:DrawerHost.TopDrawerContent>
                <Grid Margin="15,15,15,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150" />
                        <ColumnDefinition Width="275" />
                        <ColumnDefinition Width="275" />
                        <ColumnDefinition Width="275" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="40" />
                    </Grid.RowDefinitions>

                    <Button
                        Grid.Row="4"
                        Grid.Column="0"
                        Width="66"
                        Height="20"
                        Margin="10"
                        Padding="0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                        CommandParameter="{x:Static Dock.Top}"
                        Content="CLOSE"
                        FontSize="10"
                        Foreground="White" />

                    <Label
                        Grid.Row="0"
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontWeight="Bold">
                        Title:
                    </Label>
                    <StackPanel
                        Grid.Row="0"
                        Grid.Column="1"
                        Orientation="Horizontal">
                        <Label VerticalAlignment="Center">Title font size:</Label>
                        <Slider
                            Name="TitleFontSizeSlider"
                            Width="100"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="48"
                            Minimum="8"
                            TickFrequency="1"
                            Value="16" />
                        <Label
                            Width="40"
                            VerticalAlignment="Center"
                            Content="{Binding ElementName=TitleFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <Label
                        Grid.Row="1"
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontWeight="Bold">
                        Source Text:
                    </Label>
                    <StackPanel
                        Grid.Row="1"
                        Grid.Column="1"
                        Orientation="Horizontal">
                        <Label VerticalAlignment="Center">Source font size:</Label>
                        <Slider
                            Name="TokenFontSizeSlider"
                            Width="100"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="48"
                            Minimum="8"
                            TickFrequency="1"
                            Value="14" />
                        <Label
                            Width="40"
                            VerticalAlignment="Center"
                            Content="{Binding ElementName=TokenFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="1"
                        Grid.Column="2"
                        Orientation="Horizontal">
                        <Label VerticalAlignment="Center">Vertical spacing:</Label>
                        <Slider
                            Name="TokenVerticalSpacingSlider"
                            Width="100"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="40"
                            Minimum="0"
                            TickFrequency="1"
                            Value="5" />
                        <Label
                            Width="40"
                            VerticalAlignment="Center"
                            Content="{Binding ElementName=TokenVerticalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="1"
                        Grid.Column="3"
                        Orientation="Horizontal">
                        <Label VerticalAlignment="Center">Horizontal spacing:</Label>
                        <Slider
                            Name="HorizontalSpacingSlider"
                            Width="100"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="40"
                            Minimum="1"
                            TickFrequency="1"
                            Value="10" />
                        <Label
                            Width="40"
                            VerticalAlignment="Center"
                            Content="{Binding ElementName=HorizontalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="2"
                        Grid.Column="0"
                        Orientation="Horizontal">
                        <Label VerticalAlignment="Center" FontWeight="Bold">Translations:</Label>
                        <!--<CheckBox
                            Name="ShowTranslationsCheckbox"
                            Margin="22,0,0,0"
                            VerticalAlignment="Center"
                            Visibility="Hidden"
                            IsChecked="True" />-->
                    </StackPanel>
                    <StackPanel
                        Grid.Row="2"
                        Grid.Column="1"
                        Orientation="Horizontal">
                        <Label VerticalAlignment="Center">Font size:</Label>
                        <Slider
                            Name="TranslationFontSizeSlider"
                            Width="100"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="48"
                            Minimum="8"
                            TickFrequency="1"
                            Value="16" />
                        <Label
                            Width="40"
                            VerticalAlignment="Center"
                            Content="{Binding ElementName=TranslationFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="2"
                        Grid.Column="2"
                        Orientation="Horizontal"
                        Visibility="Collapsed">
                        <Label VerticalAlignment="Center">Vertical spacing:</Label>
                        <Slider
                            Name="TranslationVerticalSpacingSlider"
                            Width="100"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="40"
                            Minimum="0"
                            TickFrequency="1"
                            Value="10" />
                        <Label
                            Width="40"
                            VerticalAlignment="Center"
                            Content="{Binding ElementName=TranslationVerticalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>

                    <StackPanel
                        Grid.Row="3"
                        Grid.Column="0"
                        Orientation="Horizontal">
                        <Label VerticalAlignment="Center" FontWeight="Bold">Note Indicators:</Label>
                        <CheckBox
                            Name="ShowNoteIndicatorsCheckbox"
                            Margin="5,0,0,0"
                            VerticalAlignment="Center"
                            IsChecked="True"
                            Visibility="Hidden" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="3"
                        Grid.Column="1"
                        Orientation="Horizontal">
                        <Label Margin="0,0,14,0" VerticalAlignment="Center">Height:</Label>
                        <Slider
                            Name="NoteIndicatorHeightSlider"
                            Width="100"
                            VerticalAlignment="Center"
                            IsSnapToTickEnabled="True"
                            Maximum="10"
                            Minimum="1"
                            TickFrequency="1"
                            Value="4" />
                        <Label
                            Width="40"
                            VerticalAlignment="Center"
                            Content="{Binding ElementName=NoteIndicatorHeightSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel
                        Grid.Row="4"
                        Grid.Column="1"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal"
                        Visibility="Hidden">
                        <CheckBox
                            Name="CenteredCheckbox"
                            VerticalAlignment="Center"
                            IsChecked="True" />
                        <Label VerticalAlignment="Center">Center Words</Label>
                    </StackPanel>
                    <StackPanel
                        Grid.Row="4"
                        Grid.Column="2"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal"
                        Visibility="Hidden">
                        <CheckBox
                            Name="VerticalCheckbox"
                            VerticalAlignment="Center"
                            IsChecked="False" />
                        <Label VerticalAlignment="Center">Vertical Layout</Label>
                    </StackPanel>
                    <StackPanel
                        Grid.Row="4"
                        Grid.Column="3"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal"
                        Visibility="Hidden">
                        <CheckBox
                            Name="WrapCheckbox"
                            VerticalAlignment="Center"
                            IsChecked="True" />
                        <Label VerticalAlignment="Center">Wrap Lines</Label>
                    </StackPanel>
                </Grid>
            </materialDesign:DrawerHost.TopDrawerContent>

            <Grid Background="LightGray">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="15" />
                </Grid.RowDefinitions>

                <Button
                    Grid.Column="0"
                    Margin="4,4,4,4"
                    Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                    CommandParameter="{x:Static Dock.Top}"
                    Content="{materialDesign:PackIcon Kind=Tune}"
                    ToolTip="Show the Enhanced View Controls" />

                <userControls:BcvUserControl
                    Grid.Column="1"
                    Margin="50,0,0,0"
                    BcvDictionary="{Binding Path=BcvDictionary}"
                    CurrentBcv="{Binding Path=CurrentBcv}"
                    IsControlEnabled="True"
                    IsControlMinimal="False"
                    IsRtl="{Binding IsRtl}"
                    ParatextSync="{Binding Path=ParatextSync, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ShowHeader="True"
                    ShowOffsetControl="True"
                    VerseChange="{Binding Path=VerseChange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    VerseOffsetRange="{Binding Path=VerseOffsetRange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <Label
                    Grid.Row="1"
                    Grid.Column="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="{Binding Message}"
                    FontSize="15" />
            </Grid>
        </materialDesign:DrawerHost>


        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19*" />
                <ColumnDefinition Width="106*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!--  OUTER LISTVIEW  -->
            <ListView
                x:Name="OuterListView"
                Grid.ColumnSpan="2"
                Width="{Binding ActualWidth, ElementName=Border3, Converter={converters:WidthSubtraction}, ConverterParameter='40'}"
                ItemsSource="{Binding VersesDisplay}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.IsDeferredScrollingEnabled="True"
                VirtualizingStackPanel.IsVirtualizing="True"
                VirtualizingStackPanel.VirtualizationMode="Recycling">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Height" Value="Auto" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition x:Name="DisplayColumn" Width="*" />
                            </Grid.ColumnDefinitions>

                            <StackPanel
                                Margin="0,0,3,0"
                                VerticalAlignment="Center"
                                Orientation="Vertical">

                                <Button Command="{Binding ElementName=OuterListView, Path=DataContext.MoveCorpusUpRowCommand}" CommandParameter="{Binding}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}" TargetType="{x:Type Button}">
                                            <Setter Property="Padding" Value="3" />
                                        </Style>
                                    </Button.Style>
                                    <materialDesign:PackIcon
                                        Width="20"
                                        Height="20"
                                        Kind="ArrowUpDropCircle" />
                                </Button>

                                <Button Command="{Binding ElementName=OuterListView, Path=DataContext.MoveCorpusDownRowCommand}" CommandParameter="{Binding}">
                                    <Button.Style>
                                        <Style BasedOn="{StaticResource MaterialDesignFlatDarkBgButton}" TargetType="{x:Type Button}">
                                            <Setter Property="Padding" Value="0" />
                                        </Style>
                                    </Button.Style>
                                    <materialDesign:PackIcon
                                        Width="20"
                                        Height="20"
                                        Kind="ArrowDownDropCircle" />
                                </Button>
                            </StackPanel>


                            <Border
                                Grid.Column="1"
                                Width="{Binding ActualWidth, ElementName=DisplayColumn, Converter={converters:WidthSubtraction}, ConverterParameter='20'}"
                                Padding="3,0,3,0"
                                HorizontalAlignment="Stretch"
                                BorderBrush="{Binding BorderColor}"
                                BorderThickness="3"
                                CornerRadius="4">
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal">

                                        <Button
                                            Width="20"
                                            Height="20"
                                            Margin="3,0,0,0"
                                            VerticalAlignment="Center"
                                            Command="{Binding ElementName=OuterListView, Path=DataContext.DeleteCorpusRowCommand}"
                                            CommandParameter="{Binding}">
                                            <Button.Style>
                                                <Style BasedOn="{StaticResource MaterialDesignIconButton}" TargetType="{x:Type Button}">
                                                    <Setter Property="Padding" Value="0" />
                                                </Style>
                                            </Button.Style>
                                            <materialDesign:PackIcon
                                                Width="20"
                                                Height="20"
                                                Foreground="{StaticResource RedVeryDarkBrush}"
                                                Kind="Close"
                                                ToolTip="Remove Corpus" />
                                        </Button>
                                        <TextBlock
                                            Margin="8,0,5,0"
                                            VerticalAlignment="Center"
                                            FontSize="{Binding ElementName=TitleFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                            FontWeight="Bold"
                                            Text="{Binding RowTitle}" />

                                    </StackPanel>

                                    <!--  INNER LISTVIEW  -->

                                    <ListView
                                        x:Name="InnerListView"
                                        Width="{Binding ActualWidth, ElementName=DisplayColumn, Converter={converters:WidthSubtraction}, ConverterParameter='10'}"
                                        HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                        ScrollViewer.IsDeferredScrollingEnabled="True"
                                        SelectionChanged="InnerListView_SelectionChanged"
                                        VirtualizingStackPanel.IsVirtualizing="True"
                                        VirtualizingStackPanel.VirtualizationMode="Recycling">

                                        <!--  SelectedItem="{Binding SelectedItem, ElementName=MainGrid, Path=DataContext}"  -->

                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                <i:InvokeCommandAction Command="{Binding LeftMouseUpCommand}" CommandParameter="{Binding ElementName=InnerListView, Path=SelectedItem}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->

                                        <ListView.Style>
                                            <Style TargetType="ListView">
                                                <Setter Property="ItemsSource" Value="{Binding Verses}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Verses.Count}" Value="0">
                                                        <Setter Property="ItemsSource" Value="{Binding ParallelVerses}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ListView.Style>
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="ListViewItem">
                                                <Setter Property="Height" Value="Auto" />
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Vertical">
                                                    <!--  cm:Message.Attach="[Event TokenClicked] = [Action TokenClicked($eventArgs)];[Event TokenDoubleClicked] = [Action TokenDoubleClicked($eventArgs)];[Event TokenRightButtonDown] = [Action TokenRightButtonDown($eventArgs)];[Event TokenMouseEnter] = [Action TokenMouseEnter($eventArgs)];[Event TokenMouseLeave] = [Action TokenMouseLeave($eventArgs)];[Event TokenMouseWheel] = [Action TokenMouseWheel($eventArgs)];[Event TranslationClicked] = [Action TranslationClicked($eventArgs)];[Event TranslationDoubleClicked] = [Action TranslationDoubleClicked($eventArgs)];[Event TranslationRightButtonDown] = [Action TranslationRightButtonDown($eventArgs)];[Event TranslationMouseEnter] = [Action TranslationMouseEnter($eventArgs)];[Event TranslationMouseLeave] = [Action TranslationMouseLeave($eventArgs)];[Event TranslationMouseWheel] = [Action TranslationMouseWheel($eventArgs)];[Event NoteLeftButtonDown] = [Action NoteLeftButtonDown($eventArgs)];[Event NoteDoubleClicked] = [Action NoteDoubleClicked($eventArgs)];[Event NoteRightButtonDown] = [Action NoteRightButtonDown($eventArgs)];[Event NoteMouseEnter] = [Action NoteMouseEnter($eventArgs)];[Event NoteMouseLeave] = [Action NoteMouseLeave($eventArgs)];[Event NoteMouseWheel] = [Action NoteMouseWheel($eventArgs)];[Event NoteCreate] = [Action NoteCreate($eventArgs)]"  -->
                                                    <!--  Tokens="{Binding ParallelVerses.TokenDisplayViewModels}"  -->
                                                    <userControls:VerseDisplay
                                                        x:Name="VerseDisplay"
                                                        Title=""
                                                        Width="{Binding ActualWidth, ElementName=Border3, Converter={converters:WidthSubtraction}, ConverterParameter='40'}"
                                                        FlowDirection="{Binding ElementName=InnerListView, Path=DataContext.IsRtl, Converter={StaticResource BoolFlowDirectionConverter}}"
                                                        FontSize="{Binding ElementName=TokenFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                        HorizontalSpacing="{Binding ElementName=HorizontalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                        IsEnabled="True"
                                                        NoteIndicatorHeight="{Binding ElementName=NoteIndicatorHeightSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                        Orientation="{Binding ElementName=VerticalCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolOrientationConverter}}"
                                                        ShowNoteIndicators="{Binding ElementName=ShowNoteIndicatorsCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                                        ShowTranslations="{Binding DataContext.ShowTranslation, RelativeSource={RelativeSource AncestorType=ListView}}"
                                                        TitleFontSize="{Binding ElementName=TitleFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                        TitleVisibility="Collapsed"
                                                        TokenVerticalSpacing="{Binding ElementName=TokenVerticalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                        TranslationAlignment="{Binding ElementName=CenteredCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolHorizontalAlignmentConverter}}"
                                                        TranslationFontSize="{Binding ElementName=TranslationFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                        TranslationVerticalSpacing="{Binding ElementName=TranslationVerticalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                        Wrap="{Binding ElementName=WrapCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}">

                                                        <userControls:VerseDisplay.Style>
                                                            <Style TargetType="userControls:VerseDisplay">
                                                                <Setter Property="Tokens" Value="{Binding .}" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding DataContext.Verses.Count, RelativeSource={RelativeSource AncestorType=ListView}}" Value="0">
                                                                        <Setter Property="Tokens" Value="{Binding TokenDisplayViewModels}" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </userControls:VerseDisplay.Style>

                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="TokenClicked">
                                                                <i:CallMethodAction MethodName="TokenMouseEnter" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=DataContext}" />
                                                            </i:EventTrigger>
                                                            <i:EventTrigger EventName="TokenMouseEnter">
                                                                <i:CallMethodAction MethodName="TokenMouseEnter" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=DataContext}" />
                                                            </i:EventTrigger>
                                                            <i:EventTrigger EventName="TranslationClicked">
                                                                <i:CallMethodAction MethodName="TranslationClicked" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=DataContext}" />
                                                            </i:EventTrigger>
                                                            <i:EventTrigger EventName="NoteCreate">
                                                                <i:CallMethodAction MethodName="NoteCreate" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=DataContext}" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </userControls:VerseDisplay>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </StackPanel>
                            </Border>


                            <!--<userControls:VerseDisplay
                                Title=""
                                Grid.Column="1"
                                FontSize="{Binding ElementName=TokenFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                HorizontalSpacing="{Binding ElementName=HorizontalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="True"
                                NoteIndicatorHeight="{Binding ElementName=NoteIndicatorHeightSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                Orientation="{Binding ElementName=VerticalCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolOrientationConverter}}"
                                ShowNoteIndicators="{Binding ElementName=ShowNoteIndicatorsCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                ShowTranslations="{Binding ElementName=checkRow3, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"
                                TitleFontSize="{Binding ElementName=TitleFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                TitleVisibility="Collapsed"
                                TokenVerticalSpacing="{Binding ElementName=TokenVerticalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                Tokens="{Binding VersesDisplay.Verses}"
                                TranslationAlignment="{Binding ElementName=CenteredCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolHorizontalAlignmentConverter}}"
                                TranslationFontSize="{Binding ElementName=TranslationFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                TranslationVerticalSpacing="{Binding ElementName=TranslationVerticalSpacingSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                Wrap="{Binding ElementName=WrapCheckbox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="TokenMouseEnter">
                                        <i:CallMethodAction MethodName="TokenMouseEnter" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=DataContext}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="TranslationClicked">
                                        <i:CallMethodAction MethodName="TranslationClicked" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=DataContext}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="NoteCreate">
                                        <i:CallMethodAction MethodName="NoteCreate" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=DataContext}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </userControls:VerseDisplay>-->
                        </Grid>

                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>





            <!--<Label
                Grid.Row="1"
                Grid.Column="0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="CadetBlue"
                Content="{Binding Message}"
                FontSize="15" />-->

            <ProgressBar
                Grid.Column="1"
                Width="76"
                Height="75"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Foreground="{DynamicResource SecondaryHueMidBrush}"
                IsIndeterminate="True"
                Style="{StaticResource MaterialDesignCircularProgressBar}"
                Visibility="{Binding ProgressBarVisibility}"
                Value="0" />


            <controls:SidebarExpander
                Grid.Row="0"
                Grid.Column="2"
                mah:HeaderedControlHelper.HeaderBackground="{DynamicResource IconPackBrowser.Brushes.PanelBackground}"
                Background="{DynamicResource IconPackBrowser.Brushes.PanelBackground}"
                BorderBrush="{DynamicResource MahApps.Brushes.Gray10}"
                BorderThickness="2"
                ExpandDirection="Left"
                IsExpanded="True"
                Style="{StaticResource RightExpander}">
                <controls:SidebarExpander.Header>
                    <TextBlock
                        Margin="-5,0,0,0"
                        BaselineOffset="100"
                        FontWeight="Bold"
                        Text="{helpers:Localization EnhancedView_Notes}"
                        TextAlignment="Center"
                        TextOptions.TextFormattingMode="Ideal">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="270" />
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </controls:SidebarExpander.Header>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel
                        Grid.Row="1"
                        Grid.RowSpan="7"
                        Grid.Column="1"
                        Orientation="Vertical">

                        <userControls:TranslationSelector
                            Margin="2,5"
                            SelectedItem="{Binding CurrentTranslationOption}"
                            TokenDisplayViewModel="{Binding CurrentTokenDisplayViewModel}"
                            TranslationOptions="{Binding TranslationOptions}"
                            Visibility="{Binding TranslationControlVisibility}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TranslationApplied">
                                    <i:CallMethodAction MethodName="TranslationApplied" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=DataContext}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="TranslationCancelled">
                                    <i:CallMethodAction MethodName="TranslationCancelled" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=DataContext}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </userControls:TranslationSelector>

                        <userControls:NoteCollectionDisplay
                            Title="{Binding CurrentTokenDisplayViewModel.SurfaceText}"
                            Margin="0,5"
                            EntityId="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=CurrentToken.Token.TokenId}"
                            EntityIds="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=SelectedTokens.EntityIds}"
                            InnerMargin="0,0,0,30"
                            LabelBackground="BlanchedAlmond"
                            LabelCornerRadius="{Binding ElementName=LabelCornerRadiusSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                            LabelFontSize="{Binding ElementName=LabelFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                            LabelSuggestions="{Binding LabelSuggestions}"
                            NoteFontSize="{Binding ElementName=NoteFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                            Notes="{Binding CurrentTokenDisplayViewModel.Notes}"
                            TimestampFontSize="{Binding ElementName=TimestampFontSizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                            Visibility="{Binding NoteControlVisibility}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="NoteMouseEnter">
                                    <i:CallMethodAction MethodName="NoteMouseEnter" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=DataContext}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="NoteAdded">
                                    <i:CallMethodAction MethodName="NoteAdded" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=DataContext}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="NoteUpdated">
                                    <i:CallMethodAction MethodName="NoteUpdated" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=DataContext}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="NoteDeleted">
                                    <i:CallMethodAction MethodName="NoteDeleted" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=DataContext}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="LabelSelected">
                                    <i:CallMethodAction MethodName="LabelSelected" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=DataContext}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="LabelAdded">
                                    <i:CallMethodAction MethodName="LabelAdded" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=DataContext}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="LabelRemoved">
                                    <i:CallMethodAction MethodName="LabelRemoved" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=DataContext}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="CloseRequested">
                                    <i:CallMethodAction MethodName="CloseNotePaneRequested" TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type projectViews:EnhancedView}}, Path=DataContext}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </userControls:NoteCollectionDisplay>

                    </StackPanel>
                </ScrollViewer>
            </controls:SidebarExpander>


        </Grid>



    </Grid>

</UserControl>

<Window
    x:Class="ClearDashboard.Wpf.Application.Views.Project.AddParatextCorpusDialogView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:ClearApplicationFoundation.Framework.Converters;assembly=ClearApplicationFoundation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:ClearDashboard.Wpf.Application.Helpers"
    xmlns:local="clr-namespace:ClearDashboard.Wpf.Application.Views.Project"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:project="clr-namespace:ClearDashboard.Wpf.Application.ViewModels.Project"
    xmlns:resx="clr-namespace:ClearDashboard.Wpf.Application.Strings"
    xmlns:viewModels="clr-namespace:ClearDashboard.Wpf.Application.ViewModels"
    Width="600"
    Height="300"
    d:DataContext="{d:DesignInstance Type=project:AddParatextCorpusDialogViewModel,
                                     IsDesignTimeCreatable=True}"
    d:DesignHeight="300"
    d:DesignWidth="400"
    helpers:Translation.ResourceManager="{x:Static resx:Resources.ResourceManager}"
    AllowsTransparency="True"
    Background="{DynamicResource Transparent}"
    FlowDirection="{Binding WindowFlowDirection}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    Foreground="{DynamicResource MaterialDesignPaper}"
    ShowInTaskbar="False"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    WindowStartupLocation="CenterOwner"
    WindowStyle="None"
    mc:Ignorable="d">

    <Window.Resources>

        

        <Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="50" />
            <Setter Property="Width" Value="100" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="LightGray" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="#EEEBEB" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="Transparent" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="Transparent">
                                <ContentPresenter />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="1" />
                    <Setter Property="Foreground" Value="Gray" />
                    <Setter Property="Background" Value="LightGray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--<Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="0,8" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>-->

        <Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="0,8" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        </Style>

        <!--<Style TargetType="{x:Type Label}" BasedOn="{StaticResource MaterialDesignLabel}">
            <Setter Property="Margin" Value="5,5"/>
            <Setter Property="FontSize" Value="11"></Setter>

        </Style>-->

        <Style TargetType="Label">

            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="10,10" />
            <Setter Property="FontSize" Value="24" />
        </Style>

        <!--<Style TargetType="Label">
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="20,10" />
            <Setter Property="FontSize" Value="24" />
        </Style>-->

        <Style BasedOn="{StaticResource MaterialDesignComboBox}" TargetType="ComboBox">
            <!--<Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}" />-->
            <Setter Property="Foreground" Value="Black" />
        </Style>

        <!--<Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MaterialDesignLightRadioButton}">
            <Setter Property="Margin" Value="0, 0, 5,0" />
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}"/>
        </Style>-->

        <converters:EnumMatchToBooleanConverter x:Key="EnumMatchToBooleanConverter" />
        <converters:EnumToValuesConverter x:Key="EnumToValuesConverter" />
        <converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
    </Window.Resources>

    <Border
        Padding="6"
        Background="{DynamicResource MaterialDesignLightBackground}"
        BorderBrush="{DynamicResource MaterialDesignDarkBackground}"
        BorderThickness="1"
        CornerRadius="0">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Vertical">
                <Label Content="{helpers:Localization AddParatextCorpusDialog_Title}" />
                <ComboBox
                    Margin="30,0,0,0"
                    VerticalAlignment="Top"
                    ItemsSource="{Binding Projects}"
                    SelectedItem="{Binding SelectedProject}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBlock FontSize="12" Text="{Binding CorpusTypeDisplay}" />
                                <TextBlock FontSize="24" Text="{Binding Name}" />
                                <TextBlock FontSize="12" Text="{Binding LongName}" />
                                <TextBlock FontSize="10" Text="{Binding Id}" />
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>

            <StackPanel Grid.Row="1" Orientation="Vertical">
                <Label Content="Select Tokenizer Engine" />
                <ComboBox
                    Margin="30,0,0,0"
                    VerticalAlignment="Top"
                    ItemsSource="{Binding Source={helpers:EnumBindingSource {x:Type project:Tokenizer}}}"
                    SelectedItem="{Binding SelectedTokenizer}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBlock FontSize="18" Text="{Binding .}" />
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>

            <StackPanel
                Grid.Row="2"
                Grid.Column="0"
                Margin="10,10"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
                <Button
                    Style="{StaticResource TransparentButton}"
                    x:Name="Ok"

                    Content="{helpers:Localization Ok}" />

                <Button
                    Style="{StaticResource TransparentButton}"
                    x:Name="Cancel"

                    Content="{helpers:Localization Cancel}" />
            </StackPanel>
        </Grid>
    </Border>


</Window>

using System;
using System.Windows;
using System.Windows.Controls;

namespace ClearDashboard.Wpf.Application.Views.ParatextViews
{
    /// <summary>
    /// Interaction logic for VersePopUpView.xaml
    /// </summary>
    public partial class VersePopUpView : Window
    {
        public VersePopUpView()
        {
            InitializeComponent();
        }


        /// <summary>
        /// Function that sets the width of the columns based up the grid width
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void gridVerses_AutoGeneratedColumns(object sender, EventArgs e)
        {
            int firstColWidth = 0;
            int verseColWidth = 60;
            int lastColumnbuffer = 20;
            var width = (gridVerses.ActualWidth - (firstColWidth + verseColWidth + lastColumnbuffer)) / (gridVerses.Columns.Count - 2);

            for (int i = 0; i < gridVerses.Columns.Count; i++)
            {
                if (i == 0)
                {
                    gridVerses.Columns[i].Width = firstColWidth;
                    gridVerses.Columns[i].Visibility = Visibility.Collapsed;
                }
                else if (i == 1)
                {
                    gridVerses.Columns[i].Width = verseColWidth;
                    if (gridVerses.Columns[i] is DataGridTextColumn textColumn)
                    {
                        // Create new style based on the existing one.  Adding a Setter to it
                        // that turns on word-wrapping.
                        var style = new Style(typeof(TextBlock), textColumn.ElementStyle);
                        style.Setters.Add(new Setter(TextBlock.VerticalAlignmentProperty, VerticalAlignment.Center));
                        textColumn.ElementStyle = style;
                    }
                }
                else
                {
                    gridVerses.Columns[i].Width = width;
                    // Cast the column to a DataGridTextColumn
                    if (gridVerses.Columns[i] is DataGridTextColumn textColumn)
                    {
                        // Create new style based on the existing one.  Adding a Setter to it
                        // that turns on word-wrapping.
                        var style = new Style(typeof(TextBlock), textColumn.ElementStyle);
                        style.Setters.Add(new Setter(TextBlock.TextWrappingProperty, TextWrapping.Wrap));
                        textColumn.ElementStyle = style;
                    }
                }
            }
        }

        /// <summary>
        /// Window size changed
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void window_SizeChanged(object sender, SizeChangedEventArgs e)
        {
            gridVerses_AutoGeneratedColumns(null, null);
        }
    }
}

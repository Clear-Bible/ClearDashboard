<UserControl
    x:Class="ClearDashboard.Wpf.Application.UserControls.BcvUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:ClearDashboard.Wpf.Application.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:ClearDashboard.Wpf.Application.Helpers;assembly=ClearDashboard.Wpf.Application.Abstractions"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:resx="clr-namespace:ClearDashboard.Wpf.Application.Strings;assembly=ClearDashboard.Wpf.Application.Abstractions"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    d:DesignHeight="55"
    d:DesignWidth="515"
    helpers:Translation.ResourceManager="{x:Static resx:Resources.ResourceManager}"
    Background="Transparent"
    FontFamily="{DynamicResource MaterialDesignFont}"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <converters:BcvBookNumConvertor x:Key="BcvBookNumConvertor" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Name="LayoutRoot" IsEnabled="{Binding IsControlEnabled}">
        <!--  DataContext="{Binding ElementName=parent}"  -->
        <Grid.RowDefinitions>
            <RowDefinition>
                <RowDefinition.Style>
                    <Style TargetType="{x:Type RowDefinition}">
                        <Setter Property="Height" Value="15" />
                        <Style.Triggers>
                            <!--  set the width of the up/down control to 0 when the control is readonly  -->
                            <DataTrigger Binding="{Binding ShowHeader}" Value="False">
                                <Setter Property="Height" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </RowDefinition.Style>
            </RowDefinition>
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <!--  sync [0]  -->
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="{x:Type ColumnDefinition}">
                        <Setter Property="Width" Value="55" />
                        <Style.Triggers>
                            <!--  set the width of the up/down control to 0 when the control is readonly  -->
                            <DataTrigger Binding="{Binding IsControlMinimal}" Value="True">
                                <Setter Property="Width" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
            <!--  left book arrow [1]  -->
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="{x:Type ColumnDefinition}">
                        <Setter Property="Width" Value="25" />
                        <Style.Triggers>
                            <!--  set the width of the up/down control to 0 when the control is readonly  -->
                            <DataTrigger Binding="{Binding IsControlMinimal}" Value="True">
                                <Setter Property="Width" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
            <!--  book combo [2]  -->
            <ColumnDefinition Width="90" />
            <!--  right book arrow [3]  -->
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="{x:Type ColumnDefinition}">
                        <Setter Property="Width" Value="30" />
                        <Style.Triggers>
                            <!--  set the width of the up/down control to 0 when the control is readonly  -->
                            <DataTrigger Binding="{Binding IsControlMinimal}" Value="True">
                                <Setter Property="Width" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
            <!--  left chapter arrow [4]  -->
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="{x:Type ColumnDefinition}">
                        <Setter Property="Width" Value="30" />
                        <Style.Triggers>
                            <!--  set the width of the up/down control to 0 when the control is readonly  -->
                            <DataTrigger Binding="{Binding IsControlMinimal}" Value="True">
                                <Setter Property="Width" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
            <!--  chapter combo [5]  -->
            <ColumnDefinition Width="60" />
            <!--  right chapter arrow [6]  -->
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="{x:Type ColumnDefinition}">
                        <Setter Property="Width" Value="30" />
                        <Style.Triggers>
                            <!--  set the width of the up/down control to 0 when the control is readonly  -->
                            <DataTrigger Binding="{Binding IsControlMinimal}" Value="True">
                                <Setter Property="Width" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
            <!--  left Verse arrow [7]  -->
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="{x:Type ColumnDefinition}">
                        <Setter Property="Width" Value="30" />
                        <Style.Triggers>
                            <!--  set the width of the up/down control to 0 when the control is readonly  -->
                            <DataTrigger Binding="{Binding IsControlMinimal}" Value="True">
                                <Setter Property="Width" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
            <!--  book Verse [8]  -->
            <ColumnDefinition Width="50" />
            <!--  right Verse arrow [9]  -->
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="{x:Type ColumnDefinition}">
                        <Setter Property="Width" Value="30" />
                        <Style.Triggers>
                            <!--  set the width of the up/down control to 0 when the control is readonly  -->
                            <DataTrigger Binding="{Binding IsControlMinimal}" Value="True">
                                <Setter Property="Width" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
            <!--  up/down control [10]  -->
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="{x:Type ColumnDefinition}">
                        <Setter Property="Width" Value="75" />
                        <Style.Triggers>
                            <!--  set the width of the up/down control to 0 when the control is readonly  -->
                            <DataTrigger Binding="{Binding ShowOffsetControl}" Value="False">
                                <Setter Property="Width" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
            <!--  lock-icon [11]  -->
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="{x:Type ColumnDefinition}">
                        <Setter Property="Width" Value="75" />
                        <Style.Triggers>
                            <!--  set the width of the up/down control to 0 when the control is readonly  -->
                            <DataTrigger Binding="{Binding ShowOffsetControl}" Value="True">
                                <Setter Property="Width" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
        </Grid.ColumnDefinitions>

        <!--  OUTLINE BORDER  -->
        <Border
            Grid.Row="0"
            Grid.RowSpan="2"
            Grid.Column="0"
            Grid.ColumnSpan="11"
            Margin="-1,-1,-1,0"
            BorderBrush="{StaticResource MahApps.Brushes.Control.Background}"
            BorderThickness="1"
            CornerRadius="4" />
        <!--  BACKGROUND BORDER BRUSH  -->
        <Border
            Grid.Row="0"
            Grid.RowSpan="2"
            Grid.Column="0"
            Grid.ColumnSpan="11"
            Margin="-1,-1,-1,0"
            CornerRadius="4">
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsControlEnabled}" Value="False">
                            <Setter Property="Background" Value="{StaticResource MahApps.Brushes.Badged.Foreground}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsControlEnabled}" Value="True">
                            <Setter Property="Background" Value="{StaticResource MahApps.Brushes.Badged.Background.Disabled}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>


        <TextBlock
            Grid.Row="0"
            Grid.Column="0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            FontSize="12"
            Foreground="{StaticResource PrimaryHueDarkForegroundBrush}"
            Text="{helpers:Localization Bcv_Sync}" />
        <TextBlock
            Grid.Row="0"
            Grid.Column="2"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            FontSize="12"
            Foreground="{StaticResource PrimaryHueDarkForegroundBrush}"
            Text="{helpers:Localization Bcv_Book}" />
        <TextBlock
            Grid.Row="0"
            Grid.Column="5"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            FontSize="12"
            Foreground="{StaticResource PrimaryHueDarkForegroundBrush}"
            Text="{helpers:Localization Bcv_Chapter}" />
        <TextBlock
            Grid.Row="0"
            Grid.Column="8"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            FontSize="12"
            Foreground="{StaticResource PrimaryHueDarkForegroundBrush}"
            Text="{helpers:Localization Bcv_Verse}" />

        <TextBlock
            Grid.Row="0"
            Grid.Column="10"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            FontSize="12"
            Foreground="{StaticResource PrimaryHueDarkForegroundBrush}"
            Text="{helpers:Localization Bcv_Offset}" />

        <ComboBox
            x:Name="CboBook"
            Grid.Row="1"
            Grid.Column="2"
            MinWidth="60"
            Margin="5,0,5,3"
            ItemsSource="{Binding CurrentBcv.BibleBookList, UpdateSourceTrigger=PropertyChanged, TargetNullValue='\0'}"
            SelectedItem="{Binding CurrentBcv.BookAbbr}"
            SelectionChanged="CboBook_SelectionChanged" />
        <!--  SelectedIndex="{Binding CurrentBcv.BookNum, Converter={StaticResource BcvBookNumConvertor}, UpdateSourceTrigger=PropertyChanged, TargetNullValue='\0'}"  -->

        <ComboBox
            x:Name="CboChapter"
            Grid.Row="1"
            Grid.Column="5"
            MinWidth="30"
            Margin="5,0,5,3"
            ItemsSource="{Binding CurrentBcv.ChapterNumbers, UpdateSourceTrigger=PropertyChanged, TargetNullValue='\0'}"
            SelectedValue="{Binding CurrentBcv.Chapter, UpdateSourceTrigger=PropertyChanged, TargetNullValue='\0'}"
            SelectionChanged="CboChapter_SelectionChanged" />
        <ComboBox
            x:Name="CboVerse"
            Grid.Row="1"
            Grid.Column="8"
            MinWidth="30"
            Margin="5,0,5,3"
            ItemsSource="{Binding CurrentBcv.VerseNumbers, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"
            SelectedValue="{Binding CurrentBcv.Verse, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"
            SelectionChanged="CboVerse_SelectionChanged" />

        <!--  SYNC BUTTON  -->
        <ToggleButton
            x:Name="Toogle"
            Grid.Row="1"
            Grid.Column="0"
            IsChecked="{Binding ParatextSync, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Style="{StaticResource MaterialDesignSwitchToggleButton}" />

        <!--  BOOK LEFT ARROW  -->
        <Button
            x:Name="BtnBookLeft"
            Grid.Row="1"
            Grid.Column="1"
            Width="15"
            Height="18"
            MinWidth="20"
            Margin="0,0,0,2"
            Padding="-1,-2,0,0"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            materialDesign:RippleAssist.Feedback="#DD000000"
            Click="BookUpArrow_Click"
            IsEnabled="False"
            Style="{StaticResource SmallTransparentStyle}"
            ToolTip="{helpers:Localization Bcv_PreviousBook}">
            <TextBlock
                Name="PreviousBookArrow"
                FontWeight="ExtraBold"
                Text="⏵" />

        </Button>
        <!--  BOOK RIGHT ARROW  -->
        <Button
            x:Name="BtnBookRight"
            Grid.Row="1"
            Grid.Column="3"
            Width="15"
            Height="18"
            MinWidth="20"
            Margin="0,0,0,2"
            Padding="-1,-2,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            materialDesign:RippleAssist.Feedback="#DD000000"
            Click="BookDownArrow_Click"
            IsEnabled="False"
            Style="{StaticResource SmallTransparentStyle}"
            ToolTip="{helpers:Localization Bcv_NextBook}">

            <TextBlock
                Name="NextBookArrow"
                FontWeight="ExtraBold"
                Text="⏵" />

        </Button>

        <!--  CHAPTER LEFT ARROW  -->
        <Button
            x:Name="BtnChapterLeft"
            Grid.Row="1"
            Grid.Column="4"
            Width="15"
            Height="18"
            MinWidth="20"
            Margin="0,0,0,2"
            Padding="-1,-2,0,0"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            materialDesign:RippleAssist.Feedback="#DD000000"
            Click="ChapterUpArrow_Click"
            IsEnabled="False"
            Style="{StaticResource SmallTransparentStyle}"
            ToolTip="{helpers:Localization Bcv_PreviousChapter}">
            <TextBlock
                Name="PreviousChapterArrow"
                FontWeight="ExtraBold"
                Text="⏵" />

        </Button>
        <!--  CHAPTER RIGHT ARROW  -->
        <Button
            x:Name="BtnChapterRight"
            Grid.Row="1"
            Grid.Column="6"
            Width="15"
            Height="18"
            MinWidth="20"
            Margin="0,0,0,2"
            Padding="-1,-2,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            materialDesign:RippleAssist.Feedback="#DD000000"
            Click="ChapterDownArrow_Click"
            IsEnabled="False"
            Style="{StaticResource SmallTransparentStyle}"
            ToolTip="{helpers:Localization Bcv_NextChapter}">

            <TextBlock
                Name="NextChapterArrow"
                FontWeight="ExtraBold"
                Text="⏵" />

        </Button>


        <!--  VERSE LEFT ARROW  -->
        <Button
            x:Name="BtnVerseLeft"
            Grid.Row="1"
            Grid.Column="7"
            Width="15"
            Height="18"
            MinWidth="20"
            Margin="0,0,0,2"
            Padding="-1,-2,0,0"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            materialDesign:RippleAssist.Feedback="#DD000000"
            Click="VerseUpArrow_Click"
            IsEnabled="False"
            Style="{StaticResource SmallTransparentStyle}"
            ToolTip="{helpers:Localization Bcv_PreviousVerse}">

            <TextBlock
                Name="PreviousVerseArrow"
                FontWeight="ExtraBold"
                Text="⏵" />

        </Button>
        <!--  VERSE RIGHT ARROW  -->
        <Button
            x:Name="BtnVerseRight"
            Grid.Row="1"
            Grid.Column="9"
            Width="15"
            Height="18"
            MinWidth="20"
            Margin="0,0,0,2"
            Padding="-1,-2,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            materialDesign:RippleAssist.Feedback="#DD000000"
            Click="VerseDownArrow_Click"
            IsEnabled="False"
            Style="{StaticResource SmallTransparentStyle}"
            ToolTip="{helpers:Localization Bcv_NextVerse}">

            <TextBlock
                Name="NextVerseArrow"
                FontWeight="ExtraBold"
                Text="⏵" />
        </Button>

        <mah:NumericUpDown
            Grid.Row="1"
            Grid.Column="10"
            Margin="0,0,5,2"
            Interval="1"
            Maximum="100"
            Minimum="0"
            Value="{Binding VerseOffsetRange, Mode=TwoWay}" />

        <materialDesign:PackIcon
            Foreground="Gray"
            VerticalAlignment="Center"
            Grid.Row="1"
            Grid.Column="11"
            Kind="LockOutline" />

    </Grid>
</UserControl>

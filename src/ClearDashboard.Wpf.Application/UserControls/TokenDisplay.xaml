<usercontrols:TokenDisplayBase
    x:Class="ClearDashboard.Wpf.Application.UserControls.TokenDisplay"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:bulkAlignment="clr-namespace:ClearDashboard.Wpf.Application.UserControls.BulkAlignment"
    xmlns:cm="http://caliburnmicro.com"
    xmlns:controls="clr-namespace:ClearDashboard.Wpf.Application.Controls"
    xmlns:converters="clr-namespace:ClearApplicationFoundation.Framework.Converters;assembly=ClearApplicationFoundation"
    xmlns:converters1="clr-namespace:ClearDashboard.Wpf.Application.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enhancedView="clr-namespace:ClearDashboard.Wpf.Application.ViewModels.EnhancedView;assembly=ClearDashboard.Wpf.Application.Abstractions"
    xmlns:helpers="clr-namespace:ClearDashboard.Wpf.Application.Helpers;assembly=ClearDashboard.Wpf.Application.Abstractions"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:resx="clr-namespace:ClearDashboard.Wpf.Application.Strings;assembly=ClearDashboard.Wpf.Application.Abstractions"
    xmlns:usercontrols="clr-namespace:ClearDashboard.Wpf.Application.UserControls"
    x:Name="TokenDisplayBase"
    d:DataContext="{d:DesignInstance Type=enhancedView:TokenDisplayViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    helpers:Translation.ResourceManager="{x:Static resx:Resources.ResourceManager}"
    FontFamily="{StaticResource ClearDashboardFont}"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <!--<converters1:ValuesAdditionConverter x:Key="ValuesAddition" />
            <converters1:MarginLeftConverter x:Key="MarginLeftConverter" />-->

            <VisualBrush
                x:Key="HatchBrush"
                TileMode="Tile"
                Viewbox="0,0,10,10"
                ViewboxUnits="Absolute"
                Viewport="0,0,10,10"
                ViewportUnits="Absolute">
                <VisualBrush.Visual>
                    <Canvas>
                        <Rectangle
                            Width="10"
                            Height="10"
                            Fill="Azure" />
                        <Path
                            Width="5"
                            Data="M 0 0 l 5 0"
                            Stroke="Red" />
                    </Canvas>
                </VisualBrush.Visual>
            </VisualBrush>
        </ResourceDictionary>
    </UserControl.Resources>

    <StackPanel
        Width="Auto"
        HorizontalAlignment="Left"
        Orientation="Vertical">

        <!--  Composite Indicator  -->
        <Rectangle
            Width="{Binding Path=ActualWidth, ElementName=TokenButton}"
            Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=CompositeIndicatorHeight}"
            Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=CompositeIndicatorMargin}"
            HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationAlignment}"
            Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=CompositeIndicatorComputedColor}"
            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=CompositeIndicatorVisibility}" />

        <Grid>

            <StackPanel Orientation="Horizontal">
                <!--  External Notes Indicator  -->
                <Grid>
                    <iconPacks:PackIconModern
                        x:Name="MultipleNotesIcon"
                        Margin="3,0,0,0"
                        Foreground="DarkGray"
                        IsHitTestVisible="False"
                        Kind="Flag">
                        <iconPacks:PackIconModern.Style>
                            <Style TargetType="iconPacks:PackIconModern">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MultipleExternalNotes}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </iconPacks:PackIconModern.Style>

                    </iconPacks:PackIconModern>

                    <iconPacks:PackIconModern
                        x:Name="ExternalNotesIcon"
                        Margin="0,2,0,0"
                        Cursor="Hand"
                        Foreground="Red"
                        MouseDown="PackIconModern_MouseDown">
                        <iconPacks:PackIconModern.Style>
                            <Style TargetType="{x:Type iconPacks:PackIconModern}">
                                <Setter Property="Kind" Value="Flag" />
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MultipleExternalNotes}" Value="True">
                                        <Setter Property="Kind" Value="Flag" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsFirstExternalNoteToken}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </iconPacks:PackIconModern.Style>

                        <iconPacks:PackIconModern.ToolTip>
                            <ToolTip
                                Background="LightYellow"
                                HasDropShadow="false"
                                HorizontalOffset="10"
                                Placement="Left"
                                PlacementRectangle="50,0,0,0"
                                VerticalOffset="20">
                                <StackPanel Orientation="Vertical">
                                    <ListView ItemsSource="{Binding ExternalNotes}">
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Vertical">
                                                    <Separator />
                                                    <Label Content="{Binding ExternalLabelsString}" Foreground="{StaticResource BlueMidBrush}" />
                                                    <Label Content="{Binding ExternalNoteMessagesString}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </StackPanel>
                            </ToolTip>
                        </iconPacks:PackIconModern.ToolTip>
                    </iconPacks:PackIconModern>
                </Grid>


                <!--  Jots Notes Indicator  -->
                <iconPacks:PackIconBootstrapIcons
                    x:Name="MultipleJotsIcon"
                    Margin="3,0,0,0"
                    Background="White"
                    Cursor="Hand"
                    Foreground="Orange"
                    IsHitTestVisible="True"
                    Kind="ChatRightDots"
                    MouseLeftButtonDown="OnNoteLeftButtonDown"
                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TokenNoteIndicatorVisibility}" />
            </StackPanel>

            <!--  Token Button  -->
            <Button
                x:Name="TokenButton"
                Width="{Binding ElementName=SurfaceTextBlock, Path=ActualWidth}"
                Height="Auto"
                Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TokenMargin}"
                Padding="0"
                HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationAlignment}"
                HorizontalContentAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationAlignment}"
                cm:Message.Attach="[ToolTipOpening]=[OnToolTipOpening($eventArgs)]"
                materialDesign:ShadowAssist.ShadowDepth="Depth0"
                Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TokenBackground}"
                BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TokenBorder}"
                BorderThickness="2"
                Click="OnTokenClicked"
                ContextMenuOpening="OnTokenContextMenuOpening"
                FlowDirection="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TokenFlowDirection}"
                FontFamily="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TokenFontFamily}"
                FontSize="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TokenFontSize}"
                FontStyle="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TokenFontStyle}"
                FontWeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TokenFontWeight}"
                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TokenForeground}"
                IsDefault="False"
                MouseDoubleClick="OnTokenDoubleClicked"
                MouseEnter="OnTokenMouseEnter"
                MouseLeave="OnTokenMouseLeave"
                MouseLeftButtonUp="OnTokenLeftButtonUp"
                MouseRightButtonDown="OnTokenRightButtonDown"
                MouseRightButtonUp="OnTokenRightButtonUp"
                MouseWheel="OnTokenMouseWheel"
                MouseLeftButtonDown="OnTokenLeftButtonDown"
                 PreviewMouseLeftButtonDown="OnTokenLeftButtonDown"> 
                <!--  ToolTipOpening="OnToolTipOpening"  -->
                
                <Button.ContextMenu>
                    <ContextMenu x:Name="TokenDisplayContextMenu" FlowDirection="LeftToRight">
                        <MenuItem
                            x:Name="CreateNoteMenuItem"
                            Click="OnCreateNote"
                            Header="{helpers:Localization EnhancedView_CreateNote}"
                            Visibility="Collapsed" />
                        <MenuItem
                            x:Name="CreateAlignmentMenuItem"
                            Click="OnTokenCreateAlignment"
                            Header="{helpers:Localization EnhancedView_CreateAlignment}"
                            Visibility="Collapsed" />
                        <MenuItem
                            x:Name="DeleteAlignmentMenuItem"
                            Click="OnTokenDeleteAlignment"
                            Header="{helpers:Localization EnhancedView_DeleteAlignmentMenu}"
                            Visibility="Collapsed" />
                        <MenuItem
                            x:Name="JoinTokensMenuItem"
                            Click="OnTokenJoin"
                            Header="{helpers:Localization EnhancedView_JoinTokens}"
                            Visibility="Collapsed" />
                        <MenuItem
                            x:Name="JoinTokensLanguagePairMenuItem"
                            Click="OnTokenJoinLanguagePair"
                            Header="{helpers:Localization EnhancedView_JoinTokensForLanguagePair}"
                            Visibility="Collapsed" />
                        <MenuItem
                            x:Name="UnjoinTokenMenuItem"
                            Click="OnTokenUnjoin"
                            Header="{helpers:Localization EnhancedView_UnjoinTokens}" />
                        <MenuItem
                            x:Name="SplitTokenMenuItem"
                            Click="OnTokenSplit"
                            Header="{helpers:Localization EnhancedView_SplitToken}" />
                        <MenuItem
                            x:Name="CopyMenuItem"
                            Click="OnCopy"
                            Header="{helpers:Localization Copy}"
                            Visibility="Collapsed" />
                        <MenuItem
                            x:Name="FilterPinsMenuItem"
                            Click="OnFilterPins"
                            Header="{helpers:Localization EnhancedView_FilterPins}"
                            Visibility="Collapsed" />
                        <MenuItem
                            x:Name="FilterPinsByBiblicalTermsMenuItem"
                            Click="OnFilterPinsByBiblicalTerms"
                            Header="{helpers:Localization EnhancedView_FilterPinsByKeyTerms}"
                            Visibility="Collapsed" />
                    </ContextMenu>
                </Button.ContextMenu>
                <TextBlock
                    x:Name="SurfaceTextBlock"
                    Margin="0"
                    Padding="2"
                    Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=SurfaceText}" />
                <Button.ToolTip>
                    <ToolTip
                        Background="LightYellow"
                        HasDropShadow="false"
                        HorizontalOffset="10"
                        Placement="Left"
                        PlacementRectangle="50,0,0,0"
                        VerticalOffset="20">
                        <StackPanel Orientation="Vertical">
                            <bulkAlignment:AlignmentTooltip Visibility="{Binding IsHighlighted, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <controls:ExtendedPropertiesTreeView
                                x:Name="ExtendedPropertiesTreeViewName"
                                ExtendedPropertiesXml="{Binding ExtendedProperties}"
                                Visibility="{Binding HasExtendedProperties, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>

        </Grid>


        <!--  Dashboard Notes  -->
        <Rectangle
            x:Name="NoteIndicator"
            Width="{Binding Path=ActualWidth, ElementName=TokenButton}"
            Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=NoteIndicatorHeight}"
            Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=NoteIndicatorMargin}"
            HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationAlignment}"
            Cursor="Hand"
            MouseEnter="OnNoteMouseEnter"
            MouseLeave="OnNoteMouseLeave"
            MouseLeftButtonDown="OnNoteLeftButtonDown"
            MouseLeftButtonUp="OnNoteLeftButtonUp"
            MouseRightButtonDown="OnNoteRightButtonDown"
            MouseRightButtonUp="OnNoteRightButtonUp"
            MouseWheel="OnNoteMouseWheel"
            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TokenNoteIndicatorVisibility}">
            <Rectangle.Style>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=NoteIndicatorComputedColor}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsNoteSelected}" Value="True">
                            <Setter Property="Fill" Value="Orange" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Rectangle.Style>
        </Rectangle>

        <!--  External Notes  -->
        <Border
            Width="{Binding Path=ActualWidth, ElementName=TokenButton}"
            Height="5"
            Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=NoteIndicatorMargin}"
            Background="{StaticResource HatchBrush}">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Opacity" Value="0.0" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HasExternalNotes}" Value="True">
                            <Setter Property="Opacity" Value="1.0" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <Border.ToolTip>
                <ToolTip
                    Background="LightYellow"
                    HasDropShadow="false"
                    HorizontalOffset="10"
                    Placement="Left"
                    PlacementRectangle="50,0,0,0"
                    VerticalOffset="20">
                    <StackPanel Orientation="Vertical">
                        <ListView ItemsSource="{Binding ExternalNotes}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical">
                                        <Separator />
                                        <Label Content="{Binding ExternalLabelsString}" Foreground="{StaticResource BlueMidBrush}" />
                                        <Label Content="{Binding ExternalNoteMessagesString}" />

                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </StackPanel>
                </ToolTip>
            </Border.ToolTip>
        </Border>


        <Button
            x:Name="TranslationButton"
            Height="Auto"
            Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationMargin}"
            Padding="0"
            HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationAlignment}"
            HorizontalContentAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationAlignment}"
            materialDesign:ShadowAssist.ShadowDepth="Depth0"
            Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationBackground}"
            BorderThickness="0"
            Click="OnTranslationClicked"
            ContextMenuOpening="OnTranslationContextMenuOpening"
            FlowDirection="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationFlowDirection}"
            FontFamily="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationFontFamily}"
            FontSize="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationFontSize}"
            FontStyle="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationFontStyle}"
            FontWeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationFontWeight}"
            Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationColor}"
            IsDefault="False"
            KeyUp="OnTranslationButtonKeyUp"
            MouseDoubleClick="OnTranslationDoubleClicked"
            MouseEnter="OnTranslationMouseEnter"
            MouseLeave="OnTranslationMouseLeave"
            MouseLeftButtonUp="OnTranslationLeftButtonUp"
            MouseRightButtonDown="OnTranslationRightButtonDown"
            MouseRightButtonUp="OnTranslationRightButtonUp"
            MouseWheel="OnTranslationMouseWheel"
            PreviewMouseLeftButtonDown="OnTranslationLeftButtonDown"
            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationVisibility}">
            <Button.ContextMenu>
                <ContextMenu x:Name="TranslationDisplayContextMenu" FlowDirection="LeftToRight">
                    <MenuItem
                        x:Name="SetTranslationMenuItem"
                        Click="OnSetTranslation"
                        Header="{helpers:Localization TokenDisplay_SetTranslation}"
                        Visibility="Collapsed" />
                    <MenuItem
                        x:Name="CreateTranslationNoteMenuItem"
                        Click="OnCreateNote"
                        Header="{helpers:Localization EnhancedView_CreateNote}"
                        Visibility="Collapsed" />
                    <MenuItem
                        Click="OnFilterPinsTarget"
                        Header="{helpers:Localization EnhancedView_FilterPins}"
                        Visibility="Visible" />
                </ContextMenu>
            </Button.ContextMenu>
            <TextBlock Margin="0" Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationText}" />
        </Button>
        <Button
            Height="Auto"
            Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenMargin}"
            Padding="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenPadding}"
            HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenAlignment}"
            HorizontalContentAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenAlignment}"
            materialDesign:ShadowAssist.ShadowDepth="Depth0"
            Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenBackground}"
            BorderThickness="0"
            Click="OnAlignedTokenClicked"
            FlowDirection="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenFlowDirection}"
            FontFamily="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenFontFamily}"
            FontSize="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenFontSize}"
            FontStyle="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenFontStyle}"
            FontWeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenFontWeight}"
            Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenColor}"
            IsDefault="False"
            MouseDoubleClick="OnAlignedTokenDoubleClicked"
            MouseEnter="OnAlignedTokenMouseEnter"
            MouseLeave="OnAlignedTokenMouseLeave"
            MouseLeftButtonUp="OnAlignedTokenLeftButtonUp"
            MouseRightButtonDown="OnAlignedTokenRightButtonDown"
            MouseRightButtonUp="OnAlignedTokenRightButtonUp"
            MouseWheel="OnAlignedTokenMouseWheel"
            PreviewMouseLeftButtonDown="OnAlignedTokenLeftButtonDown"
            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenVisibility}">
            <TextBlock Margin="0" Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenText}" />
        </Button>
        <Rectangle
            Width="{Binding Path=ActualWidth, ElementName=TranslationButton}"
            Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=NoteIndicatorHeight}"
            Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=NoteIndicatorMargin}"
            HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationAlignment}"
            Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=NoteIndicatorComputedColor}"
            MouseEnter="OnNoteMouseEnter"
            MouseLeave="OnNoteMouseLeave"
            MouseLeftButtonDown="OnNoteLeftButtonDown"
            MouseLeftButtonUp="OnNoteLeftButtonUp"
            MouseRightButtonDown="OnNoteRightButtonDown"
            MouseRightButtonUp="OnNoteRightButtonUp"
            MouseWheel="OnNoteMouseWheel"
            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationNoteIndicatorVisibility}" />
    </StackPanel>
</usercontrols:TokenDisplayBase>

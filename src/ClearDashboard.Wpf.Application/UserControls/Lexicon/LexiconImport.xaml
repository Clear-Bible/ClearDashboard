<UserControl x:Class="ClearDashboard.Wpf.Application.UserControls.Lexicon.LexiconImport"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ClearDashboard.Wpf.Application.UserControls.Lexicon"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:cm="http://caliburnmicro.com"
             xmlns:helpers="clr-namespace:ClearDashboard.Wpf.Application.Helpers;assembly=ClearDashboard.Wpf.Application.Abstractions"
             xmlns:resx="clr-namespace:ClearDashboard.Wpf.Application.Strings;assembly=ClearDashboard.Wpf.Application.Abstractions"
             xmlns:userControls="clr-namespace:ClearDashboard.Wpf.Application.UserControls"
             xmlns:lexicon="clr-namespace:ClearDashboard.Wpf.Application.ViewModels.Lexicon"
             helpers:Translation.ResourceManager="{x:Static resx:Resources.ResourceManager}"

             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=lexicon:LexiconViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.SystemControlForegroundAccent}" />
        </Style>
        <Style x:Key="SmallTransparentButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="50" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="LightGray" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="#EEEBEB" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="Transparent" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Background="Transparent">
                                <ContentPresenter x:Name="ButtonContent" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="1" />
                    <Setter Property="Foreground" Value="Gray" />
                    <Setter Property="Background" Value="LightGray" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <materialDesign:Card  Height="Auto"  Margin="5" >
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40" ></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button Grid.Row="0" 
                        Grid.Column="0" 
                        Width="100"
                        Height="30"
                        Foreground="{DynamicResource MaterialDesignBody}"
                        HorizontalAlignment="Left"
                        Content="{helpers:Localization LexiconImport_ImportChecked}" 
                        Style="{StaticResource SmallTransparentButtonStyle}"
                        />
             
            </Grid>
            <!--<DataGrid Grid.Row="1" Grid.Column="0" 
                          x:Name="LexiconSelectionDataGrid" 
                          ItemsSource="{Binding PagedBulkAlignments}" 
                          AutoGenerateColumns="False" 
                          HorizontalAlignment="Stretch"
                          Margin="4"
                          VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                          VirtualizingPanel.VirtualizationMode="Recycling"
                          VirtualizingPanel.IsVirtualizing="True"
                          SelectionMode="Single"
                          SelectionUnit="FullRow"
                          ScrollViewer.CanContentScroll="True"
                          ScrollViewer.VerticalScrollBarVisibility="Visible"
                          IsReadOnly="True"
                          IsEnabled="{Binding FetchingData, Converter={StaticResource BooleanInversionConverter}}">-->
            <DataGrid Grid.Row="1" Grid.Column="0" 
                      x:Name="LexiconSelectionDataGrid" 
                      ItemsSource="{Binding LexiconImports}"
                      AutoGenerateColumns="False" 
                      HorizontalAlignment="Stretch"
                      Margin="4"
                      VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                      VirtualizingPanel.VirtualizationMode="Recycling"
                      VirtualizingPanel.IsVirtualizing="True"
                      SelectionMode="Single"
                      SelectionUnit="FullRow"
                      ScrollViewer.CanContentScroll="True"
                      ScrollViewer.VerticalScrollBarVisibility="Visible"
                      IsReadOnly="True">
                <DataGrid.Columns>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <CheckBox x:Name="SelectAllCheckBox" 
                                    cm:Message.Attach="[Event Checked] = [Action OnToggleAllChecked($source)];[Event Unchecked] = [Action OnToggleAllChecked($source)]" 
                                    cm:Action.TargetWithoutContext="{Binding DataContext, ElementName=LexiconSelectionDataGrid}"> 
                                    <CheckBox.Resources>
                                        <ToolTip x:Key="CheckedToolTip">
                                            <TextBlock Text="{helpers:Localization LexiconImport_SelectAll}"></TextBlock>
                                        </ToolTip>
                                        <ToolTip x:Key="UncheckedToolTip">
                                            <TextBlock Text="{helpers:Localization LexiconImport_UnselectAll}"></TextBlock>
                                        </ToolTip>
                                    </CheckBox.Resources>

                                    <CheckBox.Style>
                                       <Style TargetType="CheckBox">
                                           <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=SelectAllCheckBox, Path=IsChecked}" Value="False">
                                                    <Setter Property="CheckBox.ToolTip"
                                                            Value="{StaticResource CheckedToolTip}"/>
                                               </DataTrigger>
                                               <DataTrigger Binding="{Binding ElementName=SelectAllCheckBox, Path=IsChecked}" Value="True">
                                                   <Setter Property="CheckBox.ToolTip"
                                                           Value="{StaticResource UncheckedToolTip}"/>
                                               </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                   </CheckBox.Style>
                                    
                                    <!--<CheckBox.ToolTip>
                                        <TextBlock Text="{helpers:Localization LexiconImport_SelectAll}"></TextBlock>
                                    </CheckBox.ToolTip>-->
                                </CheckBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox Focusable="False" IsChecked="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="{helpers:Localization LexiconImport_SourceWord}"  Binding="{Binding SourceWord}" Width="150"/>
                    <DataGridTextColumn Header="{helpers:Localization LexiconImport_SourceLanguage}" Binding="{Binding SourceLanguage}" Width="150"/>
                    <DataGridTextColumn Header="{helpers:Localization LexiconImport_SourceType}" Binding="{Binding SourceType}" Width="150"/>
                    <DataGridTextColumn Header="{helpers:Localization LexiconImport_TargetWord}"  Binding="{Binding TargetWord}" Width="150"/>
                    <DataGridTextColumn Header="{helpers:Localization LexiconImport_TargetLanguage}" Binding="{Binding TargetLanguage}" Width="150"/>
                    <DataGridTemplateColumn  Width="150">
                        
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button  cm:Message.Attach="[Event Click] = [Action OnSyncButtonClicked($dataContext)]" 
                                             Style="{StaticResource SmallTransparentStyle}" 
                                             Content="{iconPacks:PicolIcons Kind=Synchronize}"
                                             Width="100"
                                             Margin="10"
                                             Padding="0"
                                             Visibility="{Binding ShowAddAsFormButton, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn  Width="150">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button  cm:Message.Attach="[Event Click] = [Action OnSyncButtonClicked($dataContext)]" 
                                             Style="{StaticResource SmallTransparentStyle}" 
                                             Content="{iconPacks:PicolIcons Kind=Synchronize}"
                                             Width="100"
                                             Margin="10"
                                             Padding="0"
                                             Visibility="{Binding ShowAddTargetAsTranslationButton, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </materialDesign:Card>

</UserControl>

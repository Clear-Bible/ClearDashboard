<userControls:VerseDisplayBase
    x:Class="ClearDashboard.Wpf.Application.UserControls.VerseDisplay"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:ClearDashboard.Wpf.Application.Controls"
    xmlns:converters="clr-namespace:ClearDashboard.Wpf.Application.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enhancedView="clr-namespace:ClearDashboard.Wpf.Application.ViewModels.EnhancedView;assembly=ClearDashboard.Wpf.Application.Abstractions"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:userControls="clr-namespace:ClearDashboard.Wpf.Application.UserControls"
    d:DesignHeight="450"
    d:DesignWidth="800"
    FontFamily="{StaticResource ClearDashboardFont}"
    mc:Ignorable="d">

    <UserControl.Resources>
        <converters:BoolFlowDirectionConverter x:Key="BoolFlowDirectionConverter"/>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <DataTemplate x:Key="SourceTokenDisplay">
            <userControls:TokenDisplay
                HorizontalAlignment="Left"
                AlignedTokenAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenAlignment}"
                AlignedTokenClicked="OnAlignedTokenClicked"
                AlignedTokenColor="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenColor}"
                AlignedTokenDoubleClicked="OnAlignedTokenDoubleClicked"
                AlignedTokenFlowDirection="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenFlowDirection}"
                AlignedTokenFontFamily="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenFontFamily}"
                AlignedTokenFontSize="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenFontSize}"
                AlignedTokenFontStyle="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenFontStyle}"
                AlignedTokenFontWeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenFontWeight}"
                AlignedTokenLeftButtonDown="OnAlignedTokenLeftButtonDown"
                AlignedTokenLeftButtonUp="OnAlignedTokenLeftButtonUp"
                AlignedTokenMouseEnter="OnAlignedTokenMouseEnter"
                AlignedTokenMouseLeave="OnAlignedTokenMouseLeave"
                AlignedTokenMouseWheel="OnAlignedTokenMouseWheel"
                AlignedTokenPadding="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenPadding}"
                AlignedTokenRightButtonDown="OnAlignedTokenRightButtonDown"
                AlignedTokenRightButtonUp="OnAlignedTokenRightButtonUp"
                AlignedTokenVerticalSpacing="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenVerticalSpacing}"
                Copy="OnCopy"
                DataContext="{Binding}"
                FilterPins="OnFilterPins"
                FilterPinsByBiblicalTerms="OnFilterPinsByBiblicalTerms"
                FilterPinsTarget="OnFilterPinsTarget"
                GlossSet="OnGlossSet"
                FilterPinsTranslation="OnFilterPinsTranslation"
                HighlightedTokenBackground="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=HighlightedTokenBackground}"
                HorizontalSpacing="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=HorizontalSpacing}"
                NoteCreate="OnNoteCreate"
                NoteIndicatorColor="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=NoteIndicatorColor}"
                NoteIndicatorHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=NoteIndicatorHeight}"
                NoteIndicatorLeftButtonDown="OnNoteLeftButtonDown"
                NoteIndicatorLeftButtonUp="OnNoteLeftButtonUp"
                NoteIndicatorMouseEnter="OnNoteMouseEnter"
                NoteIndicatorMouseLeave="OnNoteMouseLeave"
                NoteIndicatorMouseWheel="OnNoteMouseWheel"
                NoteIndicatorRightButtonDown="OnNoteRightButtonDown"
                NoteIndicatorRightButtonUp="OnNoteRightButtonUp"
                Orientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=Orientation}"
                SelectedTokenBackground="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=SelectedTokenBackground}"
                ShowNoteIndicator="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=ShowNoteIndicators}"
                ShowTranslation="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=ShowTranslations}"
                TokenClicked="OnTokenClicked"
                TokenCreateAlignment="OnTokenCreateAlignment"
                TokenDeleteAlignment="OnTokenDeleteAlignment"
                TokenDoubleClicked="OnTokenDoubleClicked"
                TokenFlowDirection="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.(enhancedView:VerseDisplayViewModel.IsSourceRtl), Converter={StaticResource BoolFlowDirectionConverter}}"
                TokenFontFamily="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=SourceFontFamily}"
                TokenFontSize="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=SourceFontSize}"
                TokenFontStyle="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=SourceFontStyle}"
                TokenFontWeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=SourceFontWeight}"
                TokenJoin="OnTokenJoin"
                TokenJoinLanguagePair="OnTokenJoinLanguagePair"
                TokenLeftButtonDown="OnTokenLeftButtonDown"
                TokenLeftButtonUp="OnTokenLeftButtonUp"
                TokenMouseEnter="OnTokenMouseEnter"
                TokenMouseLeave="OnTokenMouseLeave"
                TokenMouseWheel="OnTokenMouseWheel"
                TokenRightButtonDown="OnTokenRightButtonDown"
                TokenRightButtonUp="OnTokenRightButtonUp"
                TokenSplit="OnTokenSplit"
                TokenUnjoin="OnTokenUnjoin"
                TokenVerticalSpacing="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TokenVerticalSpacing}"
                TranslateQuick="OnTranslateQuick"
                TranslationAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationAlignment}"
                TranslationClicked="OnTranslationClicked"
                TranslationDoubleClicked="OnTranslationDoubleClicked"
                TranslationFlowDirection="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationFlowDirection}"
                TranslationFontFamily="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationFontFamily}"
                TranslationFontSize="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationFontSize}"
                TranslationFontStyle="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationFontStyle}"
                TranslationFontWeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationFontWeight}"
                TranslationLeftButtonDown="OnTranslationLeftButtonDown"
                TranslationLeftButtonUp="OnTranslationLeftButtonUp"
                TranslationMouseEnter="OnTranslationMouseEnter"
                TranslationMouseLeave="OnTranslationMouseLeave"
                TranslationMouseWheel="OnTranslationMouseWheel"
                TranslationNoteCreate="OnTranslationNoteCreate"
                TranslationNoteIndicatorColor="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationNoteIndicatorColor}"
                TranslationNoteIndicatorHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationNoteIndicatorHeight}"
                TranslationNoteIndicatorLeftButtonDown="OnTranslationNoteLeftButtonDown"
                TranslationNoteIndicatorLeftButtonUp="OnTranslationNoteLeftButtonUp"
                TranslationNoteIndicatorMouseEnter="OnTranslationNoteMouseEnter"
                TranslationNoteIndicatorMouseLeave="OnTranslationNoteMouseLeave"
                TranslationNoteIndicatorMouseWheel="OnTranslationNoteMouseWheel"
                TranslationNoteIndicatorRightButtonDown="OnTranslationNoteRightButtonDown"
                TranslationNoteIndicatorRightButtonUp="OnTranslationNoteRightButtonUp"
                TranslationRightButtonDown="OnTranslationRightButtonDown"
                TranslationRightButtonUp="OnTranslationRightButtonUp"
                TranslationSet="OnTranslationSet"
                TranslationVerticalSpacing="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationVerticalSpacing}">
                <userControls:TokenDisplay.CommandBindings>
                    <CommandBinding Command="Copy"
                                    Executed="OnCopy"/>
                </userControls:TokenDisplay.CommandBindings>

                <userControls:TokenDisplay.InputBindings>
                    <KeyBinding
                        Key="C"
                        Command="Copy"
                        Modifiers="Control"/>
                </userControls:TokenDisplay.InputBindings>
            </userControls:TokenDisplay>
        </DataTemplate>
        <DataTemplate x:Key="TargetTokenDisplay">
            <userControls:TokenDisplay
                HorizontalAlignment="Left"
                AlignedTokenAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenAlignment}"
                AlignedTokenClicked="OnAlignedTokenClicked"
                AlignedTokenColor="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenColor}"
                AlignedTokenDoubleClicked="OnAlignedTokenDoubleClicked"
                AlignedTokenFlowDirection="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenFlowDirection}"
                AlignedTokenFontFamily="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenFontFamily}"
                AlignedTokenFontSize="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenFontSize}"
                AlignedTokenFontStyle="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenFontStyle}"
                AlignedTokenFontWeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenFontWeight}"
                AlignedTokenLeftButtonDown="OnAlignedTokenLeftButtonDown"
                AlignedTokenLeftButtonUp="OnAlignedTokenLeftButtonUp"
                AlignedTokenMouseEnter="OnAlignedTokenMouseEnter"
                AlignedTokenMouseLeave="OnAlignedTokenMouseLeave"
                AlignedTokenMouseWheel="OnAlignedTokenMouseWheel"
                AlignedTokenPadding="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenPadding}"
                AlignedTokenRightButtonDown="OnAlignedTokenRightButtonDown"
                AlignedTokenRightButtonUp="OnAlignedTokenRightButtonUp"
                AlignedTokenVerticalSpacing="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AlignedTokenVerticalSpacing}"
                Copy="OnCopy"
                DataContext="{Binding}"
                FilterPins="OnFilterPins"
                FilterPinsByBiblicalTerms="OnFilterPinsByBiblicalTerms"
                FilterPinsTarget="OnFilterPinsTarget"
                GlossSet="OnGlossSet"
                FilterPinsTranslation="OnFilterPinsTranslation"
                HighlightedTokenBackground="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=HighlightedTokenBackground}"
                HorizontalSpacing="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=HorizontalSpacing}"
                NoteCreate="OnNoteCreate"
                NoteIndicatorColor="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=NoteIndicatorColor}"
                NoteIndicatorHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=NoteIndicatorHeight}"
                NoteIndicatorLeftButtonDown="OnNoteLeftButtonDown"
                NoteIndicatorLeftButtonUp="OnNoteLeftButtonUp"
                NoteIndicatorMouseEnter="OnNoteMouseEnter"
                NoteIndicatorMouseLeave="OnNoteMouseLeave"
                NoteIndicatorMouseWheel="OnNoteMouseWheel"
                NoteIndicatorRightButtonDown="OnNoteRightButtonDown"
                NoteIndicatorRightButtonUp="OnNoteRightButtonUp"
                Orientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=Orientation}"
                SelectedTokenBackground="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=SelectedTokenBackground}"
                ShowNoteIndicator="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=ShowNoteIndicators}"
                ShowTranslation="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=ShowTranslations}"
                ShowTranslationNoteIndicator="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=ShowTranslationNoteIndicators}"
                TokenClicked="OnTokenClicked"
                TokenCreateAlignment="OnTokenCreateAlignment"
                TokenDeleteAlignment="OnTokenDeleteAlignment"
                TokenDoubleClicked="OnTokenDoubleClicked"
                TokenFlowDirection="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.(enhancedView:VerseDisplayViewModel.IsTargetRtl), Converter={StaticResource BoolFlowDirectionConverter}}"
                TokenFontFamily="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TargetFontFamily}"
                TokenFontSize="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TargetFontSize}"
                TokenFontStyle="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TargetFontStyle}"
                TokenFontWeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TargetFontWeight}"
                TokenJoin="OnTokenJoin"
                TokenLeftButtonDown="OnTokenLeftButtonDown"
                TokenLeftButtonUp="OnTokenLeftButtonUp"
                TokenMouseEnter="OnTokenMouseEnter"
                TokenMouseLeave="OnTokenMouseLeave"
                TokenMouseWheel="OnTokenMouseWheel"
                TokenRightButtonDown="OnTokenRightButtonDown"
                TokenRightButtonUp="OnTokenRightButtonUp"
                TokenUnjoin="OnTokenUnjoin"
                TokenVerticalSpacing="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TokenVerticalSpacing}"
                TranslateQuick="OnTranslateQuick"
                TranslationAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationAlignment}"
                TranslationClicked="OnTranslationClicked"
                TranslationDoubleClicked="OnTranslationDoubleClicked"
                TranslationFlowDirection="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationFlowDirection}"
                TranslationFontFamily="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationFontFamily}"
                TranslationFontSize="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationFontSize}"
                TranslationFontStyle="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationFontStyle}"
                TranslationFontWeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationFontWeight}"
                TranslationLeftButtonDown="OnTranslationLeftButtonDown"
                TranslationLeftButtonUp="OnTranslationLeftButtonUp"
                TranslationMouseEnter="OnTranslationMouseEnter"
                TranslationMouseLeave="OnTranslationMouseLeave"
                TranslationMouseWheel="OnTranslationMouseWheel"
                TranslationNoteIndicatorColor="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationNoteIndicatorColor}"
                TranslationNoteIndicatorHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationNoteIndicatorHeight}"
                TranslationNoteIndicatorLeftButtonDown="OnTranslationNoteLeftButtonDown"
                TranslationNoteIndicatorLeftButtonUp="OnTranslationNoteLeftButtonUp"
                TranslationNoteIndicatorMouseEnter="OnTranslationNoteMouseEnter"
                TranslationNoteIndicatorMouseLeave="OnTranslationNoteMouseLeave"
                TranslationNoteIndicatorMouseWheel="OnTranslationNoteMouseWheel"
                TranslationNoteIndicatorRightButtonDown="OnTranslationNoteRightButtonDown"
                TranslationNoteIndicatorRightButtonUp="OnTranslationNoteRightButtonUp"
                TranslationRightButtonDown="OnTranslationRightButtonDown"
                TranslationRightButtonUp="OnTranslationRightButtonUp"
                TranslationSet="OnTranslationSet"
                TranslationVerticalSpacing="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TranslationVerticalSpacing}">
                <userControls:TokenDisplay.CommandBindings>
                    <CommandBinding Command="Copy"
                                    Executed="OnCopy"/>
                </userControls:TokenDisplay.CommandBindings>

                <userControls:TokenDisplay.InputBindings>
                    <KeyBinding
                        Key="C"
                        Command="Copy"
                        Modifiers="Control"/>
                </userControls:TokenDisplay.InputBindings>
            </userControls:TokenDisplay>
        </DataTemplate>
        <!--  ReSharper disable once Xaml.RedundantResource  -->
        <ItemsPanelTemplate x:Key="SourceWrapPanelTemplate">
            <WrapPanel FlowDirection="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.(enhancedView:VerseDisplayViewModel.IsSourceRtl), Converter={StaticResource BoolFlowDirectionConverter}}"
                       Orientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=Orientation}"/>
        </ItemsPanelTemplate>
        <!--  ReSharper disable once Xaml.RedundantResource  -->
        <ItemsPanelTemplate x:Key="TargetWrapPanelTemplate">
            <WrapPanel FlowDirection="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.(enhancedView:VerseDisplayViewModel.IsTargetRtl), Converter={StaticResource BoolFlowDirectionConverter}}"
                       Orientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=Orientation}"/>
        </ItemsPanelTemplate>
        <!--  ReSharper disable once Xaml.RedundantResource  -->
        <ItemsPanelTemplate x:Key="SourceStackPanelTemplate">
            <StackPanel
                HorizontalAlignment="Left"
                FlowDirection="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.(enhancedView:VerseDisplayViewModel.IsSourceRtl), Converter={StaticResource BoolFlowDirectionConverter}}"
                Orientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=Orientation}"/>
        </ItemsPanelTemplate>
        <!--  ReSharper disable once Xaml.RedundantResource  -->
        <ItemsPanelTemplate x:Key="TargetStackPanelTemplate">
            <StackPanel
                HorizontalAlignment="Left"
                FlowDirection="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.(enhancedView:VerseDisplayViewModel.IsSourceRtl), Converter={StaticResource BoolFlowDirectionConverter}}"
                Orientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=Orientation}"/>
        </ItemsPanelTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <!--  External Notes  -->
        <Border
            MaxWidth="18"
            MaxHeight="22"
            Margin="2"
            Background="WhiteSmoke"
            BorderBrush="Black"
            BorderThickness="1"
            CornerRadius="3"
            Cursor="Hand"
            MouseDown="Border_MouseDown"
            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.(enhancedView:VerseDisplayViewModel.HasExternalNotes), Converter={StaticResource BoolToVisibilityConverter}}">
            <Border.ToolTip>
                <ToolTip
                    Background="LightYellow"
                    HasDropShadow="false"
                    HorizontalOffset="10"
                    Placement="Left"
                    PlacementRectangle="50,0,0,0"
                    VerticalOffset="20">
                    <StackPanel Orientation="Vertical">
                        <ListView ItemsSource="{Binding ExternalNotes}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical">
                                        <Separator/>
                                        <Label Content="{Binding ExternalLabelsString}"
                                               Foreground="{StaticResource BlueMidBrush}"/>
                                        <Label Content="{Binding ExternalNoteMessagesString}"/>
                                        <Label Content="{Binding ExternalLabel[0]}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </StackPanel>
                </ToolTip>
            </Border.ToolTip>
            <Grid>
                <StackPanel Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.(enhancedView:VerseDisplayViewModel.MultipleExternalNotes), Converter={StaticResource BoolToVisibilityConverter}}">
                    <iconPacks:PackIconModern
                        x:Name="MultipleNotesIcon"
                        Margin="3,0,0,0"
                        Foreground="DarkGray"
                        IsHitTestVisible="False"
                        Kind="Flag"
                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.(enhancedView:VerseDisplayViewModel.HasExternalNotes), Converter={StaticResource BoolToVisibilityConverter}}"/>
                </StackPanel>
                <iconPacks:PackIconModern
                    x:Name="ExternalNotesIcon"
                    Margin="0,2,0,0"
                    Foreground="Red"
                    IsHitTestVisible="False"
                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.(enhancedView:VerseDisplayViewModel.HasExternalNotes), Converter={StaticResource BoolToVisibilityConverter}}">
                    <iconPacks:PackIconModern.Style>
                        <Style TargetType="{x:Type iconPacks:PackIconModern}">
                            <Setter Property="Kind"
                                    Value="Flag"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MultipleExternalNotes}"
                                             Value="True">
                                    <Setter Property="Kind"
                                            Value="Flag"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </iconPacks:PackIconModern.Style>
                </iconPacks:PackIconModern>
            </Grid>

        </Border>


        <StackPanel Grid.Column="1"
                    Orientation="Vertical">
            <TextBlock
                Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TitleMargin}"
                Padding="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TitlePadding}"
                HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TitleHorizontalAlignment}"
                FlowDirection="LeftToRight"
                FontSize="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TitleFontSize}"
                Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=Title}"
                Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TitleVisibility}"/>
            <Border
                Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=VerseMargin}"
                Padding="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=VersePadding}"
                Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=VerseBackground}"
                BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=VerseBorderBrush}"
                BorderThickness="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=VerseBorderThickness}">
                <ItemsControl
                    FlowDirection="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.(enhancedView:VerseDisplayViewModel.IsSourceRtl), Converter={StaticResource BoolFlowDirectionConverter}}"
                    ItemTemplate="{StaticResource SourceTokenDisplay}"
                    ItemsPanel="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=SourceItemsPanelTemplate}"
                    ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=SourceTokens}"/>
            </Border>
            <Border
                Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=VerseMargin}"
                Padding="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=VersePadding}"
                Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=VerseBackground}"
                BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=VerseBorderBrush}"
                BorderThickness="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=VerseBorderThickness}"
                Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TargetVisibility}">
                <ItemsControl
                    FlowDirection="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.(enhancedView:VerseDisplayViewModel.IsTargetRtl), Converter={StaticResource BoolFlowDirectionConverter}}"
                    ItemTemplate="{StaticResource TargetTokenDisplay}"
                    ItemsPanel="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TargetItemsPanelTemplate}"
                    ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TargetTokens}"
                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TargetVisibility}"/>
            </Border>
        </StackPanel>
    </Grid>
</userControls:VerseDisplayBase>

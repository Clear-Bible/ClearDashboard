<UserControl x:Class="ClearDashboard.Wpf.Application.UserControls.AlignmentBulkReview"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:a="clr-namespace:ClearDashboard.Wpf.Application.Models.EnhancedView;assembly=ClearDashboard.Wpf.Application.Abstractions"
             xmlns:cm="http://caliburnmicro.com"
             xmlns:helpers="clr-namespace:ClearDashboard.Wpf.Application.Helpers;assembly=ClearDashboard.Wpf.Application.Abstractions"
             xmlns:resx="clr-namespace:ClearDashboard.Wpf.Application.Strings"
             xmlns:controls="clr-namespace:ClearDashboard.Wpf.Application.Controls"
             xmlns:converters="clr-namespace:ClearDashboard.Wpf.Application.Converters;assembly=ClearDashboard.Wpf.Application.Abstractions"
             xmlns:translation="clr-namespace:ClearDashboard.DAL.Alignment.Translation;assembly=ClearDashboard.DAL.Alignment"
             xmlns:userControls="clr-namespace:ClearDashboard.Wpf.Application.UserControls"
             xmlns:enhancedView="clr-namespace:ClearDashboard.Wpf.Application.Views.EnhancedView"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             helpers:Translation.ResourceManager="{x:Static resx:Resources.ResourceManager}"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:AlignmentTypesEnumToBooleanConverter x:Key="AlignmentTypesEnumToBooleanConverter"/>

        <Style TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.SystemControlForegroundAccent}" />
          
        </Style>
    </UserControl.Resources>

    <Grid  VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width=".20*" ></ColumnDefinition>
            <ColumnDefinition Width=".40*" ></ColumnDefinition>
            <ColumnDefinition Width=".20*" ></ColumnDefinition>
            <ColumnDefinition Width="*" ></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <materialDesign:Card Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Height="110" Margin="5">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <!--<ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>-->
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <ListBox Grid.Row="0" Grid.Column="0" 
                         Style="{StaticResource MaterialDesignToolToggleListBox}" 
                         Margin="4"  SelectedIndex="0" SelectionMode="Single" 
                         Height="28"
                         cm:Message.Attach="[Event SelectionChanged] = [Action OnCountByTextTypeChanged($eventArgs)]"
                         IsEnabled="{Binding FetchingData, Converter={StaticResource BooleanInversionConverter}}">
                    <ListBoxItem Content="{helpers:Localization BulkAlignmentReview_CountByTrainingText}" Tag="{x:Static a:BulkAlignmentReviewTags.CountsByTrainingText}"></ListBoxItem>
                    <ListBoxItem Content="{helpers:Localization BulkAlignmentReview_CountBySurfaceText}" Tag="{x:Static a:BulkAlignmentReviewTags.CountBySurfaceText}"></ListBoxItem>
                </ListBox>
                <ListBox Grid.Row="1" Grid.Column="0" 
                         Style="{StaticResource MaterialDesignToolToggleListBox}" 
                         Margin="4"  SelectedIndex="0" SelectionMode="Single" 
                         Height="28"
                         cm:Message.Attach="[Event SelectionChanged] = [Action OnPivotWordSourceChanged($eventArgs)]"
                         IsEnabled="{Binding FetchingData, Converter={StaticResource BooleanInversionConverter}}">
                    <ListBoxItem Content="{helpers:Localization BulkAlignmentReview_Source}" Tag="{x:Static a:BulkAlignmentReviewTags.Source}"></ListBoxItem>
                    <ListBoxItem Content="{helpers:Localization BulkAlignmentReview_Target}" Tag="{x:Static a:BulkAlignmentReviewTags.Target}"></ListBoxItem>
                </ListBox>
                <ListBox Grid.Row="2" Grid.Column="0"  x:Name="AlignedWordsOptionListBox"
                                                       Margin="4" Style="{StaticResource MaterialDesignToolToggleListBox}"
                                                       SelectionMode="Extended"
                                                       Height="28"
                                                       cm:Message.Attach="[Event SelectionChanged] = [Action OnAlignedWordOptionsChanged($eventArgs)]"
                                                       IsEnabled="{Binding FetchingData, Converter={StaticResource BooleanInversionConverter}}">
                    <ListBoxItem Content="{helpers:Localization BulkAlignmentReview_Machine}" 
                                 Tag="{x:Static a:BulkAlignmentReviewTags.Machine}" 
                                 IsSelected="{Binding 
                                 Path=AlignmentTypes,
                                 Converter={StaticResource AlignmentTypesEnumToBooleanConverter},
                                 ConverterParameter={x:Static translation:AlignmentTypes.FromAlignmentModel_Unverified_Not_Otherwise_Included}, Mode=TwoWay}"></ListBoxItem>
                    <ListBoxItem Content="{helpers:Localization BulkAlignmentReview_NeedsReview}" 
                                 Tag="{x:Static a:BulkAlignmentReviewTags.NeedsReview}"
                                 IsSelected="{Binding 
                                 Path=AlignmentTypes,
                                 Converter={StaticResource AlignmentTypesEnumToBooleanConverter},
                                 ConverterParameter={x:Static translation:AlignmentTypes.Assigned_Unverified}, Mode=TwoWay}"></ListBoxItem>
                    <ListBoxItem Content="{helpers:Localization BulkAlignmentReview_Disapprove}" 
                                 Tag="{x:Static a:BulkAlignmentReviewTags.Disapproved}"
                                 IsSelected="{Binding 
                                 Path=AlignmentTypes,
                                 Converter={StaticResource AlignmentTypesEnumToBooleanConverter},
                                 ConverterParameter={x:Static translation:AlignmentTypes.Assigned_Invalid}, Mode=TwoWay}"></ListBoxItem>
                    <ListBoxItem Content="{helpers:Localization BulkAlignmentReview_Approve}" 
                                 Tag="{x:Static a:BulkAlignmentReviewTags.Approved}"
                                 IsSelected="{Binding 
                                 Path=AlignmentTypes,
                                 Converter={StaticResource AlignmentTypesEnumToBooleanConverter},
                                 ConverterParameter={x:Static translation:AlignmentTypes.Assigned_Verified}, Mode=TwoWay}"></ListBoxItem>
                </ListBox>
            </Grid>
        </materialDesign:Card>

        <materialDesign:Card Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2" Height="110" Margin="5">
            <Grid VerticalAlignment="Top">
                <ListBox 
                            Style="{StaticResource MaterialDesignToolToggleListBox}"
                            Margin="4"
                            Height="28"
                            IsEnabled="{Binding FetchingData, Converter={StaticResource BooleanInversionConverter}}"
                            cm:Message.Attach="[Event SelectionChanged] = [Action OnAlignmentApprovalChanged($eventArgs)]">
                    <ListBoxItem Content="{helpers:Localization BulkAlignmentReview_ApproveSelected}" Tag="{x:Static a:BulkAlignmentReviewTags.ApproveSelected}"></ListBoxItem>
                    <ListBoxItem Content="{helpers:Localization BulkAlignmentReview_DisapproveSelected}" Tag="{x:Static a:BulkAlignmentReviewTags.DisapproveSelected}"></ListBoxItem>
                    <ListBoxItem Content="{helpers:Localization BulkAlignmentReview_MarkSelectedAsNeedsReview}" Tag="{x:Static a:BulkAlignmentReviewTags.MarkSelectedAsNeedsReview}"></ListBoxItem>
                </ListBox>
            </Grid>
        </materialDesign:Card>
        <materialDesign:Card Grid.Row="1" Grid.Column="0" Height="300" Margin="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="28" ></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" Content="{Binding PivotWordsCountMessage}" HorizontalAlignment="Left" Margin="4, 2, 4 ,0" Padding="0" Visibility="{Binding HasPivotWords, Converter={StaticResource BooleanToVisibilityConverter}}"></Label>
                    <Label Grid.Row="0" Content="{helpers:Localization BulkAlignmentReview_PivotedWords}"  HorizontalAlignment="Right" Margin="0, 2, 4 ,0" Padding="0"></Label>
                </Grid>
                <DataGrid Grid.Row="1" Name="PivotedWordsDataGrid"
                          ItemsSource="{Binding PivotWords}"
                          AutoGenerateColumns="False"
                          Margin="4"
                          VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                          VirtualizingPanel.VirtualizationMode="Recycling"
                          VirtualizingPanel.IsVirtualizing="True"
                          SelectionMode="Single"
                          SelectionUnit="FullRow"
                          ScrollViewer.CanContentScroll="True"
                          ScrollViewer.VerticalScrollBarVisibility="Visible"
                          IsReadOnly="True"
                          cm:Message.Attach="[Event SelectionChanged] = [Action OnPivotWordRowSelectionChanged($eventArgs)]"
                          IsEnabled="{Binding FetchingData, Converter={StaticResource BooleanInversionConverter}}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{helpers:Localization BulkAlignmentReview_Count}"  Binding="{Binding Count}" Width="80"/>
                        <DataGridTextColumn Header="{helpers:Localization BulkAlignmentReview_Part}"  Binding="{Binding Word}"  Width="80" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </materialDesign:Card>
        <materialDesign:Card Grid.Row="1" Grid.Column="1" Height="300" Margin="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="28" ></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" Content="{Binding AlignedWordsCountMessage}"  HorizontalAlignment="Left" Margin="4, 2, 4 ,0" Padding="0" Visibility="{Binding HasAlignedWords, Converter={StaticResource BooleanToVisibilityConverter}}"></Label>
                    <Label Grid.Row="0" Content="{helpers:Localization BulkAlignmentReview_AlignedWords}" Margin="0, 2, 4 ,0" Padding="0"  HorizontalAlignment="Right" ></Label>
                </Grid>
                <DataGrid Grid.Row="1" Name="SourceTargetCountDataGrid" 
                          ItemsSource="{Binding AlignedWords}" 
                          AutoGenerateColumns="False" 
                          Margin="4"
                          VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                          VirtualizingPanel.VirtualizationMode="Recycling"
                          VirtualizingPanel.IsVirtualizing="True"
                          SelectionMode="Single"
                          SelectionUnit="FullRow"
                          ScrollViewer.CanContentScroll="True"
                          ScrollViewer.VerticalScrollBarVisibility="Visible"
                          cm:Message.Attach="[Event SelectionChanged] = [Action OnSourceTargetCountRowSelectionChanged($eventArgs)]"
                          IsReadOnly="True"
                          IsEnabled="{Binding FetchingData, Converter={StaticResource BooleanInversionConverter}}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{helpers:Localization BulkAlignmentReview_Count}"  Binding="{Binding Count}" Width="80"/>
                        <DataGridTextColumn Header="{helpers:Localization BulkAlignmentReview_SourcePart}"  Binding="{Binding Source}" Width="130"/>
                        <DataGridTextColumn Header="{helpers:Localization BulkAlignmentReview_TargetPart}" Binding="{Binding Target}" Width="130" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </materialDesign:Card>
        <materialDesign:Card Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="1" Height="300"  Margin="5" >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" ></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.Column="0" Content="{Binding BulkAlignmentsCountMessage}"  HorizontalAlignment="Left" Margin="4, 2, 4 ,0" Padding="0" Visibility="{Binding HasBulkAlignments, Converter={StaticResource BooleanToVisibilityConverter}}"></Label>
                    <userControls:BookSelector Grid.Row="0" Grid.Column="1" Books="{Binding RelevantBooks}" CurrentBook="{Binding CurrentBook}" cm:Message.Attach="[Event SelectionChanged] = [Action OnBookChanged($eventArgs)];" HorizontalAlignment="Left" ></userControls:BookSelector>
                    <Label Grid.Row="0" Grid.Column="2" Content="{helpers:Localization BulkAlignmentReview_Alignments}"  HorizontalAlignment="Right" Margin="0, 2, 4 ,0" Padding="0"></Label>
                </Grid>
                <DataGrid Grid.Row="1" Grid.Column="0" 
                          Name="ApprovalDataGrid" 
                          ItemsSource="{Binding PagedBulkAlignments}" 
                          AutoGenerateColumns="False" 
                          HorizontalAlignment="Stretch"
                          Margin="4"
                          VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                          VirtualizingPanel.VirtualizationMode="Recycling"
                          VirtualizingPanel.IsVirtualizing="True"
                          SelectionMode="Single"
                          SelectionUnit="FullRow"
                          ScrollViewer.CanContentScroll="True"
                          ScrollViewer.VerticalScrollBarVisibility="Visible"
                          IsReadOnly="True"
                          IsEnabled="{Binding FetchingData, Converter={StaticResource BooleanInversionConverter}}">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <CheckBox cm:Message.Attach="[Event Checked] = [Action OnToggleAlignmentsChecked($source)];[Event Unchecked] = [Action OnToggleAlignmentsChecked($source)]" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                   <CheckBox Focusable="False" IsChecked="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="{helpers:Localization BulkAlignmentReview_Type}"  Binding="{Binding Type}" Width="100"/>
                        <DataGridTextColumn Header="{helpers:Localization BulkAlignmentReview_SourceRef}" Binding="{Binding SourceRef}" Width="125"/>
                        <DataGridTemplateColumn Header="{helpers:Localization BulkAlignmentReview_VerseText}" Width=".6*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <!--<StackPanel>
                                        <TextBlock Text="{Binding BulkAlignmentDisplayViewModel.DisplayTokens }" />
                                    </StackPanel>-->
                                    <userControls:ReadOnlyVerseDisplay 
                                        DataContext="{Binding BulkAlignmentDisplayViewModel}"
                                        HorizontalAlignment="Stretch"
                                        VerseBackground="Transparent"
                                        VerseBorderBrush="Transparent"
                                        VerseMargin="0"
                                        VersePadding="0"
                                        SourceFontFamily="{Binding ElementName=InnerListView, Path=DataContext.SourceFontFamily}"
                                        SourceFontSize="{Binding DataContext.SourceFontSizeValue, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=enhancedView:EnhancedView}}"
                                        TargetFontFamily="{Binding ElementName=InnerListView, Path=DataContext.TargetFontFamily}"
                                        TargetFontSize="{Binding DataContext.TargetFontSizeValue, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=enhancedView:EnhancedView}}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="{helpers:Localization Bcv_Sync}" Width="75">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button  cm:Message.Attach="[Event Click] = [Action OnSyncButtonClicked($dataContext)]" 
                                             Style="{StaticResource SmallTransparentStyle}" 
                                             Content="{iconPacks:PicolIcons Kind=Synchronize}"></Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Center" >
                    <Button Content="Previous"   cm:Message.Attach="[Event Click] = [Action OnPreviousPageClicked()]" Margin="2"/>
                    <Label  Margin="2,2,0,2" Content="{Binding PagedBulkAlignments.CurrentPage}" ContentStringFormat="Current Page: {0}">
                        
                    </Label>
                    <Label Margin="-2,2,2,2" Content="{Binding PagedBulkAlignments.PageCount}" ContentStringFormat="of {0}">
                       
                    </Label>
                    <Button Content="Next" cm:Message.Attach="[Event Click] = [Action OnNextPageClicked()]" Margin="2" />
                </StackPanel>
            </Grid>
        </materialDesign:Card>
    </Grid>

</UserControl>
